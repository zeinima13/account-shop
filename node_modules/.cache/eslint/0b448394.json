[{"C:\\Users\\ASUS\\CascadeProjects\\account-shop\\src\\main.js":"1","C:\\Users\\ASUS\\CascadeProjects\\account-shop\\src\\App.vue":"2","C:\\Users\\ASUS\\CascadeProjects\\account-shop\\src\\router\\index.js":"3","C:\\Users\\ASUS\\CascadeProjects\\account-shop\\src\\views\\admin\\Products.vue":"4","C:\\Users\\ASUS\\CascadeProjects\\account-shop\\src\\views\\Payment.vue":"5","C:\\Users\\ASUS\\CascadeProjects\\account-shop\\src\\views\\Shop.vue":"6"},{"size":418,"mtime":1737338578705,"results":"7","hashOfConfig":"8"},{"size":682,"mtime":1737340899207,"results":"9","hashOfConfig":"8"},{"size":614,"mtime":1737340592386,"results":"10","hashOfConfig":"8"},{"size":4846,"mtime":1737338562551,"results":"11","hashOfConfig":"8"},{"size":5038,"mtime":1737340257122,"results":"12","hashOfConfig":"8"},{"size":4298,"mtime":1737340221773,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1hrvbwy",{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},"C:\\Users\\ASUS\\CascadeProjects\\account-shop\\src\\main.js",[],"C:\\Users\\ASUS\\CascadeProjects\\account-shop\\src\\App.vue",[],"C:\\Users\\ASUS\\CascadeProjects\\account-shop\\src\\router\\index.js",[],"C:\\Users\\ASUS\\CascadeProjects\\account-shop\\src\\views\\admin\\Products.vue",["29"],"<template>\n  <div class=\"admin-products\">\n    <div class=\"header\">\n      <h2>商品管理</h2>\n      <el-button type=\"primary\" @click=\"showAddDialog\">添加商品</el-button>\n    </div>\n\n    <el-table :data=\"products\" style=\"width: 100%\">\n      <el-table-column prop=\"name\" label=\"商品名称\" />\n      <el-table-column prop=\"category\" label=\"分类\" />\n      <el-table-column prop=\"price\" label=\"价格\" />\n      <el-table-column prop=\"stock\" label=\"库存\" />\n      <el-table-column prop=\"status\" label=\"状态\">\n        <template #default=\"{ row }\">\n          <el-tag :type=\"row.status === '上架' ? 'success' : 'info'\">\n            {{ row.status }}\n          </el-tag>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"操作\">\n        <template #default=\"{ row }\">\n          <el-button-group>\n            <el-button type=\"primary\" @click=\"editProduct(row)\">编辑</el-button>\n            <el-button \n              :type=\"row.status === '上架' ? 'warning' : 'success'\"\n              @click=\"toggleStatus(row)\"\n            >\n              {{ row.status === '上架' ? '下架' : '上架' }}\n            </el-button>\n            <el-button type=\"danger\" @click=\"deleteProduct(row)\">删除</el-button>\n          </el-button-group>\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <!-- 添加/编辑商品对话框 -->\n    <el-dialog \n      :title=\"dialogType === 'add' ? '添加商品' : '编辑商品'\" \n      v-model=\"dialogVisible\"\n    >\n      <el-form :model=\"productForm\" label-width=\"80px\">\n        <el-form-item label=\"商品名称\">\n          <el-input v-model=\"productForm.name\" />\n        </el-form-item>\n        <el-form-item label=\"分类\">\n          <el-select v-model=\"productForm.category\">\n            <el-option \n              v-for=\"cat in categories\" \n              :key=\"cat.id\" \n              :label=\"cat.name\" \n              :value=\"cat.id\"\n            />\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"价格\">\n          <el-input-number v-model=\"productForm.price\" :min=\"0\" />\n        </el-form-item>\n        <el-form-item label=\"库存\">\n          <el-input-number v-model=\"productForm.stock\" :min=\"0\" />\n        </el-form-item>\n      </el-form>\n      <template #footer>\n        <el-button @click=\"dialogVisible = false\">取消</el-button>\n        <el-button type=\"primary\" @click=\"saveProduct\">确定</el-button>\n      </template>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { ref, reactive } from 'vue'\n\nexport default {\n  name: 'AdminProducts',\n  setup() {\n    const products = ref([\n      {\n        id: 1,\n        name: '微博-信用分510以上---6-9级老号',\n        category: '微博产品',\n        price: 99,\n        stock: 100,\n        status: '上架'\n      }\n    ])\n\n    const categories = [\n      { id: '1', name: '微博产品' },\n      { id: '2', name: '微博白号' },\n      { id: '3', name: '微博号' }\n    ]\n\n    const dialogVisible = ref(false)\n    const dialogType = ref('add')\n    const productForm = reactive({\n      name: '',\n      category: '',\n      price: 0,\n      stock: 0\n    })\n\n    const showAddDialog = () => {\n      dialogType.value = 'add'\n      Object.assign(productForm, {\n        name: '',\n        category: '',\n        price: 0,\n        stock: 0\n      })\n      dialogVisible.value = true\n    }\n\n    const editProduct = (product) => {\n      dialogType.value = 'edit'\n      Object.assign(productForm, product)\n      dialogVisible.value = true\n    }\n\n    const saveProduct = () => {\n      // 这里应该调用API保存商品\n      if (dialogType.value === 'add') {\n        products.value.push({\n          id: Date.now(),\n          ...productForm,\n          status: '上架'\n        })\n      } else {\n        const index = products.value.findIndex(p => p.id === productForm.id)\n        if (index !== -1) {\n          products.value[index] = { ...productForm }\n        }\n      }\n      dialogVisible.value = false\n    }\n\n    const toggleStatus = (product) => {\n      product.status = product.status === '上架' ? '下架' : '上架'\n    }\n\n    const deleteProduct = (product) => {\n      ElMessageBox.confirm('确定要删除该商品吗？', '提示', {\n        type: 'warning'\n      }).then(() => {\n        const index = products.value.findIndex(p => p.id === product.id)\n        if (index !== -1) {\n          products.value.splice(index, 1)\n        }\n      })\n    }\n\n    return {\n      products,\n      categories,\n      dialogVisible,\n      dialogType,\n      productForm,\n      showAddDialog,\n      editProduct,\n      saveProduct,\n      toggleStatus,\n      deleteProduct\n    }\n  }\n}\n</script>\n\n<style scoped>\n.admin-products {\n  padding: 20px;\n}\n\n.header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n}\n\n.header h2 {\n  margin: 0;\n}\n</style>\n","C:\\Users\\ASUS\\CascadeProjects\\account-shop\\src\\views\\Payment.vue",["30"],"<template>\n  <div class=\"payment-container\">\n    <div class=\"payment-card\">\n      <div class=\"order-info\">\n        <div class=\"success-icon\">\n          <el-icon><CircleCheckFilled /></el-icon>\n        </div>\n        <div class=\"order-details\">\n          <div class=\"order-title\">订单信息</div>\n          <div class=\"order-item\">\n            <span>订单号：</span>\n            <span>{{ orderId }}</span>\n          </div>\n          <div class=\"order-item\">\n            <span>付款金额：</span>\n            <span>{{ amount }} USDT</span>\n          </div>\n          <div class=\"warning-text\">\n            由于第三方充值限制规则，目前仅支持USDT充值，请耐心等待其他支付方式的开放。\n          </div>\n        </div>\n      </div>\n\n      <div class=\"payment-methods\">\n        <div class=\"section-title\">USDT - 请选择您的支付钱包</div>\n        <div class=\"wallet-list\">\n          <div v-for=\"wallet in wallets\" \n               :key=\"wallet.id\" \n               class=\"wallet-item\"\n               :class=\"{ active: selectedWallet === wallet.id }\"\n               @click=\"selectWallet(wallet)\">\n            <img :src=\"wallet.icon\" :alt=\"wallet.name\" class=\"wallet-icon\">\n            <div class=\"wallet-info\">\n              <div class=\"wallet-name\">{{ wallet.name }}</div>\n              <div class=\"wallet-type\">{{ wallet.type }}</div>\n              <div class=\"wallet-status\">{{ wallet.status }}</div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"payment-action\">\n        <el-button type=\"primary\" class=\"pay-button\" @click=\"confirmPayment\">\n          已完成支付\n        </el-button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, onMounted } from 'vue'\nimport { useRoute, useRouter } from 'vue-router'\nimport { ElMessage } from 'element-plus'\nimport { CircleCheckFilled } from '@element-plus/icons-vue'\n\nexport default {\n  name: 'Payment',\n  components: {\n    CircleCheckFilled\n  },\n  setup() {\n    const route = useRoute()\n    const router = useRouter()\n    const orderId = ref('')\n    const amount = ref(0)\n    const selectedWallet = ref(null)\n\n    const wallets = ref([\n      {\n        id: 1,\n        name: 'imToken',\n        type: 'TRC20 / ERC20 / BEP20',\n        status: '【快速支付】点击充充值，请手机浏览访问该网站',\n        icon: '/wallet-icons/imtoken.png'\n      },\n      {\n        id: 2,\n        name: 'TokenPocket',\n        type: 'TRC20 / ERC20 / BEP20',\n        status: '【快速支付】点击充充值，请手机浏览访问该网站',\n        icon: '/wallet-icons/tokenpocket.png'\n      },\n      {\n        id: 3,\n        name: '欧易web3钱包',\n        type: 'TRC20 / ERC20',\n        status: '请使用欧易web3钱包，交易确认后系统充值到账',\n        icon: '/wallet-icons/okx.png'\n      }\n    ])\n\n    onMounted(() => {\n      orderId.value = 'BL' + Date.now()\n      amount.value = route.query.amount || 0\n    })\n\n    const selectWallet = (wallet) => {\n      selectedWallet.value = wallet.id\n    }\n\n    const confirmPayment = () => {\n      if (!selectedWallet.value) {\n        ElMessage.error('请选择支付钱包')\n        return\n      }\n      ElMessage.success('支付确认成功！')\n      router.push('/')\n    }\n\n    return {\n      orderId,\n      amount,\n      wallets,\n      selectedWallet,\n      selectWallet,\n      confirmPayment\n    }\n  }\n}\n</script>\n\n<style scoped>\n.payment-container {\n  min-height: 100vh;\n  background: #f5f7fa;\n  padding: 20px;\n}\n\n.payment-card {\n  max-width: 800px;\n  margin: 0 auto;\n  background: white;\n  border-radius: 8px;\n  box-shadow: 0 2px 12px 0 rgba(0,0,0,0.1);\n}\n\n.order-info {\n  padding: 20px;\n  background: #f0f9eb;\n  border-radius: 8px 8px 0 0;\n  display: flex;\n  gap: 20px;\n}\n\n.success-icon {\n  color: #67c23a;\n  font-size: 24px;\n}\n\n.order-details {\n  flex: 1;\n}\n\n.order-title {\n  font-size: 18px;\n  font-weight: bold;\n  margin-bottom: 15px;\n}\n\n.order-item {\n  margin: 10px 0;\n  color: #666;\n}\n\n.warning-text {\n  color: #e6a23c;\n  font-size: 14px;\n  margin-top: 15px;\n}\n\n.payment-methods {\n  padding: 20px;\n}\n\n.section-title {\n  font-size: 16px;\n  font-weight: bold;\n  margin-bottom: 20px;\n  color: #303133;\n}\n\n.wallet-list {\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n}\n\n.wallet-item {\n  display: flex;\n  align-items: center;\n  gap: 15px;\n  padding: 15px;\n  border: 1px solid #ebeef5;\n  border-radius: 4px;\n  cursor: pointer;\n  transition: all 0.3s;\n}\n\n.wallet-item:hover {\n  border-color: #409eff;\n}\n\n.wallet-item.active {\n  border-color: #409eff;\n  background: #ecf5ff;\n}\n\n.wallet-icon {\n  width: 40px;\n  height: 40px;\n  object-fit: contain;\n}\n\n.wallet-info {\n  flex: 1;\n}\n\n.wallet-name {\n  font-weight: bold;\n  margin-bottom: 5px;\n}\n\n.wallet-type {\n  color: #666;\n  font-size: 14px;\n  margin-bottom: 5px;\n}\n\n.wallet-status {\n  color: #409eff;\n  font-size: 12px;\n}\n\n.payment-action {\n  padding: 20px;\n  text-align: center;\n  border-top: 1px solid #ebeef5;\n}\n\n.pay-button {\n  width: 200px;\n  height: 40px;\n}\n</style>\n","C:\\Users\\ASUS\\CascadeProjects\\account-shop\\src\\views\\Shop.vue",["31","32"],"<template>\n  <div class=\"shop-container\">\n    <div class=\"header\">\n      <div class=\"logo\">账户商店</div>\n    </div>\n    <div class=\"main-content\">\n      <div class=\"left-menu\">\n        <div class=\"category-title\">账户商品</div>\n        <el-menu\n          :default-active=\"activeCategory\"\n          class=\"category-menu\"\n          @select=\"handleCategorySelect\"\n        >\n          <el-menu-item v-for=\"cat in categories\" :key=\"cat.id\" :index=\"cat.id\">\n            {{ cat.name }}\n          </el-menu-item>\n        </el-menu>\n      </div>\n      \n      <div class=\"right-content\">\n        <div class=\"product-list\">\n          <div v-for=\"product in products\" :key=\"product.id\" class=\"product-item\" @click=\"selectProduct(product.id)\">\n            <div class=\"product-info\">\n              <div class=\"product-name\">{{ product.name }}</div>\n              <div class=\"product-details\" v-if=\"selectedProduct === product.id\">\n                <div class=\"price\">价格: {{ product.price }} USDT</div>\n                <div class=\"stock\">库存: {{ product.stock }}</div>\n                <el-input v-model=\"email\" placeholder=\"请输入邮箱\" class=\"email-input\" />\n                <el-button type=\"primary\" class=\"order-btn\" @click=\"submitOrder(product)\">\n                  立即下单\n                </el-button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, reactive, computed } from 'vue'\nimport { useRouter } from 'vue-router'\nimport { ElMessage } from 'element-plus'\n\nexport default {\n  name: 'Shop',\n  setup() {\n    const router = useRouter()\n    const activeCategory = ref('1')\n    const email = ref('')\n    const selectedProduct = ref(null)\n\n    const categories = [\n      { id: '1', name: '微博产品' },\n      { id: '2', name: '微博白号' },\n      { id: '3', name: '微博号' }\n    ]\n\n    const products = ref([\n      { \n        id: 1, \n        categoryId: '1',\n        name: '微博-信用分510以上---6-9级老号', \n        price: 99,\n        stock: 100\n      },\n      {\n        id: 2,\n        categoryId: '1',\n        name: '微博0-20级',\n        price: 49,\n        stock: 200\n      },\n      {\n        id: 3,\n        categoryId: '2',\n        name: '微博白号',\n        price: 29,\n        stock: 500\n      }\n    ])\n\n    const handleCategorySelect = (index) => {\n      activeCategory.value = index\n      selectedProduct.value = null\n    }\n\n    const filteredProducts = computed(() => {\n      return products.value.filter(p => p.categoryId === activeCategory.value)\n    })\n\n    const selectProduct = (productId) => {\n      selectedProduct.value = selectedProduct.value === productId ? null : productId\n    }\n\n    const submitOrder = (product) => {\n      if (!email.value) {\n        ElMessage.error('请输入邮箱')\n        return\n      }\n\n      router.push({\n        name: 'payment',\n        query: {\n          productId: product.id,\n          email: email.value,\n          amount: product.price\n        }\n      })\n    }\n\n    return {\n      activeCategory,\n      categories,\n      products: filteredProducts,\n      email,\n      selectedProduct,\n      handleCategorySelect,\n      selectProduct,\n      submitOrder\n    }\n  }\n}\n</script>\n\n<style scoped>\n.shop-container {\n  min-height: 100vh;\n  background: #f5f7fa;\n}\n\n.header {\n  background: linear-gradient(45deg, #4b9eff, #7cc2ff);\n  padding: 20px;\n  color: white;\n}\n\n.logo {\n  font-size: 24px;\n  font-weight: bold;\n}\n\n.main-content {\n  display: flex;\n  margin: 20px;\n  gap: 20px;\n}\n\n.left-menu {\n  width: 250px;\n  background: white;\n  border-radius: 8px;\n  box-shadow: 0 2px 12px 0 rgba(0,0,0,0.1);\n}\n\n.category-title {\n  padding: 15px;\n  font-size: 16px;\n  font-weight: bold;\n  border-bottom: 1px solid #eee;\n}\n\n.right-content {\n  flex: 1;\n  background: white;\n  border-radius: 8px;\n  padding: 20px;\n  box-shadow: 0 2px 12px 0 rgba(0,0,0,0.1);\n}\n\n.product-item {\n  padding: 15px;\n  border-bottom: 1px solid #eee;\n  cursor: pointer;\n}\n\n.product-name {\n  color: #333;\n  font-size: 14px;\n}\n\n.product-details {\n  margin-top: 15px;\n  padding: 15px;\n  background: #f8f9fa;\n  border-radius: 4px;\n}\n\n.price, .stock {\n  margin-bottom: 10px;\n  color: #666;\n}\n\n.email-input {\n  margin: 10px 0;\n}\n\n.order-btn {\n  width: 100%;\n}\n</style>\n",{"ruleId":"33","severity":2,"message":"34","line":141,"column":7,"nodeType":"35","messageId":"36","endLine":141,"endColumn":19},{"ruleId":"37","severity":2,"message":"38","line":58,"column":9,"nodeType":"39","messageId":"40","endLine":58,"endColumn":18},{"ruleId":"41","severity":2,"message":"42","line":42,"column":15,"nodeType":"35","messageId":"43","endLine":42,"endColumn":23},{"ruleId":"37","severity":2,"message":"44","line":47,"column":9,"nodeType":"39","messageId":"40","endLine":47,"endColumn":15},"no-undef","'ElMessageBox' is not defined.","Identifier","undef","vue/multi-word-component-names","Component name \"Payment\" should always be multi-word.","Literal","unexpected","no-unused-vars","'reactive' is defined but never used.","unusedVar","Component name \"Shop\" should always be multi-word."]