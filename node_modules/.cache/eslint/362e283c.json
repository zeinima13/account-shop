[{"C:\\Users\\ASUS\\CascadeProjects\\account-shop\\src\\main.js":"1","C:\\Users\\ASUS\\CascadeProjects\\account-shop\\src\\App.vue":"2","C:\\Users\\ASUS\\CascadeProjects\\account-shop\\src\\router\\index.js":"3","C:\\Users\\ASUS\\CascadeProjects\\account-shop\\src\\views\\Shop.vue":"4","C:\\Users\\ASUS\\CascadeProjects\\account-shop\\src\\views\\Payment.vue":"5","C:\\Users\\ASUS\\CascadeProjects\\account-shop\\src\\views\\admin\\Login.vue":"6","C:\\Users\\ASUS\\CascadeProjects\\account-shop\\src\\views\\admin\\Products.vue":"7"},{"size":935,"mtime":1737366120749,"results":"8","hashOfConfig":"9"},{"size":457,"mtime":1737344801356,"results":"10","hashOfConfig":"9"},{"size":1213,"mtime":1737364458638,"results":"11","hashOfConfig":"9"},{"size":9070,"mtime":1737368257374,"results":"12","hashOfConfig":"9"},{"size":5841,"mtime":1737366140872,"results":"13","hashOfConfig":"9"},{"size":2933,"mtime":1737366147741,"results":"14","hashOfConfig":"9"},{"size":5854,"mtime":1737363998607,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1hrvbwy",{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\ASUS\\CascadeProjects\\account-shop\\src\\main.js",[],"C:\\Users\\ASUS\\CascadeProjects\\account-shop\\src\\App.vue",[],"C:\\Users\\ASUS\\CascadeProjects\\account-shop\\src\\router\\index.js",[],"C:\\Users\\ASUS\\CascadeProjects\\account-shop\\src\\views\\Shop.vue",[],"C:\\Users\\ASUS\\CascadeProjects\\account-shop\\src\\views\\Payment.vue",["31"],"<template>\n  <div class=\"payment-container\">\n    <div class=\"payment-box\">\n      <div class=\"order-info\">\n        <h2>订单信息</h2>\n        <div class=\"info-item\">\n          <span class=\"label\">订单编号:</span>\n          <span class=\"value\">{{ orderId }}</span>\n        </div>\n        <div class=\"info-item\">\n          <span class=\"label\">商品名称:</span>\n          <span class=\"value\">{{ order.productName }}</span>\n        </div>\n        <div class=\"info-item\">\n          <span class=\"label\">购买数量:</span>\n          <span class=\"value\">{{ order.quantity }}</span>\n        </div>\n        <div class=\"info-item\">\n          <span class=\"label\">支付金额:</span>\n          <span class=\"value price\">¥{{ order.total }}</span>\n        </div>\n      </div>\n\n      <div class=\"payment-method\">\n        <h3>选择支付方式</h3>\n        <div class=\"wallet-options\">\n          <div \n            v-for=\"wallet in wallets\" \n            :key=\"wallet.id\"\n            class=\"wallet-item\"\n            :class=\"{ active: selectedWallet === wallet.id }\"\n            @click=\"selectWallet(wallet.id)\"\n          >\n            <img :src=\"wallet.icon\" :alt=\"wallet.name\">\n            <span>{{ wallet.name }}</span>\n          </div>\n        </div>\n      </div>\n\n      <div v-if=\"selectedWallet\" class=\"payment-qr\">\n        <div class=\"qr-code\">\n          <!-- 这里放二维码图片 -->\n          <img src=\"/qr-code.png\" alt=\"支付二维码\">\n        </div>\n        <div class=\"wallet-address\">\n          <p>钱包地址：</p>\n          <div class=\"address-box\">\n            <span>{{ walletAddress }}</span>\n            <el-button \n              type=\"primary\" \n              size=\"small\"\n              @click=\"copyAddress\"\n            >\n              复制\n            </el-button>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"payment-tips\">\n        <p>支付完成后请等待系统自动确认</p>\n        <p>如有问题请联系客服</p>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, onMounted } from 'vue'\nimport { useRoute } from 'vue-router'\nimport { ElMessage } from 'element-plus'\n\nexport default {\n  name: 'PaymentPage',\n  setup() {\n    const route = useRoute()\n    const order = ref({})\n    const orderId = ref('')\n    const selectedWallet = ref('')\n    const walletAddress = ref('TRx1234567890abcdef1234567890abcdef12')\n\n    const wallets = [\n      { id: 'imtoken', name: 'imToken', icon: '/wallet-icons/imtoken.svg' },\n      { id: 'tokenpocket', name: 'TokenPocket', icon: '/wallet-icons/tokenpocket.svg' },\n      { id: 'okx', name: 'OKX', icon: '/wallet-icons/okx.svg' }\n    ]\n\n    onMounted(() => {\n      // 生成随机订单号\n      orderId.value = 'ORD' + Date.now().toString().slice(-8)\n      \n      // 获取订单信息\n      try {\n        const orderData = JSON.parse(route.params.order || '{}')\n        order.value = orderData\n      } catch (error) {\n        console.error('Failed to parse order data:', error)\n        ElMessage.error('订单数据错误')\n      }\n    })\n\n    const selectWallet = (walletId) => {\n      selectedWallet.value = walletId\n    }\n\n    const copyAddress = () => {\n      navigator.clipboard.writeText(walletAddress.value)\n        .then(() => {\n          ElMessage.success('地址已复制')\n        })\n        .catch(() => {\n          ElMessage.error('复制失败')\n        })\n    }\n\n    return {\n      order,\n      orderId,\n      wallets,\n      selectedWallet,\n      walletAddress,\n      selectWallet,\n      copyAddress\n    }\n  }\n}\n</script>\n\n<style scoped>\n.payment-container {\n  min-height: 100vh;\n  background: #f5f7fa;\n  display: flex;\n  justify-content: center;\n  padding: 20px;\n}\n\n.payment-box {\n  width: 100%;\n  max-width: 500px;\n  background: white;\n  padding: 30px;\n  border-radius: 8px;\n  box-shadow: 0 2px 12px 0 rgba(0,0,0,0.1);\n}\n\n.order-info {\n  margin-bottom: 30px;\n}\n\n.order-info h2 {\n  margin: 0 0 20px;\n  color: #303133;\n  font-size: 20px;\n}\n\n.info-item {\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 15px;\n  font-size: 14px;\n}\n\n.info-item .label {\n  color: #909399;\n}\n\n.info-item .value {\n  color: #303133;\n}\n\n.info-item .price {\n  color: #f56c6c;\n  font-size: 16px;\n  font-weight: bold;\n}\n\n.payment-method {\n  margin-bottom: 30px;\n}\n\n.payment-method h3 {\n  margin: 0 0 15px;\n  color: #303133;\n}\n\n.wallet-options {\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  gap: 15px;\n}\n\n.wallet-item {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 15px;\n  border: 1px solid #dcdfe6;\n  border-radius: 4px;\n  cursor: pointer;\n  transition: all 0.3s;\n}\n\n.wallet-item:hover {\n  border-color: #409eff;\n}\n\n.wallet-item.active {\n  border-color: #409eff;\n  background: #ecf5ff;\n}\n\n.wallet-item img {\n  width: 40px;\n  height: 40px;\n  margin-bottom: 8px;\n}\n\n.wallet-item span {\n  font-size: 12px;\n  color: #606266;\n}\n\n.payment-qr {\n  margin: 30px 0;\n  text-align: center;\n}\n\n.qr-code {\n  margin-bottom: 20px;\n}\n\n.qr-code img {\n  width: 200px;\n  height: 200px;\n}\n\n.wallet-address {\n  margin-top: 20px;\n}\n\n.wallet-address p {\n  margin: 0 0 10px;\n  color: #909399;\n}\n\n.address-box {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 10px;\n  background: #f5f7fa;\n  padding: 10px;\n  border-radius: 4px;\n}\n\n.address-box span {\n  font-family: monospace;\n  color: #606266;\n}\n\n.payment-tips {\n  margin-top: 30px;\n  text-align: center;\n  color: #909399;\n  font-size: 14px;\n}\n\n.payment-tips p {\n  margin: 5px 0;\n}\n\n/* 移动端优化 */\n@media screen and (max-width: 768px) {\n  .payment-container {\n    padding: 10px;\n  }\n\n  .payment-box {\n    padding: 20px;\n  }\n\n  .wallet-options {\n    grid-template-columns: repeat(2, 1fr);\n  }\n\n  .address-box {\n    flex-direction: column;\n    gap: 10px;\n  }\n\n  .address-box span {\n    word-break: break-all;\n  }\n}\n</style>\n","C:\\Users\\ASUS\\CascadeProjects\\account-shop\\src\\views\\admin\\Login.vue",[],"C:\\Users\\ASUS\\CascadeProjects\\account-shop\\src\\views\\admin\\Products.vue",[],{"ruleId":"32","severity":1,"message":"33","line":97,"column":9,"nodeType":"34","messageId":"35","endLine":97,"endColumn":22},"no-console","Unexpected console statement.","MemberExpression","unexpected"]