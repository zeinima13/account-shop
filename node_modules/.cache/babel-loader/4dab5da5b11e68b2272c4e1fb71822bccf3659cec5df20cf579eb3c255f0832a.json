{"ast":null,"code":"import _slicedToArray from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport \"core-js/modules/es.number.parse-int.js\";\nimport { ref, onMounted, onBeforeUnmount, watch } from 'vue';\nimport { useResizeObserver } from '@vueuse/core';\nvar useAutoResize = function useAutoResize(props) {\n  var sizer = ref();\n  var width$ = ref(0);\n  var height$ = ref(0);\n  var resizerStopper;\n  onMounted(function () {\n    resizerStopper = useResizeObserver(sizer, function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 1),\n        entry = _ref2[0];\n      var _entry$contentRect = entry.contentRect,\n        width = _entry$contentRect.width,\n        height = _entry$contentRect.height;\n      var _getComputedStyle = getComputedStyle(entry.target),\n        paddingLeft = _getComputedStyle.paddingLeft,\n        paddingRight = _getComputedStyle.paddingRight,\n        paddingTop = _getComputedStyle.paddingTop,\n        paddingBottom = _getComputedStyle.paddingBottom;\n      var left = Number.parseInt(paddingLeft) || 0;\n      var right = Number.parseInt(paddingRight) || 0;\n      var top = Number.parseInt(paddingTop) || 0;\n      var bottom = Number.parseInt(paddingBottom) || 0;\n      width$.value = width - left - right;\n      height$.value = height - top - bottom;\n    }).stop;\n  });\n  onBeforeUnmount(function () {\n    resizerStopper == null ? void 0 : resizerStopper();\n  });\n  watch([width$, height$], function (_ref3) {\n    var _ref4 = _slicedToArray(_ref3, 2),\n      width = _ref4[0],\n      height = _ref4[1];\n    var _a;\n    (_a = props.onResize) == null ? void 0 : _a.call(props, {\n      width: width,\n      height: height\n    });\n  });\n  return {\n    sizer: sizer,\n    width: width$,\n    height: height$\n  };\n};\nexport { useAutoResize };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}