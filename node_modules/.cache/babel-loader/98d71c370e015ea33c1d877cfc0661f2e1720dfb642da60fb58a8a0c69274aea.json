{"ast":null,"code":"import _objectSpread from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.array.some.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.some.js\";\nimport { defineComponent, ref, onMounted, computed, provide, reactive, toRefs, watch, openBlock, createElementBlock, unref, normalizeClass, renderSlot, nextTick } from 'vue';\nimport { radioGroupProps, radioGroupEmits } from './radio-group.mjs';\nimport { radioGroupKey } from './constants.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { useId } from '../../../hooks/use-id/index.mjs';\nimport { useFormItem, useFormItemInputId } from '../../form/src/hooks/use-form-item.mjs';\nimport { debugWarn } from '../../../utils/error.mjs';\nimport { UPDATE_MODEL_EVENT } from '../../../constants/event.mjs';\nvar __default__ = defineComponent({\n  name: \"ElRadioGroup\"\n});\nvar _sfc_main = /* @__PURE__ */defineComponent(_objectSpread(_objectSpread({}, __default__), {}, {\n  props: radioGroupProps,\n  emits: radioGroupEmits,\n  setup: function setup(__props, _ref) {\n    var emit = _ref.emit;\n    var props = __props;\n    var ns = useNamespace(\"radio\");\n    var radioId = useId();\n    var radioGroupRef = ref();\n    var _useFormItem = useFormItem(),\n      formItem = _useFormItem.formItem;\n    var _useFormItemInputId = useFormItemInputId(props, {\n        formItemContext: formItem\n      }),\n      groupId = _useFormItemInputId.inputId,\n      isLabeledByFormItem = _useFormItemInputId.isLabeledByFormItem;\n    var changeEvent = function changeEvent(value) {\n      emit(UPDATE_MODEL_EVENT, value);\n      nextTick(function () {\n        return emit(\"change\", value);\n      });\n    };\n    onMounted(function () {\n      var radios = radioGroupRef.value.querySelectorAll(\"[type=radio]\");\n      var firstLabel = radios[0];\n      if (!Array.from(radios).some(function (radio) {\n        return radio.checked;\n      }) && firstLabel) {\n        firstLabel.tabIndex = 0;\n      }\n    });\n    var name = computed(function () {\n      return props.name || radioId.value;\n    });\n    provide(radioGroupKey, reactive(_objectSpread(_objectSpread({}, toRefs(props)), {}, {\n      changeEvent: changeEvent,\n      name: name\n    })));\n    watch(function () {\n      return props.modelValue;\n    }, function () {\n      if (props.validateEvent) {\n        formItem == null ? void 0 : formItem.validate(\"change\")[\"catch\"](function (err) {\n          return debugWarn(err);\n        });\n      }\n    });\n    return function (_ctx, _cache) {\n      return openBlock(), createElementBlock(\"div\", {\n        id: unref(groupId),\n        ref_key: \"radioGroupRef\",\n        ref: radioGroupRef,\n        \"class\": normalizeClass(unref(ns).b(\"group\")),\n        role: \"radiogroup\",\n        \"aria-label\": !unref(isLabeledByFormItem) ? _ctx.ariaLabel || \"radio-group\" : void 0,\n        \"aria-labelledby\": unref(isLabeledByFormItem) ? unref(formItem).labelId : void 0\n      }, [renderSlot(_ctx.$slots, \"default\")], 10, [\"id\", \"aria-label\", \"aria-labelledby\"]);\n    };\n  }\n}));\nvar RadioGroup = /* @__PURE__ */_export_sfc(_sfc_main, [[\"__file\", \"radio-group.vue\"]]);\nexport { RadioGroup as default };","map":{"version":3,"names":["name","ns","useNamespace","radioId","useId","radioGroupRef","ref","_useFormItem","useFormItem","formItem","_useFormItemInputId","useFormItemInputId","props","formItemContext","groupId","inputId","isLabeledByFormItem","changeEvent","value","emit","UPDATE_MODEL_EVENT","nextTick","onMounted","radios","querySelectorAll","firstLabel","Array","from","some","radio","checked","tabIndex","computed","provide","radioGroupKey","reactive","_objectSpread","toRefs","watch","modelValue","validateEvent","validate","err","debugWarn","_ctx","_cache","openBlock","createElementBlock","id","unref","ref_key","normalizeClass","b"],"sources":["../../../../../../packages/components/radio/src/radio-group.vue"],"sourcesContent":["<template>\n  <div\n    :id=\"groupId\"\n    ref=\"radioGroupRef\"\n    :class=\"ns.b('group')\"\n    role=\"radiogroup\"\n    :aria-label=\"!isLabeledByFormItem ? ariaLabel || 'radio-group' : undefined\"\n    :aria-labelledby=\"isLabeledByFormItem ? formItem!.labelId : undefined\"\n  >\n    <slot />\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport {\n  computed,\n  nextTick,\n  onMounted,\n  provide,\n  reactive,\n  ref,\n  toRefs,\n  watch,\n} from 'vue'\nimport { useFormItem, useFormItemInputId } from '@element-plus/components/form'\nimport { UPDATE_MODEL_EVENT } from '@element-plus/constants'\nimport { useId, useNamespace } from '@element-plus/hooks'\nimport { debugWarn } from '@element-plus/utils'\nimport { radioGroupEmits, radioGroupProps } from './radio-group'\nimport { radioGroupKey } from './constants'\n\nimport type { RadioGroupProps } from './radio-group'\n\ndefineOptions({\n  name: 'ElRadioGroup',\n})\n\nconst props = defineProps(radioGroupProps)\nconst emit = defineEmits(radioGroupEmits)\n\nconst ns = useNamespace('radio')\nconst radioId = useId()\nconst radioGroupRef = ref<HTMLDivElement>()\nconst { formItem } = useFormItem()\nconst { inputId: groupId, isLabeledByFormItem } = useFormItemInputId(props, {\n  formItemContext: formItem,\n})\n\nconst changeEvent = (value: RadioGroupProps['modelValue']) => {\n  emit(UPDATE_MODEL_EVENT, value)\n  nextTick(() => emit('change', value))\n}\n\nonMounted(() => {\n  const radios =\n    radioGroupRef.value!.querySelectorAll<HTMLInputElement>('[type=radio]')\n  const firstLabel = radios[0]\n  if (!Array.from(radios).some((radio) => radio.checked) && firstLabel) {\n    firstLabel.tabIndex = 0\n  }\n})\n\nconst name = computed(() => {\n  return props.name || radioId.value\n})\n\nprovide(\n  radioGroupKey,\n  reactive({\n    ...toRefs(props),\n    changeEvent,\n    name,\n  })\n)\n\nwatch(\n  () => props.modelValue,\n  () => {\n    if (props.validateEvent) {\n      formItem?.validate('change').catch((err) => debugWarn(err))\n    }\n  }\n)\n</script>\n"],"mappings":";;;;;;;;;;;;;;;;;iCAiCc;EACZA,IAAM;AACR;;;;;;;IAKM,IAAAC,EAAA,GAAKC,YAAA,CAAa,OAAO;IAC/B,IAAMC,OAAA,GAAUC,KAAM;IACtB,IAAMC,aAAA,GAAgBC,GAAoB;IACpC,IAAAC,YAAA,GAAeC,WAAY;MAAzBC,QAAS,GAAAF,YAAA,CAATE,QAAS;IACjB,IAAAC,mBAAA,GAAkDC,kBAAA,CAAmBC,KAAO;QAC1EC,eAAiB,EAAAJ;MAAA,CAClB;MAFgBK,OAAA,GAAAJ,mBAAA,CAATK,OAAS;MAASC,mBAAoB,GAAAN,mBAAA,CAApBM,mBAAoB;IAIxC,IAAAC,WAAA,GAAc,SAAdA,YAAeC,KAAyC;MAC5DC,IAAA,CAAKC,kBAAA,EAAoBF,KAAK;MAC9BG,QAAA,CAAS;QAAA,OAAMF,IAAA,CAAK,QAAU,EAAAD,KAAK,CAAC;MAAA;IAAA,CACtC;IAEAI,SAAA,CAAU,YAAM;MACd,IAAMC,MACJ,GAAAlB,aAAA,CAAca,KAAO,CAAAM,gBAAA,CAAmC,cAAc;MAClE,IAAAC,UAAA,GAAaF,MAAA,CAAO,CAAC;MACvB,KAACG,KAAM,CAAAC,IAAA,CAAKJ,MAAM,EAAEK,IAAK,WAACC,KAAU;QAAA,OAAAA,KAAA,CAAMC,OAAO;MAAA,MAAKL,UAAY;QACpEA,UAAA,CAAWM,QAAW;MAAA;IACxB,CACD;IAEK,IAAA/B,IAAA,GAAOgC,QAAA,CAAS,YAAM;MACnB,OAAApB,KAAA,CAAMZ,IAAA,IAAQG,OAAQ,CAAAe,KAAA;IAAA,CAC9B;IAEDe,OAAA,CAAAC,aAAA,EAAAC,QAAA,CAAAC,aAAA,CAAAA,aAAA,KACEC,MAAA,CAAAzB,KAAA;MACAK,WAAS,EAATA,WAAS;MACPjB,IAAA,EAAAA;IAAA,EACA;IACAsC,KAAA;MAAA,OAAA1B,KAAA,CAAA2B,UAAA;IAAA;MACF,IAAC3B,KAAA,CAAA4B,aAAA;QACH/B,QAAA,oBAAAA,QAAA,CAAAgC,QAAA,8BAAAC,GAAA;UAAA,OAAAC,SAAA,CAAAD,GAAA;QAAA;MAEA;IAAA,EACE;IAAY,OACN,UAAAE,IAAA,EAAAC,MAAA;MACJ,OAAAC,SAAyB,IAAAC,kBAAA;QACbC,EAAA,EAAAC,KAAA,CAAAnC,OAAA;QACZoC,OAAA;QACF5C,GAAA,EAAAD,aAAA;QACF,SAAA8C,cAAA,CAAAF,KAAA,CAAAhD,EAAA,EAAAmD,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}