{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport { createElementVNode as _createElementVNode, unref as _unref, createVNode as _createVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"login-container\"\n};\nvar _hoisted_2 = {\n  \"class\": \"login-box\"\n};\nimport { ref, reactive } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { ElMessage } from 'element-plus';\nimport { User, Lock } from '@element-plus/icons-vue';\nexport default {\n  __name: 'Login',\n  setup: function setup(__props) {\n    var router = useRouter();\n    var loading = ref(false);\n    var loginForm = reactive({\n      username: '',\n      password: ''\n    });\n    var loginRules = {\n      username: [{\n        required: true,\n        message: '请输入用户名',\n        trigger: 'blur'\n      }],\n      password: [{\n        required: true,\n        message: '请输入密码',\n        trigger: 'blur'\n      }]\n    };\n    var handleLogin = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              if (!loading.value) {\n                _context.next = 2;\n                break;\n              }\n              return _context.abrupt(\"return\");\n            case 2:\n              loading.value = true;\n              try {\n                // 这里应该调用真实的登录API\n                // 现在为了演示，使用硬编码的用户名和密码\n                if (loginForm.username === 'admin' && loginForm.password === 'admin123') {\n                  localStorage.setItem('adminToken', 'demo-token');\n                  ElMessage.success('登录成功');\n                  router.push('/admin/products');\n                } else {\n                  ElMessage.error('用户名或密码错误');\n                }\n              } catch (error) {\n                ElMessage.error('登录失败，请重试');\n              } finally {\n                loading.value = false;\n              }\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n      return function handleLogin() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    return function (_ctx, _cache) {\n      var _component_el_icon = _resolveComponent(\"el-icon\");\n      var _component_el_input = _resolveComponent(\"el-input\");\n      var _component_el_form_item = _resolveComponent(\"el-form-item\");\n      var _component_el_button = _resolveComponent(\"el-button\");\n      var _component_el_form = _resolveComponent(\"el-form\");\n      return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_cache[2] || (_cache[2] = _createElementVNode(\"h2\", null, \"管理员登录\", -1)), _createVNode(_component_el_form, {\n        ref: \"loginForm\",\n        model: loginForm,\n        rules: loginRules,\n        onSubmit: _withModifiers(handleLogin, [\"prevent\"])\n      }, {\n        \"default\": _withCtx(function () {\n          return [_createVNode(_component_el_form_item, {\n            prop: \"username\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_input, {\n                modelValue: loginForm.username,\n                \"onUpdate:modelValue\": _cache[0] || (_cache[0] = function ($event) {\n                  return loginForm.username = $event;\n                }),\n                placeholder: \"请输入用户名\"\n              }, {\n                prefix: _withCtx(function () {\n                  return [_createVNode(_component_el_icon, null, {\n                    \"default\": _withCtx(function () {\n                      return [_createVNode(_unref(User))];\n                    }),\n                    _: 1\n                  })];\n                }),\n                _: 1\n              }, 8, [\"modelValue\"])];\n            }),\n            _: 1\n          }), _createVNode(_component_el_form_item, {\n            prop: \"password\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_input, {\n                modelValue: loginForm.password,\n                \"onUpdate:modelValue\": _cache[1] || (_cache[1] = function ($event) {\n                  return loginForm.password = $event;\n                }),\n                type: \"password\",\n                placeholder: \"请输入密码\",\n                \"show-password\": \"\"\n              }, {\n                prefix: _withCtx(function () {\n                  return [_createVNode(_component_el_icon, null, {\n                    \"default\": _withCtx(function () {\n                      return [_createVNode(_unref(Lock))];\n                    }),\n                    _: 1\n                  })];\n                }),\n                _: 1\n              }, 8, [\"modelValue\"])];\n            }),\n            _: 1\n          }), _createVNode(_component_el_form_item, null, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_button, {\n                type: \"primary\",\n                \"class\": \"submit-button\",\n                loading: loading.value,\n                onClick: handleLogin\n              }, {\n                \"default\": _withCtx(function () {\n                  return [_createTextVNode(_toDisplayString(loading.value ? '登录中...' : '登录'), 1)];\n                }),\n                _: 1\n              }, 8, [\"loading\"])];\n            }),\n            _: 1\n          })];\n        }),\n        _: 1\n      }, 8, [\"model\"])])]);\n    };\n  }\n};","map":{"version":3,"names":["ref","reactive","useRouter","ElMessage","User","Lock","router","loading","loginForm","username","password","loginRules","required","message","trigger","handleLogin","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","value","abrupt","localStorage","setItem","success","push","error","stop","apply","arguments"],"sources":["C:/Users/ASUS/CascadeProjects/account-shop/src/views/admin/Login.vue"],"sourcesContent":["<template>\n  <div class=\"login-container\">\n    <div class=\"login-box\">\n      <h2>管理员登录</h2>\n      <el-form \n        ref=\"loginForm\"\n        :model=\"loginForm\"\n        :rules=\"loginRules\"\n        @submit.prevent=\"handleLogin\"\n      >\n        <el-form-item prop=\"username\">\n          <el-input\n            v-model=\"loginForm.username\"\n            placeholder=\"请输入用户名\"\n          >\n            <template #prefix>\n              <el-icon><User /></el-icon>\n            </template>\n          </el-input>\n        </el-form-item>\n        <el-form-item prop=\"password\">\n          <el-input\n            v-model=\"loginForm.password\"\n            type=\"password\"\n            placeholder=\"请输入密码\"\n            show-password\n          >\n            <template #prefix>\n              <el-icon><Lock /></el-icon>\n            </template>\n          </el-input>\n        </el-form-item>\n        <el-form-item>\n          <el-button \n            type=\"primary\" \n            class=\"submit-button\"\n            :loading=\"loading\"\n            @click=\"handleLogin\"\n          >\n            {{ loading ? '登录中...' : '登录' }}\n          </el-button>\n        </el-form-item>\n      </el-form>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, reactive } from 'vue'\nimport { useRouter } from 'vue-router'\nimport { ElMessage } from 'element-plus'\nimport { User, Lock } from '@element-plus/icons-vue'\n\nconst router = useRouter()\nconst loading = ref(false)\n\nconst loginForm = reactive({\n  username: '',\n  password: ''\n})\n\nconst loginRules = {\n  username: [\n    { required: true, message: '请输入用户名', trigger: 'blur' }\n  ],\n  password: [\n    { required: true, message: '请输入密码', trigger: 'blur' }\n  ]\n}\n\nconst handleLogin = async () => {\n  if (loading.value) return\n  loading.value = true\n  \n  try {\n    // 这里应该调用真实的登录API\n    // 现在为了演示，使用硬编码的用户名和密码\n    if (loginForm.username === 'admin' && loginForm.password === 'admin123') {\n      localStorage.setItem('adminToken', 'demo-token')\n      ElMessage.success('登录成功')\n      router.push('/admin/products')\n    } else {\n      ElMessage.error('用户名或密码错误')\n    }\n  } catch (error) {\n    ElMessage.error('登录失败，请重试')\n  } finally {\n    loading.value = false\n  }\n}\n</script>\n\n<style scoped>\n.login-container {\n  min-height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: #f5f7fa;\n}\n\n.login-box {\n  width: 100%;\n  max-width: 400px;\n  padding: 30px;\n  background: white;\n  border-radius: 8px;\n  box-shadow: 0 2px 12px 0 rgba(0,0,0,0.1);\n}\n\n.login-box h2 {\n  text-align: center;\n  margin-bottom: 30px;\n  color: #303133;\n}\n\n.submit-button {\n  width: 100%;\n}\n\n@media screen and (max-width: 768px) {\n  .login-box {\n    margin: 20px;\n    padding: 20px;\n  }\n}\n</style>\n"],"mappings":";;;;;;;;;;AAgDA,SAASA,GAAG,EAAEC,QAAQ,QAAQ,KAAI;AAClC,SAASC,SAAS,QAAQ,YAAW;AACrC,SAASC,SAAS,QAAQ,cAAa;AACvC,SAASC,IAAI,EAAEC,IAAI,QAAQ,yBAAwB;;;;IAEnD,IAAMC,MAAM,GAAGJ,SAAS,CAAC;IACzB,IAAMK,OAAO,GAAGP,GAAG,CAAC,KAAK;IAEzB,IAAMQ,SAAS,GAAGP,QAAQ,CAAC;MACzBQ,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE;IACZ,CAAC;IAED,IAAMC,UAAU,GAAG;MACjBF,QAAQ,EAAE,CACR;QAAEG,QAAQ,EAAE,IAAI;QAAEC,OAAO,EAAE,QAAQ;QAAEC,OAAO,EAAE;MAAO,EACtD;MACDJ,QAAQ,EAAE,CACR;QAAEE,QAAQ,EAAE,IAAI;QAAEC,OAAO,EAAE,OAAO;QAAEC,OAAO,EAAE;MAAO;IAExD;IAEA,IAAMC,WAAW;MAAA,IAAAC,IAAA,GAAAC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAAC,QAAA;QAAA,OAAAF,mBAAA,GAAAG,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cAAA,KACdlB,OAAO,CAACmB,KAAK;gBAAAH,QAAA,CAAAE,IAAA;gBAAA;cAAA;cAAA,OAAAF,QAAA,CAAAI,MAAA;YAAA;cACjBpB,OAAO,CAACmB,KAAK,GAAG,IAAG;cAEnB,IAAI;gBACF;gBACA;gBACA,IAAIlB,SAAS,CAACC,QAAQ,KAAK,OAAO,IAAID,SAAS,CAACE,QAAQ,KAAK,UAAU,EAAE;kBACvEkB,YAAY,CAACC,OAAO,CAAC,YAAY,EAAE,YAAY;kBAC/C1B,SAAS,CAAC2B,OAAO,CAAC,MAAM;kBACxBxB,MAAM,CAACyB,IAAI,CAAC,iBAAiB;gBAC/B,CAAC,MAAM;kBACL5B,SAAS,CAAC6B,KAAK,CAAC,UAAU;gBAC5B;cACF,CAAC,CAAC,OAAOA,KAAK,EAAE;gBACd7B,SAAS,CAAC6B,KAAK,CAAC,UAAU;cAC5B,CAAC,SAAS;gBACRzB,OAAO,CAACmB,KAAK,GAAG,KAAI;cACtB;YAAA;YAAA;cAAA,OAAAH,QAAA,CAAAU,IAAA;UAAA;QAAA,GAAAb,OAAA;MAAA,CACF;MAAA,gBAnBML,WAAWA,CAAA;QAAA,OAAAC,IAAA,CAAAkB,KAAA,OAAAC,SAAA;MAAA;IAAA,GAmBjB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}