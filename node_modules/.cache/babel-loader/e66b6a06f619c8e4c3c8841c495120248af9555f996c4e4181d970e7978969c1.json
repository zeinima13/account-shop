{"ast":null,"code":"import _defineProperty from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _toConsumableArray from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport { defineComponent, inject, ref, getCurrentInstance, provide, watch, nextTick, resolveComponent, withDirectives, openBlock, createElementBlock, normalizeClass, withModifiers, createElementVNode, normalizeStyle, createBlock, withCtx, resolveDynamicComponent, createCommentVNode, createVNode, Fragment, renderList, vShow } from 'vue';\nimport { ElCollapseTransition } from '../../collapse-transition/index.mjs';\nimport { ElCheckbox } from '../../checkbox/index.mjs';\nimport { ElIcon } from '../../icon/index.mjs';\nimport { Loading, CaretRight } from '@element-plus/icons-vue';\nimport NodeContent from './tree-node-content.mjs';\nimport { getNodeKey, handleCurrentChange } from './model/util.mjs';\nimport { useNodeExpandEventBroadcast } from './model/useNodeExpandEventBroadcast.mjs';\nimport { dragEventsKey } from './model/useDragNode.mjs';\nimport Node from './model/node.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { debugWarn } from '../../../utils/error.mjs';\nimport { isFunction, isString } from '@vue/shared';\nvar _sfc_main = defineComponent({\n  name: \"ElTreeNode\",\n  components: {\n    ElCollapseTransition: ElCollapseTransition,\n    ElCheckbox: ElCheckbox,\n    NodeContent: NodeContent,\n    ElIcon: ElIcon,\n    Loading: Loading\n  },\n  props: {\n    node: {\n      type: Node,\n      \"default\": function _default() {\n        return {};\n      }\n    },\n    props: {\n      type: Object,\n      \"default\": function _default() {\n        return {};\n      }\n    },\n    accordion: Boolean,\n    renderContent: Function,\n    renderAfterExpand: Boolean,\n    showCheckbox: {\n      type: Boolean,\n      \"default\": false\n    }\n  },\n  emits: [\"node-expand\"],\n  setup: function setup(props, ctx) {\n    var ns = useNamespace(\"tree\");\n    var _useNodeExpandEventBr = useNodeExpandEventBroadcast(props),\n      broadcastExpanded = _useNodeExpandEventBr.broadcastExpanded;\n    var tree = inject(\"RootTree\");\n    var expanded = ref(false);\n    var childNodeRendered = ref(false);\n    var oldChecked = ref(null);\n    var oldIndeterminate = ref(null);\n    var node$ = ref(null);\n    var dragEvents = inject(dragEventsKey);\n    var instance = getCurrentInstance();\n    provide(\"NodeInstance\", instance);\n    if (!tree) {\n      debugWarn(\"Tree\", \"Can not find node's tree.\");\n    }\n    if (props.node.expanded) {\n      expanded.value = true;\n      childNodeRendered.value = true;\n    }\n    var childrenKey = tree.props.props[\"children\"] || \"children\";\n    watch(function () {\n      var children = props.node.data[childrenKey];\n      return children && _toConsumableArray(children);\n    }, function () {\n      props.node.updateChildren();\n    });\n    watch(function () {\n      return props.node.indeterminate;\n    }, function (val) {\n      handleSelectChange(props.node.checked, val);\n    });\n    watch(function () {\n      return props.node.checked;\n    }, function (val) {\n      handleSelectChange(val, props.node.indeterminate);\n    });\n    watch(function () {\n      return props.node.childNodes.length;\n    }, function () {\n      return props.node.reInitChecked();\n    });\n    watch(function () {\n      return props.node.expanded;\n    }, function (val) {\n      nextTick(function () {\n        return expanded.value = val;\n      });\n      if (val) {\n        childNodeRendered.value = true;\n      }\n    });\n    var getNodeKey$1 = function getNodeKey$1(node) {\n      return getNodeKey(tree.props.nodeKey, node.data);\n    };\n    var getNodeClass = function getNodeClass(node) {\n      var nodeClassFunc = props.props[\"class\"];\n      if (!nodeClassFunc) {\n        return {};\n      }\n      var className;\n      if (isFunction(nodeClassFunc)) {\n        var data = node.data;\n        className = nodeClassFunc(data, node);\n      } else {\n        className = nodeClassFunc;\n      }\n      if (isString(className)) {\n        return _defineProperty({}, className, true);\n      } else {\n        return className;\n      }\n    };\n    var handleSelectChange = function handleSelectChange(checked, indeterminate) {\n      if (oldChecked.value !== checked || oldIndeterminate.value !== indeterminate) {\n        tree.ctx.emit(\"check-change\", props.node.data, checked, indeterminate);\n      }\n      oldChecked.value = checked;\n      oldIndeterminate.value = indeterminate;\n    };\n    var handleClick = function handleClick(e) {\n      handleCurrentChange(tree.store, tree.ctx.emit, function () {\n        var _a;\n        var nodeKeyProp = (_a = tree == null ? void 0 : tree.props) == null ? void 0 : _a.nodeKey;\n        if (nodeKeyProp) {\n          var curNodeKey = getNodeKey$1(props.node);\n          tree.store.value.setCurrentNodeKey(curNodeKey);\n        } else {\n          tree.store.value.setCurrentNode(props.node);\n        }\n      });\n      tree.currentNode.value = props.node;\n      if (tree.props.expandOnClickNode) {\n        handleExpandIconClick();\n      }\n      if (tree.props.checkOnClickNode && !props.node.disabled) {\n        handleCheckChange(null, {\n          target: {\n            checked: !props.node.checked\n          }\n        });\n      }\n      tree.ctx.emit(\"node-click\", props.node.data, props.node, instance, e);\n    };\n    var handleContextMenu = function handleContextMenu(event) {\n      if (tree.instance.vnode.props[\"onNodeContextmenu\"]) {\n        event.stopPropagation();\n        event.preventDefault();\n      }\n      tree.ctx.emit(\"node-contextmenu\", event, props.node.data, props.node, instance);\n    };\n    var handleExpandIconClick = function handleExpandIconClick() {\n      if (props.node.isLeaf) return;\n      if (expanded.value) {\n        tree.ctx.emit(\"node-collapse\", props.node.data, props.node, instance);\n        props.node.collapse();\n      } else {\n        props.node.expand(function () {\n          ctx.emit(\"node-expand\", props.node.data, props.node, instance);\n        });\n      }\n    };\n    var handleCheckChange = function handleCheckChange(value, ev) {\n      props.node.setChecked(ev.target.checked, !tree.props.checkStrictly);\n      nextTick(function () {\n        var store = tree.store.value;\n        tree.ctx.emit(\"check\", props.node.data, {\n          checkedNodes: store.getCheckedNodes(),\n          checkedKeys: store.getCheckedKeys(),\n          halfCheckedNodes: store.getHalfCheckedNodes(),\n          halfCheckedKeys: store.getHalfCheckedKeys()\n        });\n      });\n    };\n    var handleChildNodeExpand = function handleChildNodeExpand(nodeData, node, instance2) {\n      broadcastExpanded(node);\n      tree.ctx.emit(\"node-expand\", nodeData, node, instance2);\n    };\n    var handleDragStart = function handleDragStart(event) {\n      if (!tree.props.draggable) return;\n      dragEvents.treeNodeDragStart({\n        event: event,\n        treeNode: props\n      });\n    };\n    var handleDragOver = function handleDragOver(event) {\n      event.preventDefault();\n      if (!tree.props.draggable) return;\n      dragEvents.treeNodeDragOver({\n        event: event,\n        treeNode: {\n          $el: node$.value,\n          node: props.node\n        }\n      });\n    };\n    var handleDrop = function handleDrop(event) {\n      event.preventDefault();\n    };\n    var handleDragEnd = function handleDragEnd(event) {\n      if (!tree.props.draggable) return;\n      dragEvents.treeNodeDragEnd(event);\n    };\n    return {\n      ns: ns,\n      node$: node$,\n      tree: tree,\n      expanded: expanded,\n      childNodeRendered: childNodeRendered,\n      oldChecked: oldChecked,\n      oldIndeterminate: oldIndeterminate,\n      getNodeKey: getNodeKey$1,\n      getNodeClass: getNodeClass,\n      handleSelectChange: handleSelectChange,\n      handleClick: handleClick,\n      handleContextMenu: handleContextMenu,\n      handleExpandIconClick: handleExpandIconClick,\n      handleCheckChange: handleCheckChange,\n      handleChildNodeExpand: handleChildNodeExpand,\n      handleDragStart: handleDragStart,\n      handleDragOver: handleDragOver,\n      handleDrop: handleDrop,\n      handleDragEnd: handleDragEnd,\n      CaretRight: CaretRight\n    };\n  }\n});\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_el_icon = resolveComponent(\"el-icon\");\n  var _component_el_checkbox = resolveComponent(\"el-checkbox\");\n  var _component_loading = resolveComponent(\"loading\");\n  var _component_node_content = resolveComponent(\"node-content\");\n  var _component_el_tree_node = resolveComponent(\"el-tree-node\");\n  var _component_el_collapse_transition = resolveComponent(\"el-collapse-transition\");\n  return withDirectives((openBlock(), createElementBlock(\"div\", {\n    ref: \"node$\",\n    \"class\": normalizeClass([_ctx.ns.b(\"node\"), _ctx.ns.is(\"expanded\", _ctx.expanded), _ctx.ns.is(\"current\", _ctx.node.isCurrent), _ctx.ns.is(\"hidden\", !_ctx.node.visible), _ctx.ns.is(\"focusable\", !_ctx.node.disabled), _ctx.ns.is(\"checked\", !_ctx.node.disabled && _ctx.node.checked), _ctx.getNodeClass(_ctx.node)]),\n    role: \"treeitem\",\n    tabindex: \"-1\",\n    \"aria-expanded\": _ctx.expanded,\n    \"aria-disabled\": _ctx.node.disabled,\n    \"aria-checked\": _ctx.node.checked,\n    draggable: _ctx.tree.props.draggable,\n    \"data-key\": _ctx.getNodeKey(_ctx.node),\n    onClick: withModifiers(_ctx.handleClick, [\"stop\"]),\n    onContextmenu: _ctx.handleContextMenu,\n    onDragstart: withModifiers(_ctx.handleDragStart, [\"stop\"]),\n    onDragover: withModifiers(_ctx.handleDragOver, [\"stop\"]),\n    onDragend: withModifiers(_ctx.handleDragEnd, [\"stop\"]),\n    onDrop: withModifiers(_ctx.handleDrop, [\"stop\"])\n  }, [createElementVNode(\"div\", {\n    \"class\": normalizeClass(_ctx.ns.be(\"node\", \"content\")),\n    style: normalizeStyle({\n      paddingLeft: (_ctx.node.level - 1) * _ctx.tree.props.indent + \"px\"\n    })\n  }, [_ctx.tree.props.icon || _ctx.CaretRight ? (openBlock(), createBlock(_component_el_icon, {\n    key: 0,\n    \"class\": normalizeClass([_ctx.ns.be(\"node\", \"expand-icon\"), _ctx.ns.is(\"leaf\", _ctx.node.isLeaf), {\n      expanded: !_ctx.node.isLeaf && _ctx.expanded\n    }]),\n    onClick: withModifiers(_ctx.handleExpandIconClick, [\"stop\"])\n  }, {\n    \"default\": withCtx(function () {\n      return [(openBlock(), createBlock(resolveDynamicComponent(_ctx.tree.props.icon || _ctx.CaretRight)))];\n    }),\n    _: 1\n  }, 8, [\"class\", \"onClick\"])) : createCommentVNode(\"v-if\", true), _ctx.showCheckbox ? (openBlock(), createBlock(_component_el_checkbox, {\n    key: 1,\n    \"model-value\": _ctx.node.checked,\n    indeterminate: _ctx.node.indeterminate,\n    disabled: !!_ctx.node.disabled,\n    onClick: withModifiers(function () {}, [\"stop\"]),\n    onChange: _ctx.handleCheckChange\n  }, null, 8, [\"model-value\", \"indeterminate\", \"disabled\", \"onClick\", \"onChange\"])) : createCommentVNode(\"v-if\", true), _ctx.node.loading ? (openBlock(), createBlock(_component_el_icon, {\n    key: 2,\n    \"class\": normalizeClass([_ctx.ns.be(\"node\", \"loading-icon\"), _ctx.ns.is(\"loading\")])\n  }, {\n    \"default\": withCtx(function () {\n      return [createVNode(_component_loading)];\n    }),\n    _: 1\n  }, 8, [\"class\"])) : createCommentVNode(\"v-if\", true), createVNode(_component_node_content, {\n    node: _ctx.node,\n    \"render-content\": _ctx.renderContent\n  }, null, 8, [\"node\", \"render-content\"])], 6), createVNode(_component_el_collapse_transition, null, {\n    \"default\": withCtx(function () {\n      return [!_ctx.renderAfterExpand || _ctx.childNodeRendered ? withDirectives((openBlock(), createElementBlock(\"div\", {\n        key: 0,\n        \"class\": normalizeClass(_ctx.ns.be(\"node\", \"children\")),\n        role: \"group\",\n        \"aria-expanded\": _ctx.expanded\n      }, [(openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.node.childNodes, function (child) {\n        return openBlock(), createBlock(_component_el_tree_node, {\n          key: _ctx.getNodeKey(child),\n          \"render-content\": _ctx.renderContent,\n          \"render-after-expand\": _ctx.renderAfterExpand,\n          \"show-checkbox\": _ctx.showCheckbox,\n          node: child,\n          accordion: _ctx.accordion,\n          props: _ctx.props,\n          onNodeExpand: _ctx.handleChildNodeExpand\n        }, null, 8, [\"render-content\", \"render-after-expand\", \"show-checkbox\", \"node\", \"accordion\", \"props\", \"onNodeExpand\"]);\n      }), 128))], 10, [\"aria-expanded\"])), [[vShow, _ctx.expanded]]) : createCommentVNode(\"v-if\", true)];\n    }),\n    _: 1\n  })], 42, [\"aria-expanded\", \"aria-disabled\", \"aria-checked\", \"draggable\", \"data-key\", \"onClick\", \"onContextmenu\", \"onDragstart\", \"onDragover\", \"onDragend\", \"onDrop\"])), [[vShow, _ctx.node.visible]]);\n}\nvar ElTreeNode = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render], [\"__file\", \"tree-node.vue\"]]);\nexport { ElTreeNode as default };","map":{"version":3,"names":["_sfc_main","defineComponent","name","components","ElCollapseTransition","ElCheckbox","NodeContent","ElIcon","Loading","props","node","type","Node","default","Object","accordion","Boolean","renderContent","Function","renderAfterExpand","showCheckbox","emits","setup","ctx","ns","useNamespace","_useNodeExpandEventBr","useNodeExpandEventBroadcast","broadcastExpanded","tree","inject","expanded","ref","childNodeRendered","oldChecked","oldIndeterminate","node$","dragEvents","dragEventsKey","instance","getCurrentInstance","provide","debugWarn","value","childrenKey","watch","children","data","_toConsumableArray","updateChildren","indeterminate","val","handleSelectChange","checked","childNodes","length","reInitChecked","nextTick","getNodeKey$1","getNodeKey","nodeKey","getNodeClass","nodeClassFunc","className","isFunction","isString","_defineProperty","emit","handleClick","e","handleCurrentChange","store","_a","nodeKeyProp","curNodeKey","setCurrentNodeKey","setCurrentNode","currentNode","expandOnClickNode","handleExpandIconClick","checkOnClickNode","disabled","handleCheckChange","target","handleContextMenu","event","vnode","stopPropagation","preventDefault","isLeaf","collapse","expand","ev","setChecked","checkStrictly","checkedNodes","getCheckedNodes","checkedKeys","getCheckedKeys","halfCheckedNodes","getHalfCheckedNodes","halfCheckedKeys","getHalfCheckedKeys","handleChildNodeExpand","nodeData","instance2","handleDragStart","draggable","treeNodeDragStart","treeNode","handleDragOver","treeNodeDragOver","$el","handleDrop","handleDragEnd","treeNodeDragEnd","CaretRight","_sfc_render","_ctx","_cache","$props","$setup","$data","$options","_component_el_icon","resolveComponent","_component_el_checkbox","_component_loading","_component_node_content","_component_el_tree_node","_component_el_collapse_transition","withDirectives","openBlock","createElementBlock","normalizeClass","b","is","isCurrent","visible","onClick","withModifiers","onContextmenu","onDragstart","onDragover","onDragend","onDrop","createElementVNode","be","style","normalizeStyle","paddingLeft","level","indent","icon","createBlock","key","withCtx","resolveDynamicComponent","_","createCommentVNode","onChange","loading","createVNode","role","Fragment","renderList","child","onNodeExpand","vShow","ElTreeNode","_export_sfc"],"sources":["../../../../../../packages/components/tree/src/tree-node.vue"],"sourcesContent":["<template>\n  <div\n    v-show=\"node.visible\"\n    ref=\"node$\"\n    :class=\"[\n      ns.b('node'),\n      ns.is('expanded', expanded),\n      ns.is('current', node.isCurrent),\n      ns.is('hidden', !node.visible),\n      ns.is('focusable', !node.disabled),\n      ns.is('checked', !node.disabled && node.checked),\n      getNodeClass(node),\n    ]\"\n    role=\"treeitem\"\n    tabindex=\"-1\"\n    :aria-expanded=\"expanded\"\n    :aria-disabled=\"node.disabled\"\n    :aria-checked=\"node.checked\"\n    :draggable=\"tree.props.draggable\"\n    :data-key=\"getNodeKey(node)\"\n    @click.stop=\"handleClick\"\n    @contextmenu=\"handleContextMenu\"\n    @dragstart.stop=\"handleDragStart\"\n    @dragover.stop=\"handleDragOver\"\n    @dragend.stop=\"handleDragEnd\"\n    @drop.stop=\"handleDrop\"\n  >\n    <div\n      :class=\"ns.be('node', 'content')\"\n      :style=\"{ paddingLeft: (node.level - 1) * tree.props.indent + 'px' }\"\n    >\n      <el-icon\n        v-if=\"tree.props.icon || CaretRight\"\n        :class=\"[\n          ns.be('node', 'expand-icon'),\n          ns.is('leaf', node.isLeaf),\n          {\n            expanded: !node.isLeaf && expanded,\n          },\n        ]\"\n        @click.stop=\"handleExpandIconClick\"\n      >\n        <component :is=\"tree.props.icon || CaretRight\" />\n      </el-icon>\n      <el-checkbox\n        v-if=\"showCheckbox\"\n        :model-value=\"node.checked\"\n        :indeterminate=\"node.indeterminate\"\n        :disabled=\"!!node.disabled\"\n        @click.stop\n        @change=\"handleCheckChange\"\n      />\n      <el-icon\n        v-if=\"node.loading\"\n        :class=\"[ns.be('node', 'loading-icon'), ns.is('loading')]\"\n      >\n        <loading />\n      </el-icon>\n      <node-content :node=\"node\" :render-content=\"renderContent\" />\n    </div>\n    <el-collapse-transition>\n      <div\n        v-if=\"!renderAfterExpand || childNodeRendered\"\n        v-show=\"expanded\"\n        :class=\"ns.be('node', 'children')\"\n        role=\"group\"\n        :aria-expanded=\"expanded\"\n      >\n        <el-tree-node\n          v-for=\"child in node.childNodes\"\n          :key=\"getNodeKey(child)\"\n          :render-content=\"renderContent\"\n          :render-after-expand=\"renderAfterExpand\"\n          :show-checkbox=\"showCheckbox\"\n          :node=\"child\"\n          :accordion=\"accordion\"\n          :props=\"props\"\n          @node-expand=\"handleChildNodeExpand\"\n        />\n      </div>\n    </el-collapse-transition>\n  </div>\n</template>\n<script lang=\"ts\">\n// @ts-nocheck\nimport {\n  defineComponent,\n  getCurrentInstance,\n  inject,\n  nextTick,\n  provide,\n  ref,\n  watch,\n} from 'vue'\nimport { debugWarn, isFunction, isString } from '@element-plus/utils'\nimport ElCollapseTransition from '@element-plus/components/collapse-transition'\nimport ElCheckbox from '@element-plus/components/checkbox'\nimport { ElIcon } from '@element-plus/components/icon'\nimport { CaretRight, Loading } from '@element-plus/icons-vue'\nimport { useNamespace } from '@element-plus/hooks'\nimport NodeContent from './tree-node-content.vue'\nimport { getNodeKey as getNodeKeyUtil, handleCurrentChange } from './model/util'\nimport { useNodeExpandEventBroadcast } from './model/useNodeExpandEventBroadcast'\nimport { dragEventsKey } from './model/useDragNode'\nimport Node from './model/node'\n\nimport type { ComponentInternalInstance, PropType } from 'vue'\nimport type { Nullable } from '@element-plus/utils'\nimport type { RootTreeType, TreeNodeData, TreeOptionProps } from './tree.type'\n\nexport default defineComponent({\n  name: 'ElTreeNode',\n  components: {\n    ElCollapseTransition,\n    ElCheckbox,\n    NodeContent,\n    ElIcon,\n    Loading,\n  },\n  props: {\n    node: {\n      type: Node,\n      default: () => ({}),\n    },\n    props: {\n      type: Object as PropType<TreeOptionProps>,\n      default: () => ({}),\n    },\n    accordion: Boolean,\n    renderContent: Function,\n    renderAfterExpand: Boolean,\n    showCheckbox: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  emits: ['node-expand'],\n  setup(props, ctx) {\n    const ns = useNamespace('tree')\n    const { broadcastExpanded } = useNodeExpandEventBroadcast(props)\n    const tree = inject<RootTreeType>('RootTree')\n    const expanded = ref(false)\n    const childNodeRendered = ref(false)\n    const oldChecked = ref<boolean>(null)\n    const oldIndeterminate = ref<boolean>(null)\n    const node$ = ref<Nullable<HTMLElement>>(null)\n    const dragEvents = inject(dragEventsKey)\n    const instance = getCurrentInstance()\n\n    provide('NodeInstance', instance)\n    if (!tree) {\n      debugWarn('Tree', \"Can not find node's tree.\")\n    }\n\n    if (props.node.expanded) {\n      expanded.value = true\n      childNodeRendered.value = true\n    }\n\n    const childrenKey = tree.props.props['children'] || 'children'\n    watch(\n      () => {\n        const children = props.node.data[childrenKey]\n        return children && [...children]\n      },\n      () => {\n        props.node.updateChildren()\n      }\n    )\n\n    watch(\n      () => props.node.indeterminate,\n      (val) => {\n        handleSelectChange(props.node.checked, val)\n      }\n    )\n\n    watch(\n      () => props.node.checked,\n      (val) => {\n        handleSelectChange(val, props.node.indeterminate)\n      }\n    )\n\n    watch(\n      () => props.node.childNodes.length,\n      () => props.node.reInitChecked()\n    )\n\n    watch(\n      () => props.node.expanded,\n      (val) => {\n        nextTick(() => (expanded.value = val))\n        if (val) {\n          childNodeRendered.value = true\n        }\n      }\n    )\n\n    const getNodeKey = (node: Node): any => {\n      return getNodeKeyUtil(tree.props.nodeKey, node.data)\n    }\n\n    const getNodeClass = (node: Node) => {\n      const nodeClassFunc = props.props.class\n      if (!nodeClassFunc) {\n        return {}\n      }\n      let className\n      if (isFunction(nodeClassFunc)) {\n        const { data } = node\n        className = nodeClassFunc(data, node)\n      } else {\n        className = nodeClassFunc\n      }\n\n      if (isString(className)) {\n        return { [className]: true }\n      } else {\n        return className\n      }\n    }\n\n    const handleSelectChange = (checked: boolean, indeterminate: boolean) => {\n      if (\n        oldChecked.value !== checked ||\n        oldIndeterminate.value !== indeterminate\n      ) {\n        tree.ctx.emit('check-change', props.node.data, checked, indeterminate)\n      }\n      oldChecked.value = checked\n      oldIndeterminate.value = indeterminate\n    }\n\n    const handleClick = (e: MouseEvent) => {\n      handleCurrentChange(tree.store, tree.ctx.emit, () => {\n        const nodeKeyProp = tree?.props?.nodeKey\n        if (nodeKeyProp) {\n          const curNodeKey = getNodeKey(props.node)\n          tree.store.value.setCurrentNodeKey(curNodeKey)\n        } else {\n          tree.store.value.setCurrentNode(props.node)\n        }\n      })\n      tree.currentNode.value = props.node\n\n      if (tree.props.expandOnClickNode) {\n        handleExpandIconClick()\n      }\n\n      if (tree.props.checkOnClickNode && !props.node.disabled) {\n        handleCheckChange(null, {\n          target: { checked: !props.node.checked },\n        })\n      }\n      tree.ctx.emit('node-click', props.node.data, props.node, instance, e)\n    }\n\n    const handleContextMenu = (event: Event) => {\n      if (tree.instance.vnode.props['onNodeContextmenu']) {\n        event.stopPropagation()\n        event.preventDefault()\n      }\n      tree.ctx.emit(\n        'node-contextmenu',\n        event,\n        props.node.data,\n        props.node,\n        instance\n      )\n    }\n\n    const handleExpandIconClick = () => {\n      if (props.node.isLeaf) return\n      if (expanded.value) {\n        tree.ctx.emit('node-collapse', props.node.data, props.node, instance)\n        props.node.collapse()\n      } else {\n        props.node.expand(() => {\n          ctx.emit('node-expand', props.node.data, props.node, instance)\n        })\n      }\n    }\n\n    const handleCheckChange = (value, ev) => {\n      props.node.setChecked(ev.target.checked, !tree.props.checkStrictly)\n      nextTick(() => {\n        const store = tree.store.value\n        tree.ctx.emit('check', props.node.data, {\n          checkedNodes: store.getCheckedNodes(),\n          checkedKeys: store.getCheckedKeys(),\n          halfCheckedNodes: store.getHalfCheckedNodes(),\n          halfCheckedKeys: store.getHalfCheckedKeys(),\n        })\n      })\n    }\n\n    const handleChildNodeExpand = (\n      nodeData: TreeNodeData,\n      node: Node,\n      instance: ComponentInternalInstance\n    ) => {\n      broadcastExpanded(node)\n      tree.ctx.emit('node-expand', nodeData, node, instance)\n    }\n\n    const handleDragStart = (event: DragEvent) => {\n      if (!tree.props.draggable) return\n      dragEvents.treeNodeDragStart({ event, treeNode: props })\n    }\n\n    const handleDragOver = (event: DragEvent) => {\n      event.preventDefault()\n      if (!tree.props.draggable) return\n      dragEvents.treeNodeDragOver({\n        event,\n        treeNode: { $el: node$.value, node: props.node },\n      })\n    }\n\n    const handleDrop = (event: DragEvent) => {\n      event.preventDefault()\n    }\n\n    const handleDragEnd = (event: DragEvent) => {\n      if (!tree.props.draggable) return\n      dragEvents.treeNodeDragEnd(event)\n    }\n\n    return {\n      ns,\n      node$,\n      tree,\n      expanded,\n      childNodeRendered,\n      oldChecked,\n      oldIndeterminate,\n      getNodeKey,\n      getNodeClass,\n      handleSelectChange,\n      handleClick,\n      handleContextMenu,\n      handleExpandIconClick,\n      handleCheckChange,\n      handleChildNodeExpand,\n      handleDragStart,\n      handleDragOver,\n      handleDrop,\n      handleDragEnd,\n      CaretRight,\n    }\n  },\n})\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}