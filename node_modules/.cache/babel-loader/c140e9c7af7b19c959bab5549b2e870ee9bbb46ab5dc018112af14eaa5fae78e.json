{"ast":null,"code":"import \"core-js/modules/web.timers.js\";\nimport { ref, onMounted, watch } from 'vue';\nimport { isNumber, isUndefined } from '../../utils/types.mjs';\nimport { isObject } from '@vue/shared';\nvar useThrottleRender = function useThrottleRender(loading) {\n  var throttle = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  if (throttle === 0) return loading;\n  var initVal = isObject(throttle) && Boolean(throttle.initVal);\n  var throttled = ref(initVal);\n  var timeoutHandle = null;\n  var dispatchThrottling = function dispatchThrottling(timer) {\n    if (isUndefined(timer)) {\n      throttled.value = loading.value;\n      return;\n    }\n    if (timeoutHandle) {\n      clearTimeout(timeoutHandle);\n    }\n    timeoutHandle = setTimeout(function () {\n      throttled.value = loading.value;\n    }, timer);\n  };\n  var dispatcher = function dispatcher(type) {\n    if (type === \"leading\") {\n      if (isNumber(throttle)) {\n        dispatchThrottling(throttle);\n      } else {\n        dispatchThrottling(throttle.leading);\n      }\n    } else {\n      if (isObject(throttle)) {\n        dispatchThrottling(throttle.trailing);\n      } else {\n        throttled.value = false;\n      }\n    }\n  };\n  onMounted(function () {\n    return dispatcher(\"leading\");\n  });\n  watch(function () {\n    return loading.value;\n  }, function (val) {\n    dispatcher(val ? \"leading\" : \"trailing\");\n  });\n  return throttled;\n};\nexport { useThrottleRender };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}