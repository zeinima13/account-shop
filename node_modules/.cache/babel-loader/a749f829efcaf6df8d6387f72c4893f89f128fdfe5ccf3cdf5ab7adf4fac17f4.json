{"ast":null,"code":"import _objectSpread from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport { defineComponent, inject, ref, openBlock, createElementBlock, normalizeClass, unref, withModifiers, renderSlot } from 'vue';\nimport { throwError } from '../../../utils/error.mjs';\nimport { uploadContextKey } from './constants.mjs';\nimport { uploadDraggerProps, uploadDraggerEmits } from './upload-dragger.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { useFormDisabled } from '../../form/src/hooks/use-form-common-props.mjs';\nvar COMPONENT_NAME = \"ElUploadDrag\";\nvar __default__ = defineComponent({\n  name: COMPONENT_NAME\n});\nvar _sfc_main = /* @__PURE__ */defineComponent(_objectSpread(_objectSpread({}, __default__), {}, {\n  props: uploadDraggerProps,\n  emits: uploadDraggerEmits,\n  setup: function setup(__props, _ref) {\n    var emit = _ref.emit;\n    var uploaderContext = inject(uploadContextKey);\n    if (!uploaderContext) {\n      throwError(COMPONENT_NAME, \"usage: <el-upload><el-upload-dragger /></el-upload>\");\n    }\n    var ns = useNamespace(\"upload\");\n    var dragover = ref(false);\n    var disabled = useFormDisabled();\n    var onDrop = function onDrop(e) {\n      if (disabled.value) return;\n      dragover.value = false;\n      e.stopPropagation();\n      var files = Array.from(e.dataTransfer.files);\n      emit(\"file\", files);\n    };\n    var onDragover = function onDragover() {\n      if (!disabled.value) dragover.value = true;\n    };\n    return function (_ctx, _cache) {\n      return openBlock(), createElementBlock(\"div\", {\n        \"class\": normalizeClass([unref(ns).b(\"dragger\"), unref(ns).is(\"dragover\", dragover.value)]),\n        onDrop: withModifiers(onDrop, [\"prevent\"]),\n        onDragover: withModifiers(onDragover, [\"prevent\"]),\n        onDragleave: withModifiers(function ($event) {\n          return dragover.value = false;\n        }, [\"prevent\"])\n      }, [renderSlot(_ctx.$slots, \"default\")], 42, [\"onDrop\", \"onDragover\", \"onDragleave\"]);\n    };\n  }\n}));\nvar UploadDragger = /* @__PURE__ */_export_sfc(_sfc_main, [[\"__file\", \"upload-dragger.vue\"]]);\nexport { UploadDragger as default };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}