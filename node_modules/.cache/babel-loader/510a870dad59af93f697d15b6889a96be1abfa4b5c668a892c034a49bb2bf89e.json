{"ast":null,"code":"import { watch } from 'vue';\nimport { useEventListener } from '@vueuse/core';\nvar usePreventGlobal = function usePreventGlobal(indicator, evt, cb) {\n  var prevent = function prevent(e) {\n    if (cb(e)) e.stopImmediatePropagation();\n  };\n  var stop = void 0;\n  watch(function () {\n    return indicator.value;\n  }, function (val) {\n    if (val) {\n      stop = useEventListener(document, evt, prevent, true);\n    } else {\n      stop == null ? void 0 : stop();\n    }\n  }, {\n    immediate: true\n  });\n};\nexport { usePreventGlobal };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}