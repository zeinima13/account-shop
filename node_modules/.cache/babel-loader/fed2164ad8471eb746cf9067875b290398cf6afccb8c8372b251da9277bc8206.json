{"ast":null,"code":"import _objectSpread from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _defineProperty from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport { defineComponent, inject, computed, resolveComponent, openBlock, createElementBlock, Fragment, normalizeClass, createCommentVNode, createElementVNode, mergeProps, withModifiers, createBlock, withCtx, resolveDynamicComponent, renderSlot } from 'vue';\nimport { ElIcon } from '../../icon/index.mjs';\nimport { dropdownItemProps, DROPDOWN_COLLECTION_ITEM_INJECTION_KEY as COLLECTION_ITEM_INJECTION_KEY } from './dropdown.mjs';\nimport { DROPDOWN_INJECTION_KEY } from './tokens.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { ROVING_FOCUS_ITEM_COLLECTION_INJECTION_KEY as COLLECTION_ITEM_INJECTION_KEY$1 } from '../../roving-focus-group/src/roving-focus-group.mjs';\nimport { ROVING_FOCUS_GROUP_ITEM_INJECTION_KEY } from '../../roving-focus-group/src/tokens.mjs';\nimport { COLLECTION_ITEM_SIGN } from '../../collection/src/collection.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { composeRefs } from '../../../utils/vue/refs.mjs';\nimport { composeEventHandlers } from '../../../utils/dom/event.mjs';\nimport { EVENT_CODE } from '../../../constants/aria.mjs';\nvar _sfc_main = defineComponent({\n  name: \"DropdownItemImpl\",\n  components: {\n    ElIcon: ElIcon\n  },\n  props: dropdownItemProps,\n  emits: [\"pointermove\", \"pointerleave\", \"click\", \"clickimpl\"],\n  setup: function setup(_, _ref) {\n    var emit = _ref.emit;\n    var ns = useNamespace(\"dropdown\");\n    var _inject = inject(DROPDOWN_INJECTION_KEY, void 0),\n      menuRole = _inject.role;\n    var _inject2 = inject(COLLECTION_ITEM_INJECTION_KEY, void 0),\n      dropdownCollectionItemRef = _inject2.collectionItemRef;\n    var _inject3 = inject(COLLECTION_ITEM_INJECTION_KEY$1, void 0),\n      rovingFocusCollectionItemRef = _inject3.collectionItemRef;\n    var _inject4 = inject(ROVING_FOCUS_GROUP_ITEM_INJECTION_KEY, void 0),\n      rovingFocusGroupItemRef = _inject4.rovingFocusGroupItemRef,\n      tabIndex = _inject4.tabIndex,\n      handleFocus = _inject4.handleFocus,\n      handleItemKeydown = _inject4.handleKeydown,\n      handleMousedown = _inject4.handleMousedown;\n    var itemRef = composeRefs(dropdownCollectionItemRef, rovingFocusCollectionItemRef, rovingFocusGroupItemRef);\n    var role = computed(function () {\n      if (menuRole.value === \"menu\") {\n        return \"menuitem\";\n      } else if (menuRole.value === \"navigation\") {\n        return \"link\";\n      }\n      return \"button\";\n    });\n    var handleKeydown = composeEventHandlers(function (e) {\n      if ([EVENT_CODE.enter, EVENT_CODE.numpadEnter, EVENT_CODE.space].includes(e.code)) {\n        e.preventDefault();\n        e.stopImmediatePropagation();\n        emit(\"clickimpl\", e);\n        return true;\n      }\n    }, handleItemKeydown);\n    return {\n      ns: ns,\n      itemRef: itemRef,\n      dataset: _defineProperty({}, COLLECTION_ITEM_SIGN, \"\"),\n      role: role,\n      tabIndex: tabIndex,\n      handleFocus: handleFocus,\n      handleKeydown: handleKeydown,\n      handleMousedown: handleMousedown\n    };\n  }\n});\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_el_icon = resolveComponent(\"el-icon\");\n  return openBlock(), createElementBlock(Fragment, null, [_ctx.divided ? (openBlock(), createElementBlock(\"li\", {\n    key: 0,\n    role: \"separator\",\n    \"class\": normalizeClass(_ctx.ns.bem(\"menu\", \"item\", \"divided\"))\n  }, null, 2)) : createCommentVNode(\"v-if\", true), createElementVNode(\"li\", mergeProps({\n    ref: _ctx.itemRef\n  }, _objectSpread(_objectSpread({}, _ctx.dataset), _ctx.$attrs), {\n    \"aria-disabled\": _ctx.disabled,\n    \"class\": [_ctx.ns.be(\"menu\", \"item\"), _ctx.ns.is(\"disabled\", _ctx.disabled)],\n    tabindex: _ctx.tabIndex,\n    role: _ctx.role,\n    onClick: function onClick(e) {\n      return _ctx.$emit(\"clickimpl\", e);\n    },\n    onFocus: _ctx.handleFocus,\n    onKeydown: withModifiers(_ctx.handleKeydown, [\"self\"]),\n    onMousedown: _ctx.handleMousedown,\n    onPointermove: function onPointermove(e) {\n      return _ctx.$emit(\"pointermove\", e);\n    },\n    onPointerleave: function onPointerleave(e) {\n      return _ctx.$emit(\"pointerleave\", e);\n    }\n  }), [_ctx.icon ? (openBlock(), createBlock(_component_el_icon, {\n    key: 0\n  }, {\n    \"default\": withCtx(function () {\n      return [(openBlock(), createBlock(resolveDynamicComponent(_ctx.icon)))];\n    }),\n    _: 1\n  })) : createCommentVNode(\"v-if\", true), renderSlot(_ctx.$slots, \"default\")], 16, [\"aria-disabled\", \"tabindex\", \"role\", \"onClick\", \"onFocus\", \"onKeydown\", \"onMousedown\", \"onPointermove\", \"onPointerleave\"])], 64);\n}\nvar ElDropdownItemImpl = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render], [\"__file\", \"dropdown-item-impl.vue\"]]);\nexport { ElDropdownItemImpl as default };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}