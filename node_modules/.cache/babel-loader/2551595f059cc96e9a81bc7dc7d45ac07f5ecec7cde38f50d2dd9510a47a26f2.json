{"ast":null,"code":"import _slicedToArray from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _objectSpread from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _regeneratorRuntime from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _toConsumableArray from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.array.reduce.js\";\nimport \"core-js/modules/es.map.js\";\nimport \"core-js/modules/es.number.is-finite.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.parse-float.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport \"core-js/modules/esnext.iterator.reduce.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/web.timers.js\";\nimport { rectToClientRect, detectOverflow as detectOverflow$1, offset as offset$1, autoPlacement as autoPlacement$1, shift as shift$1, flip as flip$1, size as size$1, hide as hide$1, arrow as arrow$1, inline as inline$1, limitShift as limitShift$1, computePosition as computePosition$1 } from '@floating-ui/core';\nimport { round, createCoords, max, min, floor } from '@floating-ui/utils';\nimport { getComputedStyle, isHTMLElement, isElement, getWindow, isWebKit, getFrameElement, getNodeScroll, getDocumentElement, isTopLayer, getNodeName, isOverflowElement, getOverflowAncestors, getParentNode, isLastTraversableNode, isContainingBlock, isTableElement, getContainingBlock } from '@floating-ui/utils/dom';\nexport { getOverflowAncestors } from '@floating-ui/utils/dom';\nfunction getCssDimensions(element) {\n  var css = getComputedStyle(element);\n  // In testing environments, the `width` and `height` properties are empty\n  // strings for SVG elements, returning NaN. Fallback to `0` in this case.\n  var width = parseFloat(css.width) || 0;\n  var height = parseFloat(css.height) || 0;\n  var hasOffset = isHTMLElement(element);\n  var offsetWidth = hasOffset ? element.offsetWidth : width;\n  var offsetHeight = hasOffset ? element.offsetHeight : height;\n  var shouldFallback = round(width) !== offsetWidth || round(height) !== offsetHeight;\n  if (shouldFallback) {\n    width = offsetWidth;\n    height = offsetHeight;\n  }\n  return {\n    width: width,\n    height: height,\n    $: shouldFallback\n  };\n}\nfunction unwrapElement(element) {\n  return !isElement(element) ? element.contextElement : element;\n}\nfunction getScale(element) {\n  var domElement = unwrapElement(element);\n  if (!isHTMLElement(domElement)) {\n    return createCoords(1);\n  }\n  var rect = domElement.getBoundingClientRect();\n  var _getCssDimensions = getCssDimensions(domElement),\n    width = _getCssDimensions.width,\n    height = _getCssDimensions.height,\n    $ = _getCssDimensions.$;\n  var x = ($ ? round(rect.width) : rect.width) / width;\n  var y = ($ ? round(rect.height) : rect.height) / height;\n\n  // 0, NaN, or Infinity should always fallback to 1.\n\n  if (!x || !Number.isFinite(x)) {\n    x = 1;\n  }\n  if (!y || !Number.isFinite(y)) {\n    y = 1;\n  }\n  return {\n    x: x,\n    y: y\n  };\n}\nvar noOffsets = /*#__PURE__*/createCoords(0);\nfunction getVisualOffsets(element) {\n  var win = getWindow(element);\n  if (!isWebKit() || !win.visualViewport) {\n    return noOffsets;\n  }\n  return {\n    x: win.visualViewport.offsetLeft,\n    y: win.visualViewport.offsetTop\n  };\n}\nfunction shouldAddVisualOffsets(element, isFixed, floatingOffsetParent) {\n  if (isFixed === void 0) {\n    isFixed = false;\n  }\n  if (!floatingOffsetParent || isFixed && floatingOffsetParent !== getWindow(element)) {\n    return false;\n  }\n  return isFixed;\n}\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n  var clientRect = element.getBoundingClientRect();\n  var domElement = unwrapElement(element);\n  var scale = createCoords(1);\n  if (includeScale) {\n    if (offsetParent) {\n      if (isElement(offsetParent)) {\n        scale = getScale(offsetParent);\n      }\n    } else {\n      scale = getScale(element);\n    }\n  }\n  var visualOffsets = shouldAddVisualOffsets(domElement, isFixedStrategy, offsetParent) ? getVisualOffsets(domElement) : createCoords(0);\n  var x = (clientRect.left + visualOffsets.x) / scale.x;\n  var y = (clientRect.top + visualOffsets.y) / scale.y;\n  var width = clientRect.width / scale.x;\n  var height = clientRect.height / scale.y;\n  if (domElement) {\n    var win = getWindow(domElement);\n    var offsetWin = offsetParent && isElement(offsetParent) ? getWindow(offsetParent) : offsetParent;\n    var currentWin = win;\n    var currentIFrame = getFrameElement(currentWin);\n    while (currentIFrame && offsetParent && offsetWin !== currentWin) {\n      var iframeScale = getScale(currentIFrame);\n      var iframeRect = currentIFrame.getBoundingClientRect();\n      var css = getComputedStyle(currentIFrame);\n      var left = iframeRect.left + (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) * iframeScale.x;\n      var top = iframeRect.top + (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;\n      x *= iframeScale.x;\n      y *= iframeScale.y;\n      width *= iframeScale.x;\n      height *= iframeScale.y;\n      x += left;\n      y += top;\n      currentWin = getWindow(currentIFrame);\n      currentIFrame = getFrameElement(currentWin);\n    }\n  }\n  return rectToClientRect({\n    width: width,\n    height: height,\n    x: x,\n    y: y\n  });\n}\n\n// If <html> has a CSS width greater than the viewport, then this will be\n// incorrect for RTL.\nfunction getWindowScrollBarX(element, rect) {\n  var leftScroll = getNodeScroll(element).scrollLeft;\n  if (!rect) {\n    return getBoundingClientRect(getDocumentElement(element)).left + leftScroll;\n  }\n  return rect.left + leftScroll;\n}\nfunction getHTMLOffset(documentElement, scroll, ignoreScrollbarX) {\n  if (ignoreScrollbarX === void 0) {\n    ignoreScrollbarX = false;\n  }\n  var htmlRect = documentElement.getBoundingClientRect();\n  var x = htmlRect.left + scroll.scrollLeft - (ignoreScrollbarX ? 0 :\n  // RTL <body> scrollbar.\n  getWindowScrollBarX(documentElement, htmlRect));\n  var y = htmlRect.top + scroll.scrollTop;\n  return {\n    x: x,\n    y: y\n  };\n}\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n  var elements = _ref.elements,\n    rect = _ref.rect,\n    offsetParent = _ref.offsetParent,\n    strategy = _ref.strategy;\n  var isFixed = strategy === 'fixed';\n  var documentElement = getDocumentElement(offsetParent);\n  var topLayer = elements ? isTopLayer(elements.floating) : false;\n  if (offsetParent === documentElement || topLayer && isFixed) {\n    return rect;\n  }\n  var scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  var scale = createCoords(1);\n  var offsets = createCoords(0);\n  var isOffsetParentAnElement = isHTMLElement(offsetParent);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      var offsetRect = getBoundingClientRect(offsetParent);\n      scale = getScale(offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    }\n  }\n  var htmlOffset = documentElement && !isOffsetParentAnElement && !isFixed ? getHTMLOffset(documentElement, scroll, true) : createCoords(0);\n  return {\n    width: rect.width * scale.x,\n    height: rect.height * scale.y,\n    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x + htmlOffset.x,\n    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y + htmlOffset.y\n  };\n}\nfunction getClientRects(element) {\n  return Array.from(element.getClientRects());\n}\n\n// Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable.\nfunction getDocumentRect(element) {\n  var html = getDocumentElement(element);\n  var scroll = getNodeScroll(element);\n  var body = element.ownerDocument.body;\n  var width = max(html.scrollWidth, html.clientWidth, body.scrollWidth, body.clientWidth);\n  var height = max(html.scrollHeight, html.clientHeight, body.scrollHeight, body.clientHeight);\n  var x = -scroll.scrollLeft + getWindowScrollBarX(element);\n  var y = -scroll.scrollTop;\n  if (getComputedStyle(body).direction === 'rtl') {\n    x += max(html.clientWidth, body.clientWidth) - width;\n  }\n  return {\n    width: width,\n    height: height,\n    x: x,\n    y: y\n  };\n}\nfunction getViewportRect(element, strategy) {\n  var win = getWindow(element);\n  var html = getDocumentElement(element);\n  var visualViewport = win.visualViewport;\n  var width = html.clientWidth;\n  var height = html.clientHeight;\n  var x = 0;\n  var y = 0;\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    var visualViewportBased = isWebKit();\n    if (!visualViewportBased || visualViewportBased && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n  return {\n    width: width,\n    height: height,\n    x: x,\n    y: y\n  };\n}\n\n// Returns the inner client rect, subtracting scrollbars if present.\nfunction getInnerBoundingClientRect(element, strategy) {\n  var clientRect = getBoundingClientRect(element, true, strategy === 'fixed');\n  var top = clientRect.top + element.clientTop;\n  var left = clientRect.left + element.clientLeft;\n  var scale = isHTMLElement(element) ? getScale(element) : createCoords(1);\n  var width = element.clientWidth * scale.x;\n  var height = element.clientHeight * scale.y;\n  var x = left * scale.x;\n  var y = top * scale.y;\n  return {\n    width: width,\n    height: height,\n    x: x,\n    y: y\n  };\n}\nfunction getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {\n  var rect;\n  if (clippingAncestor === 'viewport') {\n    rect = getViewportRect(element, strategy);\n  } else if (clippingAncestor === 'document') {\n    rect = getDocumentRect(getDocumentElement(element));\n  } else if (isElement(clippingAncestor)) {\n    rect = getInnerBoundingClientRect(clippingAncestor, strategy);\n  } else {\n    var visualOffsets = getVisualOffsets(element);\n    rect = {\n      x: clippingAncestor.x - visualOffsets.x,\n      y: clippingAncestor.y - visualOffsets.y,\n      width: clippingAncestor.width,\n      height: clippingAncestor.height\n    };\n  }\n  return rectToClientRect(rect);\n}\nfunction hasFixedPositionAncestor(element, stopNode) {\n  var parentNode = getParentNode(element);\n  if (parentNode === stopNode || !isElement(parentNode) || isLastTraversableNode(parentNode)) {\n    return false;\n  }\n  return getComputedStyle(parentNode).position === 'fixed' || hasFixedPositionAncestor(parentNode, stopNode);\n}\n\n// A \"clipping ancestor\" is an `overflow` element with the characteristic of\n// clipping (or hiding) child elements. This returns all clipping ancestors\n// of the given element up the tree.\nfunction getClippingElementAncestors(element, cache) {\n  var cachedResult = cache.get(element);\n  if (cachedResult) {\n    return cachedResult;\n  }\n  var result = getOverflowAncestors(element, [], false).filter(function (el) {\n    return isElement(el) && getNodeName(el) !== 'body';\n  });\n  var currentContainingBlockComputedStyle = null;\n  var elementIsFixed = getComputedStyle(element).position === 'fixed';\n  var currentNode = elementIsFixed ? getParentNode(element) : element;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    var computedStyle = getComputedStyle(currentNode);\n    var currentNodeIsContaining = isContainingBlock(currentNode);\n    if (!currentNodeIsContaining && computedStyle.position === 'fixed') {\n      currentContainingBlockComputedStyle = null;\n    }\n    var shouldDropCurrentNode = elementIsFixed ? !currentNodeIsContaining && !currentContainingBlockComputedStyle : !currentNodeIsContaining && computedStyle.position === 'static' && !!currentContainingBlockComputedStyle && ['absolute', 'fixed'].includes(currentContainingBlockComputedStyle.position) || isOverflowElement(currentNode) && !currentNodeIsContaining && hasFixedPositionAncestor(element, currentNode);\n    if (shouldDropCurrentNode) {\n      // Drop non-containing blocks.\n      result = result.filter(function (ancestor) {\n        return ancestor !== currentNode;\n      });\n    } else {\n      // Record last containing block for next iteration.\n      currentContainingBlockComputedStyle = computedStyle;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  cache.set(element, result);\n  return result;\n}\n\n// Gets the maximum area that the element is visible in due to any number of\n// clipping ancestors.\nfunction getClippingRect(_ref) {\n  var element = _ref.element,\n    boundary = _ref.boundary,\n    rootBoundary = _ref.rootBoundary,\n    strategy = _ref.strategy;\n  var elementClippingAncestors = boundary === 'clippingAncestors' ? isTopLayer(element) ? [] : getClippingElementAncestors(element, this._c) : [].concat(boundary);\n  var clippingAncestors = [].concat(_toConsumableArray(elementClippingAncestors), [rootBoundary]);\n  var firstClippingAncestor = clippingAncestors[0];\n  var clippingRect = clippingAncestors.reduce(function (accRect, clippingAncestor) {\n    var rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n  return {\n    width: clippingRect.right - clippingRect.left,\n    height: clippingRect.bottom - clippingRect.top,\n    x: clippingRect.left,\n    y: clippingRect.top\n  };\n}\nfunction getDimensions(element) {\n  var _getCssDimensions2 = getCssDimensions(element),\n    width = _getCssDimensions2.width,\n    height = _getCssDimensions2.height;\n  return {\n    width: width,\n    height: height\n  };\n}\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n  var isOffsetParentAnElement = isHTMLElement(offsetParent);\n  var documentElement = getDocumentElement(offsetParent);\n  var isFixed = strategy === 'fixed';\n  var rect = getBoundingClientRect(element, true, isFixed, offsetParent);\n  var scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  var offsets = createCoords(0);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isOffsetParentAnElement) {\n      var offsetRect = getBoundingClientRect(offsetParent, true, isFixed, offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } else if (documentElement) {\n      // If the <body> scrollbar appears on the left (e.g. RTL systems). Use\n      // Firefox with layout.scrollbar.side = 3 in about:config to test this.\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n  var htmlOffset = documentElement && !isOffsetParentAnElement && !isFixed ? getHTMLOffset(documentElement, scroll) : createCoords(0);\n  var x = rect.left + scroll.scrollLeft - offsets.x - htmlOffset.x;\n  var y = rect.top + scroll.scrollTop - offsets.y - htmlOffset.y;\n  return {\n    x: x,\n    y: y,\n    width: rect.width,\n    height: rect.height\n  };\n}\nfunction isStaticPositioned(element) {\n  return getComputedStyle(element).position === 'static';\n}\nfunction getTrueOffsetParent(element, polyfill) {\n  if (!isHTMLElement(element) || getComputedStyle(element).position === 'fixed') {\n    return null;\n  }\n  if (polyfill) {\n    return polyfill(element);\n  }\n  var rawOffsetParent = element.offsetParent;\n\n  // Firefox returns the <html> element as the offsetParent if it's non-static,\n  // while Chrome and Safari return the <body> element. The <body> element must\n  // be used to perform the correct calculations even if the <html> element is\n  // non-static.\n  if (getDocumentElement(element) === rawOffsetParent) {\n    rawOffsetParent = rawOffsetParent.ownerDocument.body;\n  }\n  return rawOffsetParent;\n}\n\n// Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\nfunction getOffsetParent(element, polyfill) {\n  var win = getWindow(element);\n  if (isTopLayer(element)) {\n    return win;\n  }\n  if (!isHTMLElement(element)) {\n    var svgOffsetParent = getParentNode(element);\n    while (svgOffsetParent && !isLastTraversableNode(svgOffsetParent)) {\n      if (isElement(svgOffsetParent) && !isStaticPositioned(svgOffsetParent)) {\n        return svgOffsetParent;\n      }\n      svgOffsetParent = getParentNode(svgOffsetParent);\n    }\n    return win;\n  }\n  var offsetParent = getTrueOffsetParent(element, polyfill);\n  while (offsetParent && isTableElement(offsetParent) && isStaticPositioned(offsetParent)) {\n    offsetParent = getTrueOffsetParent(offsetParent, polyfill);\n  }\n  if (offsetParent && isLastTraversableNode(offsetParent) && isStaticPositioned(offsetParent) && !isContainingBlock(offsetParent)) {\n    return win;\n  }\n  return offsetParent || getContainingBlock(element) || win;\n}\nvar getElementRects = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(data) {\n    var getOffsetParentFn, getDimensionsFn, floatingDimensions;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          getOffsetParentFn = this.getOffsetParent || getOffsetParent;\n          getDimensionsFn = this.getDimensions;\n          _context.next = 4;\n          return getDimensionsFn(data.floating);\n        case 4:\n          floatingDimensions = _context.sent;\n          _context.t0 = getRectRelativeToOffsetParent;\n          _context.t1 = data.reference;\n          _context.next = 9;\n          return getOffsetParentFn(data.floating);\n        case 9:\n          _context.t2 = _context.sent;\n          _context.t3 = data.strategy;\n          _context.t4 = (0, _context.t0)(_context.t1, _context.t2, _context.t3);\n          _context.t5 = {\n            x: 0,\n            y: 0,\n            width: floatingDimensions.width,\n            height: floatingDimensions.height\n          };\n          return _context.abrupt(\"return\", {\n            reference: _context.t4,\n            floating: _context.t5\n          });\n        case 14:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee, this);\n  }));\n  return function getElementRects(_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nfunction isRTL(element) {\n  return getComputedStyle(element).direction === 'rtl';\n}\nvar platform = {\n  convertOffsetParentRelativeRectToViewportRelativeRect: convertOffsetParentRelativeRectToViewportRelativeRect,\n  getDocumentElement: getDocumentElement,\n  getClippingRect: getClippingRect,\n  getOffsetParent: getOffsetParent,\n  getElementRects: getElementRects,\n  getClientRects: getClientRects,\n  getDimensions: getDimensions,\n  getScale: getScale,\n  isElement: isElement,\n  isRTL: isRTL\n};\nfunction rectsAreEqual(a, b) {\n  return a.x === b.x && a.y === b.y && a.width === b.width && a.height === b.height;\n}\n\n// https://samthor.au/2021/observing-dom/\nfunction observeMove(element, onMove) {\n  var io = null;\n  var timeoutId;\n  var root = getDocumentElement(element);\n  function cleanup() {\n    var _io;\n    clearTimeout(timeoutId);\n    (_io = io) == null || _io.disconnect();\n    io = null;\n  }\n  function refresh(skip, threshold) {\n    if (skip === void 0) {\n      skip = false;\n    }\n    if (threshold === void 0) {\n      threshold = 1;\n    }\n    cleanup();\n    var elementRectForRootMargin = element.getBoundingClientRect();\n    var left = elementRectForRootMargin.left,\n      top = elementRectForRootMargin.top,\n      width = elementRectForRootMargin.width,\n      height = elementRectForRootMargin.height;\n    if (!skip) {\n      onMove();\n    }\n    if (!width || !height) {\n      return;\n    }\n    var insetTop = floor(top);\n    var insetRight = floor(root.clientWidth - (left + width));\n    var insetBottom = floor(root.clientHeight - (top + height));\n    var insetLeft = floor(left);\n    var rootMargin = -insetTop + \"px \" + -insetRight + \"px \" + -insetBottom + \"px \" + -insetLeft + \"px\";\n    var options = {\n      rootMargin: rootMargin,\n      threshold: max(0, min(1, threshold)) || 1\n    };\n    var isFirstUpdate = true;\n    function handleObserve(entries) {\n      var ratio = entries[0].intersectionRatio;\n      if (ratio !== threshold) {\n        if (!isFirstUpdate) {\n          return refresh();\n        }\n        if (!ratio) {\n          // If the reference is clipped, the ratio is 0. Throttle the refresh\n          // to prevent an infinite loop of updates.\n          timeoutId = setTimeout(function () {\n            refresh(false, 1e-7);\n          }, 1000);\n        } else {\n          refresh(false, ratio);\n        }\n      }\n      if (ratio === 1 && !rectsAreEqual(elementRectForRootMargin, element.getBoundingClientRect())) {\n        // It's possible that even though the ratio is reported as 1, the\n        // element is not actually fully within the IntersectionObserver's root\n        // area anymore. This can happen under performance constraints. This may\n        // be a bug in the browser's IntersectionObserver implementation. To\n        // work around this, we compare the element's bounding rect now with\n        // what it was at the time we created the IntersectionObserver. If they\n        // are not equal then the element moved, so we refresh.\n        refresh();\n      }\n      isFirstUpdate = false;\n    }\n\n    // Older browsers don't support a `document` as the root and will throw an\n    // error.\n    try {\n      io = new IntersectionObserver(handleObserve, _objectSpread(_objectSpread({}, options), {}, {\n        // Handle <iframe>s\n        root: root.ownerDocument\n      }));\n    } catch (e) {\n      io = new IntersectionObserver(handleObserve, options);\n    }\n    io.observe(element);\n  }\n  refresh(true);\n  return cleanup;\n}\n\n/**\n * Automatically updates the position of the floating element when necessary.\n * Should only be called when the floating element is mounted on the DOM or\n * visible on the screen.\n * @returns cleanup function that should be invoked when the floating element is\n * removed from the DOM or hidden from the screen.\n * @see https://floating-ui.com/docs/autoUpdate\n */\nfunction autoUpdate(reference, floating, update, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  var _options = options,\n    _options$ancestorScro = _options.ancestorScroll,\n    ancestorScroll = _options$ancestorScro === void 0 ? true : _options$ancestorScro,\n    _options$ancestorResi = _options.ancestorResize,\n    ancestorResize = _options$ancestorResi === void 0 ? true : _options$ancestorResi,\n    _options$elementResiz = _options.elementResize,\n    elementResize = _options$elementResiz === void 0 ? typeof ResizeObserver === 'function' : _options$elementResiz,\n    _options$layoutShift = _options.layoutShift,\n    layoutShift = _options$layoutShift === void 0 ? typeof IntersectionObserver === 'function' : _options$layoutShift,\n    _options$animationFra = _options.animationFrame,\n    animationFrame = _options$animationFra === void 0 ? false : _options$animationFra;\n  var referenceEl = unwrapElement(reference);\n  var ancestors = ancestorScroll || ancestorResize ? [].concat(_toConsumableArray(referenceEl ? getOverflowAncestors(referenceEl) : []), _toConsumableArray(getOverflowAncestors(floating))) : [];\n  ancestors.forEach(function (ancestor) {\n    ancestorScroll && ancestor.addEventListener('scroll', update, {\n      passive: true\n    });\n    ancestorResize && ancestor.addEventListener('resize', update);\n  });\n  var cleanupIo = referenceEl && layoutShift ? observeMove(referenceEl, update) : null;\n  var reobserveFrame = -1;\n  var resizeObserver = null;\n  if (elementResize) {\n    resizeObserver = new ResizeObserver(function (_ref) {\n      var _ref3 = _slicedToArray(_ref, 1),\n        firstEntry = _ref3[0];\n      if (firstEntry && firstEntry.target === referenceEl && resizeObserver) {\n        // Prevent update loops when using the `size` middleware.\n        // https://github.com/floating-ui/floating-ui/issues/1740\n        resizeObserver.unobserve(floating);\n        cancelAnimationFrame(reobserveFrame);\n        reobserveFrame = requestAnimationFrame(function () {\n          var _resizeObserver;\n          (_resizeObserver = resizeObserver) == null || _resizeObserver.observe(floating);\n        });\n      }\n      update();\n    });\n    if (referenceEl && !animationFrame) {\n      resizeObserver.observe(referenceEl);\n    }\n    resizeObserver.observe(floating);\n  }\n  var frameId;\n  var prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;\n  if (animationFrame) {\n    frameLoop();\n  }\n  function frameLoop() {\n    var nextRefRect = getBoundingClientRect(reference);\n    if (prevRefRect && !rectsAreEqual(prevRefRect, nextRefRect)) {\n      update();\n    }\n    prevRefRect = nextRefRect;\n    frameId = requestAnimationFrame(frameLoop);\n  }\n  update();\n  return function () {\n    var _resizeObserver2;\n    ancestors.forEach(function (ancestor) {\n      ancestorScroll && ancestor.removeEventListener('scroll', update);\n      ancestorResize && ancestor.removeEventListener('resize', update);\n    });\n    cleanupIo == null || cleanupIo();\n    (_resizeObserver2 = resizeObserver) == null || _resizeObserver2.disconnect();\n    resizeObserver = null;\n    if (animationFrame) {\n      cancelAnimationFrame(frameId);\n    }\n  };\n}\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nvar detectOverflow = detectOverflow$1;\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nvar offset = offset$1;\n\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nvar autoPlacement = autoPlacement$1;\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nvar shift = shift$1;\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nvar flip = flip$1;\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nvar size = size$1;\n\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nvar hide = hide$1;\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nvar arrow = arrow$1;\n\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nvar inline = inline$1;\n\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nvar limitShift = limitShift$1;\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a given reference element.\n */\nvar computePosition = function computePosition(reference, floating, options) {\n  // This caches the expensive `getClippingElementAncestors` function so that\n  // multiple lifecycle resets re-use the same result. It only lives for a\n  // single call. If other functions become expensive, we can add them as well.\n  var cache = new Map();\n  var mergedOptions = _objectSpread({\n    platform: platform\n  }, options);\n  var platformWithCache = _objectSpread(_objectSpread({}, mergedOptions.platform), {}, {\n    _c: cache\n  });\n  return computePosition$1(reference, floating, _objectSpread(_objectSpread({}, mergedOptions), {}, {\n    platform: platformWithCache\n  }));\n};\nexport { arrow, autoPlacement, autoUpdate, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, platform, shift, size };","map":{"version":3,"names":["rectToClientRect","detectOverflow","detectOverflow$1","offset","offset$1","autoPlacement","autoPlacement$1","shift","shift$1","flip","flip$1","size","size$1","hide","hide$1","arrow","arrow$1","inline","inline$1","limitShift","limitShift$1","computePosition","computePosition$1","round","createCoords","max","min","floor","getComputedStyle","isHTMLElement","isElement","getWindow","isWebKit","getFrameElement","getNodeScroll","getDocumentElement","isTopLayer","getNodeName","isOverflowElement","getOverflowAncestors","getParentNode","isLastTraversableNode","isContainingBlock","isTableElement","getContainingBlock","getCssDimensions","element","css","width","parseFloat","height","hasOffset","offsetWidth","offsetHeight","shouldFallback","$","unwrapElement","contextElement","getScale","domElement","rect","getBoundingClientRect","_getCssDimensions","x","y","Number","isFinite","noOffsets","getVisualOffsets","win","visualViewport","offsetLeft","offsetTop","shouldAddVisualOffsets","isFixed","floatingOffsetParent","includeScale","isFixedStrategy","offsetParent","clientRect","scale","visualOffsets","left","top","offsetWin","currentWin","currentIFrame","iframeScale","iframeRect","clientLeft","paddingLeft","clientTop","paddingTop","getWindowScrollBarX","leftScroll","scrollLeft","getHTMLOffset","documentElement","scroll","ignoreScrollbarX","htmlRect","scrollTop","convertOffsetParentRelativeRectToViewportRelativeRect","_ref","elements","strategy","topLayer","floating","offsets","isOffsetParentAnElement","offsetRect","htmlOffset","getClientRects","Array","from","getDocumentRect","html","body","ownerDocument","scrollWidth","clientWidth","scrollHeight","clientHeight","direction","getViewportRect","visualViewportBased","getInnerBoundingClientRect","getClientRectFromClippingAncestor","clippingAncestor","hasFixedPositionAncestor","stopNode","parentNode","position","getClippingElementAncestors","cache","cachedResult","get","result","filter","el","currentContainingBlockComputedStyle","elementIsFixed","currentNode","computedStyle","currentNodeIsContaining","shouldDropCurrentNode","includes","ancestor","set","getClippingRect","boundary","rootBoundary","elementClippingAncestors","_c","concat","clippingAncestors","_toConsumableArray","firstClippingAncestor","clippingRect","reduce","accRect","right","bottom","getDimensions","_getCssDimensions2","getRectRelativeToOffsetParent","isStaticPositioned","getTrueOffsetParent","polyfill","rawOffsetParent","getOffsetParent","svgOffsetParent","getElementRects","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","getOffsetParentFn","getDimensionsFn","floatingDimensions","wrap","_callee$","_context","prev","next","sent","t0","t1","reference","t2","t3","t4","t5","abrupt","stop","_x","apply","arguments","isRTL","platform","rectsAreEqual","a","b","observeMove","onMove","io","timeoutId","root","cleanup","_io","clearTimeout","disconnect","refresh","skip","threshold","elementRectForRootMargin","insetTop","insetRight","insetBottom","insetLeft","rootMargin","options","isFirstUpdate","handleObserve","entries","ratio","intersectionRatio","setTimeout","IntersectionObserver","_objectSpread","e","observe","autoUpdate","update","_options","_options$ancestorScro","ancestorScroll","_options$ancestorResi","ancestorResize","_options$elementResiz","elementResize","ResizeObserver","_options$layoutShift","layoutShift","_options$animationFra","animationFrame","referenceEl","ancestors","forEach","addEventListener","passive","cleanupIo","reobserveFrame","resizeObserver","_ref3","_slicedToArray","firstEntry","target","unobserve","cancelAnimationFrame","requestAnimationFrame","_resizeObserver","frameId","prevRefRect","frameLoop","nextRefRect","_resizeObserver2","removeEventListener","Map","mergedOptions","platformWithCache"],"sources":["C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@floating-ui/dom/dist/floating-ui.dom.mjs"],"sourcesContent":["import { rectToClientRect, detectOverflow as detectOverflow$1, offset as offset$1, autoPlacement as autoPlacement$1, shift as shift$1, flip as flip$1, size as size$1, hide as hide$1, arrow as arrow$1, inline as inline$1, limitShift as limitShift$1, computePosition as computePosition$1 } from '@floating-ui/core';\nimport { round, createCoords, max, min, floor } from '@floating-ui/utils';\nimport { getComputedStyle, isHTMLElement, isElement, getWindow, isWebKit, getFrameElement, getNodeScroll, getDocumentElement, isTopLayer, getNodeName, isOverflowElement, getOverflowAncestors, getParentNode, isLastTraversableNode, isContainingBlock, isTableElement, getContainingBlock } from '@floating-ui/utils/dom';\nexport { getOverflowAncestors } from '@floating-ui/utils/dom';\n\nfunction getCssDimensions(element) {\n  const css = getComputedStyle(element);\n  // In testing environments, the `width` and `height` properties are empty\n  // strings for SVG elements, returning NaN. Fallback to `0` in this case.\n  let width = parseFloat(css.width) || 0;\n  let height = parseFloat(css.height) || 0;\n  const hasOffset = isHTMLElement(element);\n  const offsetWidth = hasOffset ? element.offsetWidth : width;\n  const offsetHeight = hasOffset ? element.offsetHeight : height;\n  const shouldFallback = round(width) !== offsetWidth || round(height) !== offsetHeight;\n  if (shouldFallback) {\n    width = offsetWidth;\n    height = offsetHeight;\n  }\n  return {\n    width,\n    height,\n    $: shouldFallback\n  };\n}\n\nfunction unwrapElement(element) {\n  return !isElement(element) ? element.contextElement : element;\n}\n\nfunction getScale(element) {\n  const domElement = unwrapElement(element);\n  if (!isHTMLElement(domElement)) {\n    return createCoords(1);\n  }\n  const rect = domElement.getBoundingClientRect();\n  const {\n    width,\n    height,\n    $\n  } = getCssDimensions(domElement);\n  let x = ($ ? round(rect.width) : rect.width) / width;\n  let y = ($ ? round(rect.height) : rect.height) / height;\n\n  // 0, NaN, or Infinity should always fallback to 1.\n\n  if (!x || !Number.isFinite(x)) {\n    x = 1;\n  }\n  if (!y || !Number.isFinite(y)) {\n    y = 1;\n  }\n  return {\n    x,\n    y\n  };\n}\n\nconst noOffsets = /*#__PURE__*/createCoords(0);\nfunction getVisualOffsets(element) {\n  const win = getWindow(element);\n  if (!isWebKit() || !win.visualViewport) {\n    return noOffsets;\n  }\n  return {\n    x: win.visualViewport.offsetLeft,\n    y: win.visualViewport.offsetTop\n  };\n}\nfunction shouldAddVisualOffsets(element, isFixed, floatingOffsetParent) {\n  if (isFixed === void 0) {\n    isFixed = false;\n  }\n  if (!floatingOffsetParent || isFixed && floatingOffsetParent !== getWindow(element)) {\n    return false;\n  }\n  return isFixed;\n}\n\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n  const clientRect = element.getBoundingClientRect();\n  const domElement = unwrapElement(element);\n  let scale = createCoords(1);\n  if (includeScale) {\n    if (offsetParent) {\n      if (isElement(offsetParent)) {\n        scale = getScale(offsetParent);\n      }\n    } else {\n      scale = getScale(element);\n    }\n  }\n  const visualOffsets = shouldAddVisualOffsets(domElement, isFixedStrategy, offsetParent) ? getVisualOffsets(domElement) : createCoords(0);\n  let x = (clientRect.left + visualOffsets.x) / scale.x;\n  let y = (clientRect.top + visualOffsets.y) / scale.y;\n  let width = clientRect.width / scale.x;\n  let height = clientRect.height / scale.y;\n  if (domElement) {\n    const win = getWindow(domElement);\n    const offsetWin = offsetParent && isElement(offsetParent) ? getWindow(offsetParent) : offsetParent;\n    let currentWin = win;\n    let currentIFrame = getFrameElement(currentWin);\n    while (currentIFrame && offsetParent && offsetWin !== currentWin) {\n      const iframeScale = getScale(currentIFrame);\n      const iframeRect = currentIFrame.getBoundingClientRect();\n      const css = getComputedStyle(currentIFrame);\n      const left = iframeRect.left + (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) * iframeScale.x;\n      const top = iframeRect.top + (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;\n      x *= iframeScale.x;\n      y *= iframeScale.y;\n      width *= iframeScale.x;\n      height *= iframeScale.y;\n      x += left;\n      y += top;\n      currentWin = getWindow(currentIFrame);\n      currentIFrame = getFrameElement(currentWin);\n    }\n  }\n  return rectToClientRect({\n    width,\n    height,\n    x,\n    y\n  });\n}\n\n// If <html> has a CSS width greater than the viewport, then this will be\n// incorrect for RTL.\nfunction getWindowScrollBarX(element, rect) {\n  const leftScroll = getNodeScroll(element).scrollLeft;\n  if (!rect) {\n    return getBoundingClientRect(getDocumentElement(element)).left + leftScroll;\n  }\n  return rect.left + leftScroll;\n}\n\nfunction getHTMLOffset(documentElement, scroll, ignoreScrollbarX) {\n  if (ignoreScrollbarX === void 0) {\n    ignoreScrollbarX = false;\n  }\n  const htmlRect = documentElement.getBoundingClientRect();\n  const x = htmlRect.left + scroll.scrollLeft - (ignoreScrollbarX ? 0 :\n  // RTL <body> scrollbar.\n  getWindowScrollBarX(documentElement, htmlRect));\n  const y = htmlRect.top + scroll.scrollTop;\n  return {\n    x,\n    y\n  };\n}\n\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n  let {\n    elements,\n    rect,\n    offsetParent,\n    strategy\n  } = _ref;\n  const isFixed = strategy === 'fixed';\n  const documentElement = getDocumentElement(offsetParent);\n  const topLayer = elements ? isTopLayer(elements.floating) : false;\n  if (offsetParent === documentElement || topLayer && isFixed) {\n    return rect;\n  }\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  let scale = createCoords(1);\n  const offsets = createCoords(0);\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent);\n      scale = getScale(offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    }\n  }\n  const htmlOffset = documentElement && !isOffsetParentAnElement && !isFixed ? getHTMLOffset(documentElement, scroll, true) : createCoords(0);\n  return {\n    width: rect.width * scale.x,\n    height: rect.height * scale.y,\n    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x + htmlOffset.x,\n    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y + htmlOffset.y\n  };\n}\n\nfunction getClientRects(element) {\n  return Array.from(element.getClientRects());\n}\n\n// Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable.\nfunction getDocumentRect(element) {\n  const html = getDocumentElement(element);\n  const scroll = getNodeScroll(element);\n  const body = element.ownerDocument.body;\n  const width = max(html.scrollWidth, html.clientWidth, body.scrollWidth, body.clientWidth);\n  const height = max(html.scrollHeight, html.clientHeight, body.scrollHeight, body.clientHeight);\n  let x = -scroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -scroll.scrollTop;\n  if (getComputedStyle(body).direction === 'rtl') {\n    x += max(html.clientWidth, body.clientWidth) - width;\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\nfunction getViewportRect(element, strategy) {\n  const win = getWindow(element);\n  const html = getDocumentElement(element);\n  const visualViewport = win.visualViewport;\n  let width = html.clientWidth;\n  let height = html.clientHeight;\n  let x = 0;\n  let y = 0;\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    const visualViewportBased = isWebKit();\n    if (!visualViewportBased || visualViewportBased && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\n// Returns the inner client rect, subtracting scrollbars if present.\nfunction getInnerBoundingClientRect(element, strategy) {\n  const clientRect = getBoundingClientRect(element, true, strategy === 'fixed');\n  const top = clientRect.top + element.clientTop;\n  const left = clientRect.left + element.clientLeft;\n  const scale = isHTMLElement(element) ? getScale(element) : createCoords(1);\n  const width = element.clientWidth * scale.x;\n  const height = element.clientHeight * scale.y;\n  const x = left * scale.x;\n  const y = top * scale.y;\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\nfunction getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {\n  let rect;\n  if (clippingAncestor === 'viewport') {\n    rect = getViewportRect(element, strategy);\n  } else if (clippingAncestor === 'document') {\n    rect = getDocumentRect(getDocumentElement(element));\n  } else if (isElement(clippingAncestor)) {\n    rect = getInnerBoundingClientRect(clippingAncestor, strategy);\n  } else {\n    const visualOffsets = getVisualOffsets(element);\n    rect = {\n      x: clippingAncestor.x - visualOffsets.x,\n      y: clippingAncestor.y - visualOffsets.y,\n      width: clippingAncestor.width,\n      height: clippingAncestor.height\n    };\n  }\n  return rectToClientRect(rect);\n}\nfunction hasFixedPositionAncestor(element, stopNode) {\n  const parentNode = getParentNode(element);\n  if (parentNode === stopNode || !isElement(parentNode) || isLastTraversableNode(parentNode)) {\n    return false;\n  }\n  return getComputedStyle(parentNode).position === 'fixed' || hasFixedPositionAncestor(parentNode, stopNode);\n}\n\n// A \"clipping ancestor\" is an `overflow` element with the characteristic of\n// clipping (or hiding) child elements. This returns all clipping ancestors\n// of the given element up the tree.\nfunction getClippingElementAncestors(element, cache) {\n  const cachedResult = cache.get(element);\n  if (cachedResult) {\n    return cachedResult;\n  }\n  let result = getOverflowAncestors(element, [], false).filter(el => isElement(el) && getNodeName(el) !== 'body');\n  let currentContainingBlockComputedStyle = null;\n  const elementIsFixed = getComputedStyle(element).position === 'fixed';\n  let currentNode = elementIsFixed ? getParentNode(element) : element;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    const computedStyle = getComputedStyle(currentNode);\n    const currentNodeIsContaining = isContainingBlock(currentNode);\n    if (!currentNodeIsContaining && computedStyle.position === 'fixed') {\n      currentContainingBlockComputedStyle = null;\n    }\n    const shouldDropCurrentNode = elementIsFixed ? !currentNodeIsContaining && !currentContainingBlockComputedStyle : !currentNodeIsContaining && computedStyle.position === 'static' && !!currentContainingBlockComputedStyle && ['absolute', 'fixed'].includes(currentContainingBlockComputedStyle.position) || isOverflowElement(currentNode) && !currentNodeIsContaining && hasFixedPositionAncestor(element, currentNode);\n    if (shouldDropCurrentNode) {\n      // Drop non-containing blocks.\n      result = result.filter(ancestor => ancestor !== currentNode);\n    } else {\n      // Record last containing block for next iteration.\n      currentContainingBlockComputedStyle = computedStyle;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  cache.set(element, result);\n  return result;\n}\n\n// Gets the maximum area that the element is visible in due to any number of\n// clipping ancestors.\nfunction getClippingRect(_ref) {\n  let {\n    element,\n    boundary,\n    rootBoundary,\n    strategy\n  } = _ref;\n  const elementClippingAncestors = boundary === 'clippingAncestors' ? isTopLayer(element) ? [] : getClippingElementAncestors(element, this._c) : [].concat(boundary);\n  const clippingAncestors = [...elementClippingAncestors, rootBoundary];\n  const firstClippingAncestor = clippingAncestors[0];\n  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {\n    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n  return {\n    width: clippingRect.right - clippingRect.left,\n    height: clippingRect.bottom - clippingRect.top,\n    x: clippingRect.left,\n    y: clippingRect.top\n  };\n}\n\nfunction getDimensions(element) {\n  const {\n    width,\n    height\n  } = getCssDimensions(element);\n  return {\n    width,\n    height\n  };\n}\n\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  const isFixed = strategy === 'fixed';\n  const rect = getBoundingClientRect(element, true, isFixed, offsetParent);\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = createCoords(0);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isOffsetParentAnElement) {\n      const offsetRect = getBoundingClientRect(offsetParent, true, isFixed, offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } else if (documentElement) {\n      // If the <body> scrollbar appears on the left (e.g. RTL systems). Use\n      // Firefox with layout.scrollbar.side = 3 in about:config to test this.\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n  const htmlOffset = documentElement && !isOffsetParentAnElement && !isFixed ? getHTMLOffset(documentElement, scroll) : createCoords(0);\n  const x = rect.left + scroll.scrollLeft - offsets.x - htmlOffset.x;\n  const y = rect.top + scroll.scrollTop - offsets.y - htmlOffset.y;\n  return {\n    x,\n    y,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\nfunction isStaticPositioned(element) {\n  return getComputedStyle(element).position === 'static';\n}\n\nfunction getTrueOffsetParent(element, polyfill) {\n  if (!isHTMLElement(element) || getComputedStyle(element).position === 'fixed') {\n    return null;\n  }\n  if (polyfill) {\n    return polyfill(element);\n  }\n  let rawOffsetParent = element.offsetParent;\n\n  // Firefox returns the <html> element as the offsetParent if it's non-static,\n  // while Chrome and Safari return the <body> element. The <body> element must\n  // be used to perform the correct calculations even if the <html> element is\n  // non-static.\n  if (getDocumentElement(element) === rawOffsetParent) {\n    rawOffsetParent = rawOffsetParent.ownerDocument.body;\n  }\n  return rawOffsetParent;\n}\n\n// Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\nfunction getOffsetParent(element, polyfill) {\n  const win = getWindow(element);\n  if (isTopLayer(element)) {\n    return win;\n  }\n  if (!isHTMLElement(element)) {\n    let svgOffsetParent = getParentNode(element);\n    while (svgOffsetParent && !isLastTraversableNode(svgOffsetParent)) {\n      if (isElement(svgOffsetParent) && !isStaticPositioned(svgOffsetParent)) {\n        return svgOffsetParent;\n      }\n      svgOffsetParent = getParentNode(svgOffsetParent);\n    }\n    return win;\n  }\n  let offsetParent = getTrueOffsetParent(element, polyfill);\n  while (offsetParent && isTableElement(offsetParent) && isStaticPositioned(offsetParent)) {\n    offsetParent = getTrueOffsetParent(offsetParent, polyfill);\n  }\n  if (offsetParent && isLastTraversableNode(offsetParent) && isStaticPositioned(offsetParent) && !isContainingBlock(offsetParent)) {\n    return win;\n  }\n  return offsetParent || getContainingBlock(element) || win;\n}\n\nconst getElementRects = async function (data) {\n  const getOffsetParentFn = this.getOffsetParent || getOffsetParent;\n  const getDimensionsFn = this.getDimensions;\n  const floatingDimensions = await getDimensionsFn(data.floating);\n  return {\n    reference: getRectRelativeToOffsetParent(data.reference, await getOffsetParentFn(data.floating), data.strategy),\n    floating: {\n      x: 0,\n      y: 0,\n      width: floatingDimensions.width,\n      height: floatingDimensions.height\n    }\n  };\n};\n\nfunction isRTL(element) {\n  return getComputedStyle(element).direction === 'rtl';\n}\n\nconst platform = {\n  convertOffsetParentRelativeRectToViewportRelativeRect,\n  getDocumentElement,\n  getClippingRect,\n  getOffsetParent,\n  getElementRects,\n  getClientRects,\n  getDimensions,\n  getScale,\n  isElement,\n  isRTL\n};\n\nfunction rectsAreEqual(a, b) {\n  return a.x === b.x && a.y === b.y && a.width === b.width && a.height === b.height;\n}\n\n// https://samthor.au/2021/observing-dom/\nfunction observeMove(element, onMove) {\n  let io = null;\n  let timeoutId;\n  const root = getDocumentElement(element);\n  function cleanup() {\n    var _io;\n    clearTimeout(timeoutId);\n    (_io = io) == null || _io.disconnect();\n    io = null;\n  }\n  function refresh(skip, threshold) {\n    if (skip === void 0) {\n      skip = false;\n    }\n    if (threshold === void 0) {\n      threshold = 1;\n    }\n    cleanup();\n    const elementRectForRootMargin = element.getBoundingClientRect();\n    const {\n      left,\n      top,\n      width,\n      height\n    } = elementRectForRootMargin;\n    if (!skip) {\n      onMove();\n    }\n    if (!width || !height) {\n      return;\n    }\n    const insetTop = floor(top);\n    const insetRight = floor(root.clientWidth - (left + width));\n    const insetBottom = floor(root.clientHeight - (top + height));\n    const insetLeft = floor(left);\n    const rootMargin = -insetTop + \"px \" + -insetRight + \"px \" + -insetBottom + \"px \" + -insetLeft + \"px\";\n    const options = {\n      rootMargin,\n      threshold: max(0, min(1, threshold)) || 1\n    };\n    let isFirstUpdate = true;\n    function handleObserve(entries) {\n      const ratio = entries[0].intersectionRatio;\n      if (ratio !== threshold) {\n        if (!isFirstUpdate) {\n          return refresh();\n        }\n        if (!ratio) {\n          // If the reference is clipped, the ratio is 0. Throttle the refresh\n          // to prevent an infinite loop of updates.\n          timeoutId = setTimeout(() => {\n            refresh(false, 1e-7);\n          }, 1000);\n        } else {\n          refresh(false, ratio);\n        }\n      }\n      if (ratio === 1 && !rectsAreEqual(elementRectForRootMargin, element.getBoundingClientRect())) {\n        // It's possible that even though the ratio is reported as 1, the\n        // element is not actually fully within the IntersectionObserver's root\n        // area anymore. This can happen under performance constraints. This may\n        // be a bug in the browser's IntersectionObserver implementation. To\n        // work around this, we compare the element's bounding rect now with\n        // what it was at the time we created the IntersectionObserver. If they\n        // are not equal then the element moved, so we refresh.\n        refresh();\n      }\n      isFirstUpdate = false;\n    }\n\n    // Older browsers don't support a `document` as the root and will throw an\n    // error.\n    try {\n      io = new IntersectionObserver(handleObserve, {\n        ...options,\n        // Handle <iframe>s\n        root: root.ownerDocument\n      });\n    } catch (e) {\n      io = new IntersectionObserver(handleObserve, options);\n    }\n    io.observe(element);\n  }\n  refresh(true);\n  return cleanup;\n}\n\n/**\n * Automatically updates the position of the floating element when necessary.\n * Should only be called when the floating element is mounted on the DOM or\n * visible on the screen.\n * @returns cleanup function that should be invoked when the floating element is\n * removed from the DOM or hidden from the screen.\n * @see https://floating-ui.com/docs/autoUpdate\n */\nfunction autoUpdate(reference, floating, update, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    ancestorScroll = true,\n    ancestorResize = true,\n    elementResize = typeof ResizeObserver === 'function',\n    layoutShift = typeof IntersectionObserver === 'function',\n    animationFrame = false\n  } = options;\n  const referenceEl = unwrapElement(reference);\n  const ancestors = ancestorScroll || ancestorResize ? [...(referenceEl ? getOverflowAncestors(referenceEl) : []), ...getOverflowAncestors(floating)] : [];\n  ancestors.forEach(ancestor => {\n    ancestorScroll && ancestor.addEventListener('scroll', update, {\n      passive: true\n    });\n    ancestorResize && ancestor.addEventListener('resize', update);\n  });\n  const cleanupIo = referenceEl && layoutShift ? observeMove(referenceEl, update) : null;\n  let reobserveFrame = -1;\n  let resizeObserver = null;\n  if (elementResize) {\n    resizeObserver = new ResizeObserver(_ref => {\n      let [firstEntry] = _ref;\n      if (firstEntry && firstEntry.target === referenceEl && resizeObserver) {\n        // Prevent update loops when using the `size` middleware.\n        // https://github.com/floating-ui/floating-ui/issues/1740\n        resizeObserver.unobserve(floating);\n        cancelAnimationFrame(reobserveFrame);\n        reobserveFrame = requestAnimationFrame(() => {\n          var _resizeObserver;\n          (_resizeObserver = resizeObserver) == null || _resizeObserver.observe(floating);\n        });\n      }\n      update();\n    });\n    if (referenceEl && !animationFrame) {\n      resizeObserver.observe(referenceEl);\n    }\n    resizeObserver.observe(floating);\n  }\n  let frameId;\n  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;\n  if (animationFrame) {\n    frameLoop();\n  }\n  function frameLoop() {\n    const nextRefRect = getBoundingClientRect(reference);\n    if (prevRefRect && !rectsAreEqual(prevRefRect, nextRefRect)) {\n      update();\n    }\n    prevRefRect = nextRefRect;\n    frameId = requestAnimationFrame(frameLoop);\n  }\n  update();\n  return () => {\n    var _resizeObserver2;\n    ancestors.forEach(ancestor => {\n      ancestorScroll && ancestor.removeEventListener('scroll', update);\n      ancestorResize && ancestor.removeEventListener('resize', update);\n    });\n    cleanupIo == null || cleanupIo();\n    (_resizeObserver2 = resizeObserver) == null || _resizeObserver2.disconnect();\n    resizeObserver = null;\n    if (animationFrame) {\n      cancelAnimationFrame(frameId);\n    }\n  };\n}\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nconst detectOverflow = detectOverflow$1;\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = offset$1;\n\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = autoPlacement$1;\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = shift$1;\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = flip$1;\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = size$1;\n\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = hide$1;\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = arrow$1;\n\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = inline$1;\n\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = limitShift$1;\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a given reference element.\n */\nconst computePosition = (reference, floating, options) => {\n  // This caches the expensive `getClippingElementAncestors` function so that\n  // multiple lifecycle resets re-use the same result. It only lives for a\n  // single call. If other functions become expensive, we can add them as well.\n  const cache = new Map();\n  const mergedOptions = {\n    platform,\n    ...options\n  };\n  const platformWithCache = {\n    ...mergedOptions.platform,\n    _c: cache\n  };\n  return computePosition$1(reference, floating, {\n    ...mergedOptions,\n    platform: platformWithCache\n  });\n};\n\nexport { arrow, autoPlacement, autoUpdate, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, platform, shift, size };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}