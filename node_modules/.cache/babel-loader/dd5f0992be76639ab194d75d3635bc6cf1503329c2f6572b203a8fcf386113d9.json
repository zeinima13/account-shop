{"ast":null,"code":"import _defineProperty from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport { isNil } from 'lodash-unified';\nimport { buildProps, definePropType } from '../../../utils/vue/props/runtime.mjs';\nimport { useSizeProp } from '../../../hooks/use-size/index.mjs';\nimport { useTooltipContentProps } from '../../tooltip/src/content.mjs';\nimport { useAriaProps } from '../../../hooks/use-aria/index.mjs';\nimport { UPDATE_MODEL_EVENT, CHANGE_EVENT } from '../../../constants/event.mjs';\nimport { isString } from '@vue/shared';\nvar colorPickerProps = buildProps(_objectSpread({\n  modelValue: String,\n  id: String,\n  showAlpha: Boolean,\n  colorFormat: String,\n  disabled: Boolean,\n  size: useSizeProp,\n  popperClass: {\n    type: String,\n    \"default\": \"\"\n  },\n  tabindex: {\n    type: [String, Number],\n    \"default\": 0\n  },\n  teleported: useTooltipContentProps.teleported,\n  predefine: {\n    type: definePropType(Array)\n  },\n  validateEvent: {\n    type: Boolean,\n    \"default\": true\n  }\n}, useAriaProps([\"ariaLabel\"])));\nvar colorPickerEmits = _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty({}, UPDATE_MODEL_EVENT, function (val) {\n  return isString(val) || isNil(val);\n}), CHANGE_EVENT, function (val) {\n  return isString(val) || isNil(val);\n}), \"activeChange\", function activeChange(val) {\n  return isString(val) || isNil(val);\n}), \"focus\", function focus(evt) {\n  return evt instanceof FocusEvent;\n}), \"blur\", function blur(evt) {\n  return evt instanceof FocusEvent;\n});\nvar colorPickerContextKey = Symbol(\"colorPickerContextKey\");\nexport { colorPickerContextKey, colorPickerEmits, colorPickerProps };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}