{"ast":null,"code":"import _objectSpread from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport { defineComponent, useSlots, provide, computed, openBlock, createElementBlock, normalizeClass, unref, createElementVNode, renderSlot, createTextVNode, toDisplayString, createCommentVNode, Fragment, renderList, createBlock } from 'vue';\nimport ElDescriptionsRow from './descriptions-row2.mjs';\nimport { descriptionsKey } from './token.mjs';\nimport { descriptionProps } from './description.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { useFormSize } from '../../form/src/hooks/use-form-common-props.mjs';\nimport { flattedChildren } from '../../../utils/vue/vnode.mjs';\nvar __default__ = defineComponent({\n  name: \"ElDescriptions\"\n});\nvar _sfc_main = /* @__PURE__ */defineComponent(_objectSpread(_objectSpread({}, __default__), {}, {\n  props: descriptionProps,\n  setup: function setup(__props) {\n    var props = __props;\n    var ns = useNamespace(\"descriptions\");\n    var descriptionsSize = useFormSize();\n    var slots = useSlots();\n    provide(descriptionsKey, props);\n    var descriptionKls = computed(function () {\n      return [ns.b(), ns.m(descriptionsSize.value)];\n    });\n    var filledNode = function filledNode(node, span, count) {\n      var isLast = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n      if (!node.props) {\n        node.props = {};\n      }\n      if (span > count) {\n        node.props.span = count;\n      }\n      if (isLast) {\n        node.props.span = span;\n      }\n      return node;\n    };\n    var getRows = function getRows() {\n      if (!slots[\"default\"]) return [];\n      var children = flattedChildren(slots[\"default\"]()).filter(function (node) {\n        var _a;\n        return ((_a = node == null ? void 0 : node.type) == null ? void 0 : _a.name) === \"ElDescriptionsItem\";\n      });\n      var rows = [];\n      var temp = [];\n      var count = props.column;\n      var totalSpan = 0;\n      var rowspanTemp = [];\n      children.forEach(function (node, index) {\n        var _a, _b, _c;\n        var span = ((_a = node.props) == null ? void 0 : _a.span) || 1;\n        var rowspan = ((_b = node.props) == null ? void 0 : _b.rowspan) || 1;\n        var rowNo = rows.length;\n        rowspanTemp[rowNo] || (rowspanTemp[rowNo] = 0);\n        if (rowspan > 1) {\n          for (var i = 1; i < rowspan; i++) {\n            rowspanTemp[_c = rowNo + i] || (rowspanTemp[_c] = 0);\n            rowspanTemp[rowNo + i]++;\n            totalSpan++;\n          }\n        }\n        if (rowspanTemp[rowNo] > 0) {\n          count -= rowspanTemp[rowNo];\n          rowspanTemp[rowNo] = 0;\n        }\n        if (index < children.length - 1) {\n          totalSpan += span > count ? count : span;\n        }\n        if (index === children.length - 1) {\n          var lastSpan = props.column - totalSpan % props.column;\n          temp.push(filledNode(node, lastSpan, count, true));\n          rows.push(temp);\n          return;\n        }\n        if (span < count) {\n          count -= span;\n          temp.push(node);\n        } else {\n          temp.push(filledNode(node, span, count));\n          rows.push(temp);\n          count = props.column;\n          temp = [];\n        }\n      });\n      return rows;\n    };\n    return function (_ctx, _cache) {\n      return openBlock(), createElementBlock(\"div\", {\n        \"class\": normalizeClass(unref(descriptionKls))\n      }, [_ctx.title || _ctx.extra || _ctx.$slots.title || _ctx.$slots.extra ? (openBlock(), createElementBlock(\"div\", {\n        key: 0,\n        \"class\": normalizeClass(unref(ns).e(\"header\"))\n      }, [createElementVNode(\"div\", {\n        \"class\": normalizeClass(unref(ns).e(\"title\"))\n      }, [renderSlot(_ctx.$slots, \"title\", {}, function () {\n        return [createTextVNode(toDisplayString(_ctx.title), 1)];\n      })], 2), createElementVNode(\"div\", {\n        \"class\": normalizeClass(unref(ns).e(\"extra\"))\n      }, [renderSlot(_ctx.$slots, \"extra\", {}, function () {\n        return [createTextVNode(toDisplayString(_ctx.extra), 1)];\n      })], 2)], 2)) : createCommentVNode(\"v-if\", true), createElementVNode(\"div\", {\n        \"class\": normalizeClass(unref(ns).e(\"body\"))\n      }, [createElementVNode(\"table\", {\n        \"class\": normalizeClass([unref(ns).e(\"table\"), unref(ns).is(\"bordered\", _ctx.border)])\n      }, [createElementVNode(\"tbody\", null, [(openBlock(true), createElementBlock(Fragment, null, renderList(getRows(), function (row, _index) {\n        return openBlock(), createBlock(ElDescriptionsRow, {\n          key: _index,\n          row: row\n        }, null, 8, [\"row\"]);\n      }), 128))])], 2)], 2)], 2);\n    };\n  }\n}));\nvar Descriptions = /* @__PURE__ */_export_sfc(_sfc_main, [[\"__file\", \"description.vue\"]]);\nexport { Descriptions as default };","map":{"version":3,"names":["name","ns","useNamespace","descriptionsSize","useFormSize","slots","useSlots","provide","descriptionsKey","props","descriptionKls","computed","b","m","value","filledNode","node","span","count","isLast","arguments","length","undefined","getRows","children","flattedChildren","filter","_a","type","rows","temp","column","totalSpan","rowspanTemp","forEach","index","_b","_c","rowspan","rowNo","i","lastSpan","push"],"sources":["../../../../../../packages/components/descriptions/src/description.vue"],"sourcesContent":["<template>\n  <div :class=\"descriptionKls\">\n    <div\n      v-if=\"title || extra || $slots.title || $slots.extra\"\n      :class=\"ns.e('header')\"\n    >\n      <div :class=\"ns.e('title')\">\n        <slot name=\"title\">{{ title }}</slot>\n      </div>\n      <div :class=\"ns.e('extra')\">\n        <slot name=\"extra\">{{ extra }}</slot>\n      </div>\n    </div>\n\n    <div :class=\"ns.e('body')\">\n      <table :class=\"[ns.e('table'), ns.is('bordered', border)]\">\n        <tbody>\n          <template v-for=\"(row, _index) in getRows()\" :key=\"_index\">\n            <el-descriptions-row :row=\"row\" />\n          </template>\n        </tbody>\n      </table>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed, provide, useSlots } from 'vue'\nimport { flattedChildren } from '@element-plus/utils'\nimport { useNamespace } from '@element-plus/hooks'\nimport { useFormSize } from '@element-plus/components/form'\nimport ElDescriptionsRow from './descriptions-row.vue'\nimport { descriptionsKey } from './token'\nimport { descriptionProps } from './description'\n\nimport type { IDescriptionsInject } from './descriptions.type'\nimport type { DescriptionItemVNode } from './description-item'\n\ndefineOptions({\n  name: 'ElDescriptions',\n})\n\nconst props = defineProps(descriptionProps)\n\nconst ns = useNamespace('descriptions')\n\nconst descriptionsSize = useFormSize()\n\nconst slots = useSlots()\n\nprovide(descriptionsKey, props as IDescriptionsInject)\n\nconst descriptionKls = computed(() => [ns.b(), ns.m(descriptionsSize.value)])\n\nconst filledNode = (\n  node: DescriptionItemVNode,\n  span: number,\n  count: number,\n  isLast = false\n) => {\n  if (!node.props) {\n    node.props = {}\n  }\n  if (span > count) {\n    node.props.span = count\n  }\n  if (isLast) {\n    // set the last span\n    node.props.span = span\n  }\n  return node\n}\n\nconst getRows = () => {\n  if (!slots.default) return []\n\n  const children = flattedChildren(slots.default()).filter(\n    (node): node is DescriptionItemVNode =>\n      (node as any)?.type?.name === 'ElDescriptionsItem'\n  )\n  const rows: DescriptionItemVNode[][] = []\n  let temp: DescriptionItemVNode[] = []\n  let count = props.column\n  let totalSpan = 0 // all spans number of item\n  const rowspanTemp: number[] = [] // the number of row spans\n\n  children.forEach((node, index) => {\n    const span = node.props?.span || 1\n    const rowspan = node.props?.rowspan || 1\n    const rowNo = rows.length\n    rowspanTemp[rowNo] ||= 0\n\n    if (rowspan > 1) {\n      for (let i = 1; i < rowspan; i++) {\n        rowspanTemp[rowNo + i] ||= 0\n        rowspanTemp[rowNo + i]++\n        totalSpan++\n      }\n    }\n    if (rowspanTemp[rowNo] > 0) {\n      count -= rowspanTemp[rowNo]\n      rowspanTemp[rowNo] = 0\n    }\n    if (index < children.length - 1) {\n      totalSpan += span > count ? count : span\n    }\n\n    if (index === children.length - 1) {\n      // calculate the last item span\n      const lastSpan = props.column - (totalSpan % props.column)\n      temp.push(filledNode(node, lastSpan, count, true))\n      rows.push(temp)\n      return\n    }\n\n    if (span < count) {\n      count -= span\n      temp.push(node)\n    } else {\n      temp.push(filledNode(node, span, count))\n      rows.push(temp)\n      count = props.column\n      temp = []\n    }\n  })\n\n  return rows\n}\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}