{"ast":null,"code":"import _defineProperty from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { defineComponent, computed, ref, unref, openBlock, createBlock, mergeProps, withCtx, createElementBlock, normalizeClass, toDisplayString, createCommentVNode, renderSlot, createTextVNode } from 'vue';\nimport { ElTooltip } from '../../tooltip/index.mjs';\nimport { popoverProps, popoverEmits } from './popover2.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { addUnit } from '../../../utils/dom/style.mjs';\nvar updateEventKeyRaw = \"onUpdate:visible\";\nvar __default__ = defineComponent({\n  name: \"ElPopover\"\n});\nvar _sfc_main = /* @__PURE__ */defineComponent(_objectSpread(_objectSpread({}, __default__), {}, {\n  props: popoverProps,\n  emits: popoverEmits,\n  setup: function setup(__props, _ref) {\n    var expose = _ref.expose,\n      emit = _ref.emit;\n    var props = __props;\n    var onUpdateVisible = computed(function () {\n      return props[updateEventKeyRaw];\n    });\n    var ns = useNamespace(\"popover\");\n    var tooltipRef = ref();\n    var popperRef = computed(function () {\n      var _a;\n      return (_a = unref(tooltipRef)) == null ? void 0 : _a.popperRef;\n    });\n    var style = computed(function () {\n      return [{\n        width: addUnit(props.width)\n      }, props.popperStyle];\n    });\n    var kls = computed(function () {\n      return [ns.b(), props.popperClass, _defineProperty({}, ns.m(\"plain\"), !!props.content)];\n    });\n    var gpuAcceleration = computed(function () {\n      return props.transition === \"\".concat(ns.namespace.value, \"-fade-in-linear\");\n    });\n    var hide = function hide() {\n      var _a;\n      (_a = tooltipRef.value) == null ? void 0 : _a.hide();\n    };\n    var beforeEnter = function beforeEnter() {\n      emit(\"before-enter\");\n    };\n    var beforeLeave = function beforeLeave() {\n      emit(\"before-leave\");\n    };\n    var afterEnter = function afterEnter() {\n      emit(\"after-enter\");\n    };\n    var afterLeave = function afterLeave() {\n      emit(\"update:visible\", false);\n      emit(\"after-leave\");\n    };\n    expose({\n      popperRef: popperRef,\n      hide: hide\n    });\n    return function (_ctx, _cache) {\n      return openBlock(), createBlock(unref(ElTooltip), mergeProps({\n        ref_key: \"tooltipRef\",\n        ref: tooltipRef\n      }, _ctx.$attrs, {\n        trigger: _ctx.trigger,\n        placement: _ctx.placement,\n        disabled: _ctx.disabled,\n        visible: _ctx.visible,\n        transition: _ctx.transition,\n        \"popper-options\": _ctx.popperOptions,\n        tabindex: _ctx.tabindex,\n        content: _ctx.content,\n        offset: _ctx.offset,\n        \"show-after\": _ctx.showAfter,\n        \"hide-after\": _ctx.hideAfter,\n        \"auto-close\": _ctx.autoClose,\n        \"show-arrow\": _ctx.showArrow,\n        \"aria-label\": _ctx.title,\n        effect: _ctx.effect,\n        enterable: _ctx.enterable,\n        \"popper-class\": unref(kls),\n        \"popper-style\": unref(style),\n        teleported: _ctx.teleported,\n        persistent: _ctx.persistent,\n        \"gpu-acceleration\": unref(gpuAcceleration),\n        \"onUpdate:visible\": unref(onUpdateVisible),\n        onBeforeShow: beforeEnter,\n        onBeforeHide: beforeLeave,\n        onShow: afterEnter,\n        onHide: afterLeave\n      }), {\n        content: withCtx(function () {\n          return [_ctx.title ? (openBlock(), createElementBlock(\"div\", {\n            key: 0,\n            \"class\": normalizeClass(unref(ns).e(\"title\")),\n            role: \"title\"\n          }, toDisplayString(_ctx.title), 3)) : createCommentVNode(\"v-if\", true), renderSlot(_ctx.$slots, \"default\", {}, function () {\n            return [createTextVNode(toDisplayString(_ctx.content), 1)];\n          })];\n        }),\n        \"default\": withCtx(function () {\n          return [_ctx.$slots.reference ? renderSlot(_ctx.$slots, \"reference\", {\n            key: 0\n          }) : createCommentVNode(\"v-if\", true)];\n        }),\n        _: 3\n      }, 16, [\"trigger\", \"placement\", \"disabled\", \"visible\", \"transition\", \"popper-options\", \"tabindex\", \"content\", \"offset\", \"show-after\", \"hide-after\", \"auto-close\", \"show-arrow\", \"aria-label\", \"effect\", \"enterable\", \"popper-class\", \"popper-style\", \"teleported\", \"persistent\", \"gpu-acceleration\", \"onUpdate:visible\"]);\n    };\n  }\n}));\nvar Popover = /* @__PURE__ */_export_sfc(_sfc_main, [[\"__file\", \"popover.vue\"]]);\nexport { Popover as default };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}