{"ast":null,"code":"import \"core-js/modules/es.object.define-property.js\";\nvar NODE_KEY = \"$treeNodeId\";\nvar markNodeData = function markNodeData(node, data) {\n  if (!data || data[NODE_KEY]) return;\n  Object.defineProperty(data, NODE_KEY, {\n    value: node.id,\n    enumerable: false,\n    configurable: false,\n    writable: false\n  });\n};\nvar getNodeKey = function getNodeKey(key, data) {\n  if (!key) return data[NODE_KEY];\n  return data[key];\n};\nvar handleCurrentChange = function handleCurrentChange(store, emit, setCurrent) {\n  var preCurrentNode = store.value.currentNode;\n  setCurrent();\n  var currentNode = store.value.currentNode;\n  if (preCurrentNode === currentNode) return;\n  emit(\"current-change\", currentNode ? currentNode.data : null, currentNode);\n};\nexport { NODE_KEY, getNodeKey, handleCurrentChange, markNodeData };","map":{"version":3,"names":["NODE_KEY","markNodeData","node","data","Object","defineProperty","value","id","enumerable","configurable","writable","getNodeKey","key","handleCurrentChange","store","emit","setCurrent","preCurrentNode","currentNode"],"sources":["../../../../../../../packages/components/tree/src/model/util.ts"],"sourcesContent":["import type { SetupContext } from 'vue'\nimport type Node from './node'\nimport type { RootTreeType, TreeKey, TreeNodeData } from '../tree.type'\n\nexport const NODE_KEY = '$treeNodeId'\n\nexport const markNodeData = function (node: Node, data: TreeNodeData): void {\n  if (!data || data[NODE_KEY]) return\n  Object.defineProperty(data, NODE_KEY, {\n    value: node.id,\n    enumerable: false,\n    configurable: false,\n    writable: false,\n  })\n}\n\nexport const getNodeKey = function (key: TreeKey, data: TreeNodeData): any {\n  if (!key) return data[NODE_KEY]\n  return data[key]\n}\n\nexport const handleCurrentChange = (\n  store: RootTreeType['store'],\n  emit: SetupContext['emit'],\n  setCurrent: () => void\n) => {\n  const preCurrentNode = store.value.currentNode\n  setCurrent()\n  const currentNode = store.value.currentNode\n  if (preCurrentNode === currentNode) return\n\n  emit('current-change', currentNode ? currentNode.data : null, currentNode)\n}\n"],"mappings":";AAAY,IAACA,QAAQ,GAAG;AACZ,IAACC,YAAY,GAAG,SAAfA,YAAYA,CAAYC,IAAI,EAAEC,IAAI,EAAE;EAC/C,IAAI,CAACA,IAAI,IAAIA,IAAI,CAACH,QAAQ,CAAC,EACzB;EACFI,MAAM,CAACC,cAAc,CAACF,IAAI,EAAEH,QAAQ,EAAE;IACpCM,KAAK,EAAEJ,IAAI,CAACK,EAAE;IACdC,UAAU,EAAE,KAAK;IACjBC,YAAY,EAAE,KAAK;IACnBC,QAAQ,EAAE;EACd,CAAG,CAAC;AACJ;AACY,IAACC,UAAU,GAAG,SAAbA,UAAUA,CAAYC,GAAG,EAAET,IAAI,EAAE;EAC5C,IAAI,CAACS,GAAG,EACN,OAAOT,IAAI,CAACH,QAAQ,CAAC;EACvB,OAAOG,IAAI,CAACS,GAAG,CAAC;AAClB;AACY,IAACC,mBAAmB,GAAG,SAAtBA,mBAAmBA,CAAIC,KAAK,EAAEC,IAAI,EAAEC,UAAU,EAAK;EAC9D,IAAMC,cAAc,GAAGH,KAAK,CAACR,KAAK,CAACY,WAAW;EAC9CF,UAAU,EAAE;EACZ,IAAME,WAAW,GAAGJ,KAAK,CAACR,KAAK,CAACY,WAAW;EAC3C,IAAID,cAAc,KAAKC,WAAW,EAChC;EACFH,IAAI,CAAC,gBAAgB,EAAEG,WAAW,GAAGA,WAAW,CAACf,IAAI,GAAG,IAAI,EAAEe,WAAW,CAAC;AAC5E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}