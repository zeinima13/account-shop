{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.array.some.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.some.js\";\nimport { defineComponent, inject, ref, computed, watch, unref, createVNode, mergeProps, toRaw } from 'vue';\nimport { get } from 'lodash-unified';\nimport GroupItem from './group-item.mjs';\nimport OptionItem from './option-item.mjs';\nimport { useProps } from './useProps.mjs';\nimport { selectV2InjectionKey } from './token.mjs';\nimport FixedSizeList from '../../virtual-list/src/components/fixed-size-list.mjs';\nimport DynamicSizeList from '../../virtual-list/src/components/dynamic-size-list.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { isUndefined } from '../../../utils/types.mjs';\nimport { EVENT_CODE } from '../../../constants/aria.mjs';\nimport { isObject } from '@vue/shared';\nvar props = {\n  loading: Boolean,\n  data: {\n    type: Array,\n    required: true\n  },\n  hoveringIndex: Number,\n  width: Number\n};\nvar ElSelectMenu = defineComponent({\n  name: \"ElSelectDropdown\",\n  props: props,\n  setup: function setup(props2, _ref) {\n    var slots = _ref.slots,\n      expose = _ref.expose;\n    var select = inject(selectV2InjectionKey);\n    var ns = useNamespace(\"select\");\n    var _useProps = useProps(select.props),\n      getLabel = _useProps.getLabel,\n      getValue = _useProps.getValue,\n      getDisabled = _useProps.getDisabled;\n    var cachedHeights = ref([]);\n    var listRef = ref();\n    var size = computed(function () {\n      return props2.data.length;\n    });\n    watch(function () {\n      return size.value;\n    }, function () {\n      var _a, _b;\n      (_b = (_a = select.tooltipRef.value).updatePopper) == null ? void 0 : _b.call(_a);\n    });\n    var isSized = computed(function () {\n      return isUndefined(select.props.estimatedOptionHeight);\n    });\n    var listProps = computed(function () {\n      if (isSized.value) {\n        return {\n          itemSize: select.props.itemHeight\n        };\n      }\n      return {\n        estimatedSize: select.props.estimatedOptionHeight,\n        itemSize: function itemSize(idx) {\n          return cachedHeights.value[idx];\n        }\n      };\n    });\n    var contains = function contains() {\n      var arr = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      var target = arguments.length > 1 ? arguments[1] : undefined;\n      var valueKey = select.props.valueKey;\n      if (!isObject(target)) {\n        return arr.includes(target);\n      }\n      return arr && arr.some(function (item) {\n        return toRaw(get(item, valueKey)) === get(target, valueKey);\n      });\n    };\n    var isEqual = function isEqual(selected, target) {\n      if (!isObject(target)) {\n        return selected === target;\n      } else {\n        var valueKey = select.props.valueKey;\n        return get(selected, valueKey) === get(target, valueKey);\n      }\n    };\n    var isItemSelected = function isItemSelected(modelValue, target) {\n      if (select.props.multiple) {\n        return contains(modelValue, getValue(target));\n      }\n      return isEqual(modelValue, getValue(target));\n    };\n    var isItemDisabled = function isItemDisabled(modelValue, selected) {\n      var _select$props = select.props,\n        disabled = _select$props.disabled,\n        multiple = _select$props.multiple,\n        multipleLimit = _select$props.multipleLimit;\n      return disabled || !selected && (multiple ? multipleLimit > 0 && modelValue.length >= multipleLimit : false);\n    };\n    var isItemHovering = function isItemHovering(target) {\n      return props2.hoveringIndex === target;\n    };\n    var scrollToItem = function scrollToItem(index) {\n      var list = listRef.value;\n      if (list) {\n        list.scrollToItem(index);\n      }\n    };\n    var resetScrollTop = function resetScrollTop() {\n      var list = listRef.value;\n      if (list) {\n        list.resetScrollTop();\n      }\n    };\n    var exposed = {\n      listRef: listRef,\n      isSized: isSized,\n      isItemDisabled: isItemDisabled,\n      isItemHovering: isItemHovering,\n      isItemSelected: isItemSelected,\n      scrollToItem: scrollToItem,\n      resetScrollTop: resetScrollTop\n    };\n    expose(exposed);\n    var Item = function Item(itemProps) {\n      var index = itemProps.index,\n        data = itemProps.data,\n        style = itemProps.style;\n      var sized = unref(isSized);\n      var _unref = unref(listProps),\n        itemSize = _unref.itemSize,\n        estimatedSize = _unref.estimatedSize;\n      var modelValue = select.props.modelValue;\n      var onSelect = select.onSelect,\n        onHover = select.onHover;\n      var item = data[index];\n      if (item.type === \"Group\") {\n        return createVNode(GroupItem, {\n          \"item\": item,\n          \"style\": style,\n          \"height\": sized ? itemSize : estimatedSize\n        }, null);\n      }\n      var isSelected = isItemSelected(modelValue, item);\n      var isDisabled = isItemDisabled(modelValue, isSelected);\n      var isHovering = isItemHovering(index);\n      return createVNode(OptionItem, mergeProps(itemProps, {\n        \"selected\": isSelected,\n        \"disabled\": getDisabled(item) || isDisabled,\n        \"created\": !!item.created,\n        \"hovering\": isHovering,\n        \"item\": item,\n        \"onSelect\": onSelect,\n        \"onHover\": onHover\n      }), {\n        \"default\": function _default(props3) {\n          var _a;\n          return ((_a = slots[\"default\"]) == null ? void 0 : _a.call(slots, props3)) || createVNode(\"span\", null, [getLabel(item)]);\n        }\n      });\n    };\n    var onKeyboardNavigate = select.onKeyboardNavigate,\n      onKeyboardSelect = select.onKeyboardSelect;\n    var onForward = function onForward() {\n      onKeyboardNavigate(\"forward\");\n    };\n    var onBackward = function onBackward() {\n      onKeyboardNavigate(\"backward\");\n    };\n    var onKeydown = function onKeydown(e) {\n      var code = e.code;\n      var tab = EVENT_CODE.tab,\n        esc = EVENT_CODE.esc,\n        down = EVENT_CODE.down,\n        up = EVENT_CODE.up,\n        enter = EVENT_CODE.enter,\n        numpadEnter = EVENT_CODE.numpadEnter;\n      if (code !== tab) {\n        e.preventDefault();\n        e.stopPropagation();\n      }\n      switch (code) {\n        case tab:\n        case esc:\n          break;\n        case down:\n          onForward();\n          break;\n        case up:\n          onBackward();\n          break;\n        case enter:\n        case numpadEnter:\n          onKeyboardSelect();\n          break;\n      }\n    };\n    return function () {\n      var _a, _b, _c, _d;\n      var data = props2.data,\n        width = props2.width;\n      var _select$props2 = select.props,\n        height = _select$props2.height,\n        multiple = _select$props2.multiple,\n        scrollbarAlwaysOn = _select$props2.scrollbarAlwaysOn;\n      var List = unref(isSized) ? FixedSizeList : DynamicSizeList;\n      return createVNode(\"div\", {\n        \"class\": [ns.b(\"dropdown\"), ns.is(\"multiple\", multiple)],\n        \"style\": {\n          width: \"\".concat(width, \"px\")\n        }\n      }, [(_a = slots.header) == null ? void 0 : _a.call(slots), ((_b = slots.loading) == null ? void 0 : _b.call(slots)) || ((_c = slots.empty) == null ? void 0 : _c.call(slots)) || createVNode(List, mergeProps({\n        \"ref\": listRef\n      }, unref(listProps), {\n        \"className\": ns.be(\"dropdown\", \"list\"),\n        \"scrollbarAlwaysOn\": scrollbarAlwaysOn,\n        \"data\": data,\n        \"height\": height,\n        \"width\": width,\n        \"total\": data.length,\n        \"onKeydown\": onKeydown\n      }), {\n        \"default\": function _default(props3) {\n          return createVNode(Item, props3, null);\n        }\n      }), (_d = slots.footer) == null ? void 0 : _d.call(slots)]);\n    };\n  }\n});\nexport { ElSelectMenu as default };","map":{"version":3,"names":["props","loading","Boolean","data","type","Array","required","hoveringIndex","Number","width","ElSelectMenu","defineComponent","name","slots","_ref","expose","select","inject","selectV2InjectionKey","ns","useNamespace","_useProps","useProps","getLabel","getValue","getDisabled","cachedHeights","ref","listRef","size","computed","props2","length","watch","value","_a","_b","tooltipRef","updatePopper","call","isSized","isUndefined","estimatedOptionHeight","listProps","itemSize","itemHeight","estimatedSize","idx","contains","arr","arguments","undefined","target","valueKey","isObject","includes","some","item","toRaw","get","isEqual","selected","isItemSelected","modelValue","multiple","isItemDisabled","_select$props","disabled","multipleLimit","isItemHovering","scrollToItem","index","list","resetScrollTop","exposed","Item","itemProps","style","sized","unref","_unref","onSelect","onHover","createVNode","GroupItem","isSelected","isDisabled","isHovering","OptionItem","mergeProps","created","default","props3","onKeyboardNavigate","onKeyboardSelect","onForward","onBackward","onKeydown","e","tab","EVENT_CODE","esc","down","enter","numpadEnter","preventDefault","stopPropagation","up","_c","_d","_select$props2","height","b","is","header","empty","List","be","scrollbarAlwaysOn","footer"],"sources":["../../../../../../packages/components/select-v2/src/select-dropdown.tsx"],"sourcesContent":["import {\n  computed,\n  defineComponent,\n  inject,\n  ref,\n  toRaw,\n  unref,\n  watch,\n} from 'vue'\nimport { get } from 'lodash-unified'\nimport { isObject, isUndefined } from '@element-plus/utils'\nimport {\n  DynamicSizeList,\n  FixedSizeList,\n} from '@element-plus/components/virtual-list'\nimport { useNamespace } from '@element-plus/hooks'\nimport { EVENT_CODE } from '@element-plus/constants'\nimport GroupItem from './group-item.vue'\nimport OptionItem from './option-item.vue'\nimport { useProps } from './useProps'\n\nimport { selectV2InjectionKey } from './token'\n\nimport type {\n  DynamicSizeListInstance,\n  FixedSizeListInstance,\n  ItemProps,\n} from '@element-plus/components/virtual-list'\nimport type { Option, OptionItemProps } from './select.types'\nimport type {\n  ComponentPublicInstance,\n  ComputedRef,\n  ExtractPropTypes,\n  Ref,\n} from 'vue'\n\nconst props = {\n  loading: Boolean,\n  data: {\n    type: Array,\n    required: true as const,\n  },\n  hoveringIndex: Number,\n  width: Number,\n}\ninterface SelectDropdownExposed {\n  listRef: Ref<FixedSizeListInstance | DynamicSizeListInstance | undefined>\n  isSized: ComputedRef<boolean>\n  isItemDisabled: (modelValue: any[] | any, selected: boolean) => boolean\n  isItemHovering: (target: number) => boolean\n  isItemSelected: (modelValue: any[] | any, target: Option) => boolean\n  scrollToItem: (index: number) => void\n  resetScrollTop: () => void\n}\nexport type SelectDropdownInstance = ComponentPublicInstance<\n  ExtractPropTypes<typeof props>,\n  SelectDropdownExposed\n>\nexport default defineComponent({\n  name: 'ElSelectDropdown',\n  props,\n  setup(props, { slots, expose }) {\n    const select = inject(selectV2InjectionKey)!\n    const ns = useNamespace('select')\n    const { getLabel, getValue, getDisabled } = useProps(select.props)\n\n    const cachedHeights = ref<Array<number>>([])\n\n    const listRef = ref<FixedSizeListInstance | DynamicSizeListInstance>()\n\n    const size = computed(() => props.data.length)\n    watch(\n      () => size.value,\n      () => {\n        select.tooltipRef.value!.updatePopper?.()\n      }\n    )\n\n    const isSized = computed(() =>\n      isUndefined(select.props.estimatedOptionHeight)\n    )\n    const listProps = computed(() => {\n      if (isSized.value) {\n        return {\n          itemSize: select.props.itemHeight,\n        }\n      }\n\n      return {\n        estimatedSize: select.props.estimatedOptionHeight,\n        itemSize: (idx: number) => cachedHeights.value[idx],\n      }\n    })\n\n    const contains = (arr: Array<any> = [], target: any) => {\n      const {\n        props: { valueKey },\n      } = select\n\n      if (!isObject(target)) {\n        return arr.includes(target)\n      }\n\n      return (\n        arr &&\n        arr.some((item) => {\n          return toRaw(get(item, valueKey)) === get(target, valueKey)\n        })\n      )\n    }\n    const isEqual = (selected: unknown, target: unknown) => {\n      if (!isObject(target)) {\n        return selected === target\n      } else {\n        const { valueKey } = select.props\n        return get(selected, valueKey) === get(target, valueKey)\n      }\n    }\n\n    const isItemSelected: SelectDropdownExposed['isItemSelected'] = (\n      modelValue,\n      target\n    ) => {\n      if (select.props.multiple) {\n        return contains(modelValue, getValue(target))\n      }\n      return isEqual(modelValue, getValue(target))\n    }\n\n    const isItemDisabled: SelectDropdownExposed['isItemDisabled'] = (\n      modelValue,\n      selected\n    ) => {\n      const { disabled, multiple, multipleLimit } = select.props\n      return (\n        disabled ||\n        (!selected &&\n          (multiple\n            ? multipleLimit > 0 && modelValue.length >= multipleLimit\n            : false))\n      )\n    }\n\n    const isItemHovering: SelectDropdownExposed['isItemHovering'] = (target) =>\n      props.hoveringIndex === target\n\n    const scrollToItem: SelectDropdownExposed['scrollToItem'] = (index) => {\n      const list = listRef.value\n      if (list) {\n        list.scrollToItem(index)\n      }\n    }\n\n    const resetScrollTop: SelectDropdownExposed['resetScrollTop'] = () => {\n      const list = listRef.value\n      if (list) {\n        list.resetScrollTop()\n      }\n    }\n    const exposed: SelectDropdownExposed = {\n      listRef,\n      isSized,\n\n      isItemDisabled,\n      isItemHovering,\n      isItemSelected,\n      scrollToItem,\n      resetScrollTop,\n    }\n    expose(exposed)\n\n    const Item = (itemProps: ItemProps<any>) => {\n      const { index, data, style } = itemProps\n      const sized = unref(isSized)\n      const { itemSize, estimatedSize } = unref(listProps)\n      const { modelValue } = select.props\n      const { onSelect, onHover } = select\n      const item = data[index]\n      if (item.type === 'Group') {\n        return (\n          <GroupItem\n            item={item}\n            style={style}\n            height={sized ? (itemSize as number) : estimatedSize}\n          />\n        )\n      }\n\n      const isSelected = isItemSelected(modelValue, item)\n      const isDisabled = isItemDisabled(modelValue, isSelected)\n      const isHovering = isItemHovering(index)\n      return (\n        <OptionItem\n          {...itemProps}\n          selected={isSelected}\n          disabled={getDisabled(item) || isDisabled}\n          created={!!item.created}\n          hovering={isHovering}\n          item={item}\n          onSelect={onSelect}\n          onHover={onHover}\n        >\n          {{\n            default: (props: OptionItemProps) =>\n              slots.default?.(props) || <span>{getLabel(item)}</span>,\n          }}\n        </OptionItem>\n      )\n    }\n\n    // computed\n    const { onKeyboardNavigate, onKeyboardSelect } = select\n\n    const onForward = () => {\n      onKeyboardNavigate('forward')\n    }\n\n    const onBackward = () => {\n      onKeyboardNavigate('backward')\n    }\n\n    const onEscOrTab = () => {\n      // The following line actually doesn't work. Fixing it may introduce a small breaking change for some users, so just comment it out for now.\n      // select.expanded = false\n    }\n\n    const onKeydown = (e: KeyboardEvent) => {\n      const { code } = e\n      const { tab, esc, down, up, enter, numpadEnter } = EVENT_CODE\n      if (code !== tab) {\n        e.preventDefault()\n        e.stopPropagation()\n      }\n\n      switch (code) {\n        case tab:\n        case esc:\n          onEscOrTab()\n          break\n        case down:\n          onForward()\n          break\n        case up:\n          onBackward()\n          break\n        case enter:\n        case numpadEnter:\n          onKeyboardSelect()\n          break\n      }\n    }\n\n    return () => {\n      const { data, width } = props\n      const { height, multiple, scrollbarAlwaysOn } = select.props\n\n      const List = unref(isSized) ? FixedSizeList : DynamicSizeList\n\n      return (\n        <div\n          class={[ns.b('dropdown'), ns.is('multiple', multiple)]}\n          style={{\n            width: `${width}px`,\n          }}\n        >\n          {slots.header?.()}\n          {slots.loading?.() || slots.empty?.() || (\n            <List\n              ref={listRef}\n              {...unref(listProps)}\n              className={ns.be('dropdown', 'list')}\n              scrollbarAlwaysOn={scrollbarAlwaysOn}\n              data={data}\n              height={height}\n              width={width}\n              total={data.length}\n              // @ts-ignore - dts problem\n              onKeydown={onKeydown}\n            >\n              {{\n                default: (props: ItemProps<any>) => <Item {...props} />,\n              }}\n            </List>\n          )}\n          {slots.footer?.()}\n        </div>\n      )\n    }\n  },\n})\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}