{"ast":null,"code":"import { defineComponent, watch, renderSlot } from 'vue';\nimport { provideGlobalConfig } from './hooks/use-global-config.mjs';\nimport { configProviderProps } from './config-provider-props.mjs';\nvar messageConfig = {};\nvar ConfigProvider = defineComponent({\n  name: \"ElConfigProvider\",\n  props: configProviderProps,\n  setup: function setup(props, _ref) {\n    var slots = _ref.slots;\n    watch(function () {\n      return props.message;\n    }, function (val) {\n      Object.assign(messageConfig, val != null ? val : {});\n    }, {\n      immediate: true,\n      deep: true\n    });\n    var config = provideGlobalConfig(props);\n    return function () {\n      return renderSlot(slots, \"default\", {\n        config: config == null ? void 0 : config.value\n      });\n    };\n  }\n});\nexport { ConfigProvider as default, messageConfig };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}