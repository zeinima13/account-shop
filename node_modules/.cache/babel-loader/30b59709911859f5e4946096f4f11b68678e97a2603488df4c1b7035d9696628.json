{"ast":null,"code":"import \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.object.values.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport { defineComponent, getCurrentInstance, computed, inject, ref, reactive, watch, provide, onMounted, onBeforeUnmount, h, Fragment, withDirectives, vShow } from 'vue';\nimport { useTimeoutFn } from '@vueuse/core';\nimport { ElCollapseTransition } from '../../collapse-transition/index.mjs';\nimport { ElTooltip } from '../../tooltip/index.mjs';\nimport { ArrowDown, ArrowRight } from '@element-plus/icons-vue';\nimport { ElIcon } from '../../icon/index.mjs';\nimport useMenu from './use-menu.mjs';\nimport { useMenuCssVar } from './use-menu-css-var.mjs';\nimport { buildProps } from '../../../utils/vue/props/runtime.mjs';\nimport { iconPropType } from '../../../utils/vue/icon.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { throwError } from '../../../utils/error.mjs';\nimport { isString } from '@vue/shared';\nvar subMenuProps = buildProps({\n  index: {\n    type: String,\n    required: true\n  },\n  showTimeout: Number,\n  hideTimeout: Number,\n  popperClass: String,\n  disabled: Boolean,\n  teleported: {\n    type: Boolean,\n    \"default\": void 0\n  },\n  popperOffset: Number,\n  expandCloseIcon: {\n    type: iconPropType\n  },\n  expandOpenIcon: {\n    type: iconPropType\n  },\n  collapseCloseIcon: {\n    type: iconPropType\n  },\n  collapseOpenIcon: {\n    type: iconPropType\n  }\n});\nvar COMPONENT_NAME = \"ElSubMenu\";\nvar SubMenu = defineComponent({\n  name: COMPONENT_NAME,\n  props: subMenuProps,\n  setup: function setup(props, _ref) {\n    var slots = _ref.slots,\n      expose = _ref.expose;\n    var instance = getCurrentInstance();\n    var _useMenu = useMenu(instance, computed(function () {\n        return props.index;\n      })),\n      indexPath = _useMenu.indexPath,\n      parentMenu = _useMenu.parentMenu;\n    var nsMenu = useNamespace(\"menu\");\n    var nsSubMenu = useNamespace(\"sub-menu\");\n    var rootMenu = inject(\"rootMenu\");\n    if (!rootMenu) throwError(COMPONENT_NAME, \"can not inject root menu\");\n    var subMenu = inject(\"subMenu:\".concat(parentMenu.value.uid));\n    if (!subMenu) throwError(COMPONENT_NAME, \"can not inject sub menu\");\n    var items = ref({});\n    var subMenus = ref({});\n    var timeout;\n    var mouseInChild = ref(false);\n    var verticalTitleRef = ref();\n    var vPopper = ref(null);\n    var currentPlacement = computed(function () {\n      return mode.value === \"horizontal\" && isFirstLevel.value ? \"bottom-start\" : \"right-start\";\n    });\n    var subMenuTitleIcon = computed(function () {\n      return mode.value === \"horizontal\" && isFirstLevel.value || mode.value === \"vertical\" && !rootMenu.props.collapse ? props.expandCloseIcon && props.expandOpenIcon ? opened.value ? props.expandOpenIcon : props.expandCloseIcon : ArrowDown : props.collapseCloseIcon && props.collapseOpenIcon ? opened.value ? props.collapseOpenIcon : props.collapseCloseIcon : ArrowRight;\n    });\n    var isFirstLevel = computed(function () {\n      return subMenu.level === 0;\n    });\n    var appendToBody = computed(function () {\n      var value = props.teleported;\n      return value === void 0 ? isFirstLevel.value : value;\n    });\n    var menuTransitionName = computed(function () {\n      return rootMenu.props.collapse ? \"\".concat(nsMenu.namespace.value, \"-zoom-in-left\") : \"\".concat(nsMenu.namespace.value, \"-zoom-in-top\");\n    });\n    var fallbackPlacements = computed(function () {\n      return mode.value === \"horizontal\" && isFirstLevel.value ? [\"bottom-start\", \"bottom-end\", \"top-start\", \"top-end\", \"right-start\", \"left-start\"] : [\"right-start\", \"right\", \"right-end\", \"left-start\", \"bottom-start\", \"bottom-end\", \"top-start\", \"top-end\"];\n    });\n    var opened = computed(function () {\n      return rootMenu.openedMenus.includes(props.index);\n    });\n    var active = computed(function () {\n      var isActive = false;\n      Object.values(items.value).forEach(function (item2) {\n        if (item2.active) {\n          isActive = true;\n        }\n      });\n      Object.values(subMenus.value).forEach(function (subItem) {\n        if (subItem.active) {\n          isActive = true;\n        }\n      });\n      return isActive;\n    });\n    var mode = computed(function () {\n      return rootMenu.props.mode;\n    });\n    var item = reactive({\n      index: props.index,\n      indexPath: indexPath,\n      active: active\n    });\n    var ulStyle = useMenuCssVar(rootMenu.props, subMenu.level + 1);\n    var subMenuPopperOffset = computed(function () {\n      var _a;\n      return (_a = props.popperOffset) != null ? _a : rootMenu.props.popperOffset;\n    });\n    var subMenuPopperClass = computed(function () {\n      var _a;\n      return (_a = props.popperClass) != null ? _a : rootMenu.props.popperClass;\n    });\n    var subMenuShowTimeout = computed(function () {\n      var _a;\n      return (_a = props.showTimeout) != null ? _a : rootMenu.props.showTimeout;\n    });\n    var subMenuHideTimeout = computed(function () {\n      var _a;\n      return (_a = props.hideTimeout) != null ? _a : rootMenu.props.hideTimeout;\n    });\n    var doDestroy = function doDestroy() {\n      var _a, _b, _c;\n      return (_c = (_b = (_a = vPopper.value) == null ? void 0 : _a.popperRef) == null ? void 0 : _b.popperInstanceRef) == null ? void 0 : _c.destroy();\n    };\n    var handleCollapseToggle = function handleCollapseToggle(value) {\n      if (!value) {\n        doDestroy();\n      }\n    };\n    var handleClick = function handleClick() {\n      if (rootMenu.props.menuTrigger === \"hover\" && rootMenu.props.mode === \"horizontal\" || rootMenu.props.collapse && rootMenu.props.mode === \"vertical\" || props.disabled) return;\n      rootMenu.handleSubMenuClick({\n        index: props.index,\n        indexPath: indexPath.value,\n        active: active.value\n      });\n    };\n    var handleMouseenter = function handleMouseenter(event) {\n      var showTimeout = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : subMenuShowTimeout.value;\n      var _a;\n      if (event.type === \"focus\") {\n        return;\n      }\n      if (rootMenu.props.menuTrigger === \"click\" && rootMenu.props.mode === \"horizontal\" || !rootMenu.props.collapse && rootMenu.props.mode === \"vertical\" || props.disabled) {\n        subMenu.mouseInChild.value = true;\n        return;\n      }\n      subMenu.mouseInChild.value = true;\n      timeout == null ? void 0 : timeout();\n      var _useTimeoutFn = useTimeoutFn(function () {\n        rootMenu.openMenu(props.index, indexPath.value);\n      }, showTimeout);\n      timeout = _useTimeoutFn.stop;\n      if (appendToBody.value) {\n        (_a = parentMenu.value.vnode.el) == null ? void 0 : _a.dispatchEvent(new MouseEvent(\"mouseenter\"));\n      }\n    };\n    var handleMouseleave = function handleMouseleave() {\n      var deepDispatch = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var _a;\n      if (rootMenu.props.menuTrigger === \"click\" && rootMenu.props.mode === \"horizontal\" || !rootMenu.props.collapse && rootMenu.props.mode === \"vertical\") {\n        subMenu.mouseInChild.value = false;\n        return;\n      }\n      timeout == null ? void 0 : timeout();\n      subMenu.mouseInChild.value = false;\n      var _useTimeoutFn2 = useTimeoutFn(function () {\n        return !mouseInChild.value && rootMenu.closeMenu(props.index, indexPath.value);\n      }, subMenuHideTimeout.value);\n      timeout = _useTimeoutFn2.stop;\n      if (appendToBody.value && deepDispatch) {\n        (_a = subMenu.handleMouseleave) == null ? void 0 : _a.call(subMenu, true);\n      }\n    };\n    watch(function () {\n      return rootMenu.props.collapse;\n    }, function (value) {\n      return handleCollapseToggle(Boolean(value));\n    });\n    {\n      var addSubMenu = function addSubMenu(item2) {\n        subMenus.value[item2.index] = item2;\n      };\n      var removeSubMenu = function removeSubMenu(item2) {\n        delete subMenus.value[item2.index];\n      };\n      provide(\"subMenu:\".concat(instance.uid), {\n        addSubMenu: addSubMenu,\n        removeSubMenu: removeSubMenu,\n        handleMouseleave: handleMouseleave,\n        mouseInChild: mouseInChild,\n        level: subMenu.level + 1\n      });\n    }\n    expose({\n      opened: opened\n    });\n    onMounted(function () {\n      rootMenu.addSubMenu(item);\n      subMenu.addSubMenu(item);\n    });\n    onBeforeUnmount(function () {\n      subMenu.removeSubMenu(item);\n      rootMenu.removeSubMenu(item);\n    });\n    return function () {\n      var _a;\n      var titleTag = [(_a = slots.title) == null ? void 0 : _a.call(slots), h(ElIcon, {\n        \"class\": nsSubMenu.e(\"icon-arrow\"),\n        style: {\n          transform: opened.value ? props.expandCloseIcon && props.expandOpenIcon || props.collapseCloseIcon && props.collapseOpenIcon && rootMenu.props.collapse ? \"none\" : \"rotateZ(180deg)\" : \"none\"\n        }\n      }, {\n        \"default\": function _default() {\n          return isString(subMenuTitleIcon.value) ? h(instance.appContext.components[subMenuTitleIcon.value]) : h(subMenuTitleIcon.value);\n        }\n      })];\n      var child = rootMenu.isMenuPopup ? h(ElTooltip, {\n        ref: vPopper,\n        visible: opened.value,\n        effect: \"light\",\n        pure: true,\n        offset: subMenuPopperOffset.value,\n        showArrow: false,\n        persistent: true,\n        popperClass: subMenuPopperClass.value,\n        placement: currentPlacement.value,\n        teleported: appendToBody.value,\n        fallbackPlacements: fallbackPlacements.value,\n        transition: menuTransitionName.value,\n        gpuAcceleration: false\n      }, {\n        content: function content() {\n          var _a2;\n          return h(\"div\", {\n            \"class\": [nsMenu.m(mode.value), nsMenu.m(\"popup-container\"), subMenuPopperClass.value],\n            onMouseenter: function onMouseenter(evt) {\n              return handleMouseenter(evt, 100);\n            },\n            onMouseleave: function onMouseleave() {\n              return handleMouseleave(true);\n            },\n            onFocus: function onFocus(evt) {\n              return handleMouseenter(evt, 100);\n            }\n          }, [h(\"ul\", {\n            \"class\": [nsMenu.b(), nsMenu.m(\"popup\"), nsMenu.m(\"popup-\".concat(currentPlacement.value))],\n            style: ulStyle.value\n          }, [(_a2 = slots[\"default\"]) == null ? void 0 : _a2.call(slots)])]);\n        },\n        \"default\": function _default() {\n          return h(\"div\", {\n            \"class\": nsSubMenu.e(\"title\"),\n            onClick: handleClick\n          }, titleTag);\n        }\n      }) : h(Fragment, {}, [h(\"div\", {\n        \"class\": nsSubMenu.e(\"title\"),\n        ref: verticalTitleRef,\n        onClick: handleClick\n      }, titleTag), h(ElCollapseTransition, {}, {\n        \"default\": function _default() {\n          var _a2;\n          return withDirectives(h(\"ul\", {\n            role: \"menu\",\n            \"class\": [nsMenu.b(), nsMenu.m(\"inline\")],\n            style: ulStyle.value\n          }, [(_a2 = slots[\"default\"]) == null ? void 0 : _a2.call(slots)]), [[vShow, opened.value]]);\n        }\n      })]);\n      return h(\"li\", {\n        \"class\": [nsSubMenu.b(), nsSubMenu.is(\"active\", active.value), nsSubMenu.is(\"opened\", opened.value), nsSubMenu.is(\"disabled\", props.disabled)],\n        role: \"menuitem\",\n        ariaHaspopup: true,\n        ariaExpanded: opened.value,\n        onMouseenter: handleMouseenter,\n        onMouseleave: function onMouseleave() {\n          return handleMouseleave();\n        },\n        onFocus: handleMouseenter\n      }, [child]);\n    };\n  }\n});\nexport { SubMenu as default, subMenuProps };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}