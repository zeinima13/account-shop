{"ast":null,"code":"import _defineProperty from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.every.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.every.js\";\nimport { filterOption } from './helper.mjs';\nimport { inputProps } from '../../input/src/input.mjs';\nimport { buildProps, definePropType } from '../../../utils/vue/props/runtime.mjs';\nimport { isString, isFunction } from '@vue/shared';\nimport { UPDATE_MODEL_EVENT } from '../../../constants/event.mjs';\nvar mentionProps = buildProps(_objectSpread(_objectSpread({}, inputProps), {}, {\n  options: {\n    type: definePropType(Array),\n    \"default\": function _default() {\n      return [];\n    }\n  },\n  prefix: {\n    type: definePropType([String, Array]),\n    \"default\": \"@\",\n    validator: function validator(val) {\n      if (isString(val)) return val.length === 1;\n      return val.every(function (v) {\n        return isString(v) && v.length === 1;\n      });\n    }\n  },\n  split: {\n    type: String,\n    \"default\": \" \",\n    validator: function validator(val) {\n      return val.length === 1;\n    }\n  },\n  filterOption: {\n    type: definePropType([Boolean, Function]),\n    \"default\": function _default() {\n      return filterOption;\n    },\n    validator: function validator(val) {\n      if (val === false) return true;\n      return isFunction(val);\n    }\n  },\n  placement: {\n    type: definePropType(String),\n    \"default\": \"bottom\"\n  },\n  showArrow: Boolean,\n  offset: {\n    type: Number,\n    \"default\": 0\n  },\n  whole: Boolean,\n  checkIsWhole: {\n    type: definePropType(Function)\n  },\n  modelValue: String,\n  loading: Boolean,\n  popperClass: {\n    type: String,\n    \"default\": \"\"\n  },\n  popperOptions: {\n    type: definePropType(Object),\n    \"default\": function _default() {\n      return {};\n    }\n  }\n}));\nvar mentionEmits = _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty({}, UPDATE_MODEL_EVENT, function (value) {\n  return isString(value);\n}), \"search\", function search(pattern, prefix) {\n  return isString(pattern) && isString(prefix);\n}), \"select\", function select(option, prefix) {\n  return isString(option.value) && isString(prefix);\n}), \"focus\", function focus(evt) {\n  return evt instanceof FocusEvent;\n}), \"blur\", function blur(evt) {\n  return evt instanceof FocusEvent;\n});\nexport { mentionEmits, mentionProps };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}