{"ast":null,"code":"import _slicedToArray from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _objectSpread from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { defineComponent, ref, provide, createVNode, mergeProps } from 'vue';\nimport dayjs from 'dayjs';\nimport customParseFormat from 'dayjs/plugin/customParseFormat.js';\nimport { DEFAULT_FORMATS_TIME } from './constants.mjs';\nimport CommonPicker from './common/picker.mjs';\nimport TimePickPanel from './time-picker-com/panel-time-pick.mjs';\nimport TimeRangePanel from './time-picker-com/panel-time-range.mjs';\nimport { timePickerDefaultProps } from './common/props.mjs';\ndayjs.extend(customParseFormat);\nvar TimePicker = defineComponent({\n  name: \"ElTimePicker\",\n  install: null,\n  props: _objectSpread(_objectSpread({}, timePickerDefaultProps), {}, {\n    isRange: {\n      type: Boolean,\n      \"default\": false\n    }\n  }),\n  emits: [\"update:modelValue\"],\n  setup: function setup(props, ctx) {\n    var commonPicker = ref();\n    var _ref = props.isRange ? [\"timerange\", TimeRangePanel] : [\"time\", TimePickPanel],\n      _ref2 = _slicedToArray(_ref, 2),\n      type = _ref2[0],\n      Panel = _ref2[1];\n    var modelUpdater = function modelUpdater(value) {\n      return ctx.emit(\"update:modelValue\", value);\n    };\n    provide(\"ElPopperOptions\", props.popperOptions);\n    ctx.expose({\n      focus: function focus() {\n        var _a;\n        (_a = commonPicker.value) == null ? void 0 : _a.focus();\n      },\n      blur: function blur() {\n        var _a;\n        (_a = commonPicker.value) == null ? void 0 : _a.blur();\n      },\n      handleOpen: function handleOpen() {\n        var _a;\n        (_a = commonPicker.value) == null ? void 0 : _a.handleOpen();\n      },\n      handleClose: function handleClose() {\n        var _a;\n        (_a = commonPicker.value) == null ? void 0 : _a.handleClose();\n      }\n    });\n    return function () {\n      var _a;\n      var format = (_a = props.format) != null ? _a : DEFAULT_FORMATS_TIME;\n      return createVNode(CommonPicker, mergeProps(props, {\n        \"ref\": commonPicker,\n        \"type\": type,\n        \"format\": format,\n        \"onUpdate:modelValue\": modelUpdater\n      }), {\n        \"default\": function _default(props2) {\n          return createVNode(Panel, props2, null);\n        }\n      });\n    };\n  }\n});\nexport { TimePicker as default };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}