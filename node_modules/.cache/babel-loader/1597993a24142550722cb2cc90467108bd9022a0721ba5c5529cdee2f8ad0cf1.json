{"ast":null,"code":"import \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.reduce.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.reduce.js\";\nimport { computed } from 'vue';\nimport { usePropsAlias } from './use-props-alias.mjs';\nvar useComputedData = function useComputedData(props) {\n  var propsAlias = usePropsAlias(props);\n  var dataObj = computed(function () {\n    return props.data.reduce(function (o, cur) {\n      return (o[cur[propsAlias.value.key]] = cur) && o;\n    }, {});\n  });\n  var sourceData = computed(function () {\n    return props.data.filter(function (item) {\n      return !props.modelValue.includes(item[propsAlias.value.key]);\n    });\n  });\n  var targetData = computed(function () {\n    if (props.targetOrder === \"original\") {\n      return props.data.filter(function (item) {\n        return props.modelValue.includes(item[propsAlias.value.key]);\n      });\n    } else {\n      return props.modelValue.reduce(function (arr, cur) {\n        var val = dataObj.value[cur];\n        if (val) {\n          arr.push(val);\n        }\n        return arr;\n      }, []);\n    }\n  });\n  return {\n    sourceData: sourceData,\n    targetData: targetData\n  };\n};\nexport { useComputedData };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}