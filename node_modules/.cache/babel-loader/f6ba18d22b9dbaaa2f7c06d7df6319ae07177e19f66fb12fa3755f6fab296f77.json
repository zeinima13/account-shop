{"ast":null,"code":"import \"core-js/modules/web.timers.js\";\nimport { isRef, computed, watch, onScopeDispose } from 'vue';\nimport { useNamespace } from '../use-namespace/index.mjs';\nimport { throwError } from '../../utils/error.mjs';\nimport { isClient } from '@vueuse/core';\nimport { hasClass, addClass, getStyle, removeClass } from '../../utils/dom/style.mjs';\nimport { getScrollBarWidth } from '../../utils/dom/scroll.mjs';\nvar useLockscreen = function useLockscreen(trigger) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  if (!isRef(trigger)) {\n    throwError(\"[useLockscreen]\", \"You need to pass a ref param to this function\");\n  }\n  var ns = options.ns || useNamespace(\"popup\");\n  var hiddenCls = computed(function () {\n    return ns.bm(\"parent\", \"hidden\");\n  });\n  if (!isClient || hasClass(document.body, hiddenCls.value)) {\n    return;\n  }\n  var scrollBarWidth = 0;\n  var withoutHiddenClass = false;\n  var bodyWidth = \"0\";\n  var cleanup = function cleanup() {\n    setTimeout(function () {\n      if (typeof document === \"undefined\") return;\n      if (withoutHiddenClass && document) {\n        document.body.style.width = bodyWidth;\n        removeClass(document.body, hiddenCls.value);\n      }\n    }, 200);\n  };\n  watch(trigger, function (val) {\n    if (!val) {\n      cleanup();\n      return;\n    }\n    withoutHiddenClass = !hasClass(document.body, hiddenCls.value);\n    if (withoutHiddenClass) {\n      bodyWidth = document.body.style.width;\n      addClass(document.body, hiddenCls.value);\n    }\n    scrollBarWidth = getScrollBarWidth(ns.namespace.value);\n    var bodyHasOverflow = document.documentElement.clientHeight < document.body.scrollHeight;\n    var bodyOverflowY = getStyle(document.body, \"overflowY\");\n    if (scrollBarWidth > 0 && (bodyHasOverflow || bodyOverflowY === \"scroll\") && withoutHiddenClass) {\n      document.body.style.width = \"calc(100% - \".concat(scrollBarWidth, \"px)\");\n    }\n  });\n  onScopeDispose(function () {\n    return cleanup();\n  });\n};\nexport { useLockscreen };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}