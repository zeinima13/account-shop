{"ast":null,"code":"import _defineProperty from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { defineComponent, computed, openBlock, createElementBlock, normalizeClass, unref, createElementVNode, normalizeStyle, createBlock, withCtx, resolveDynamicComponent, createCommentVNode, renderSlot, toDisplayString } from 'vue';\nimport { ElIcon } from '../../icon/index.mjs';\nimport { timelineItemProps } from './timeline-item.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nvar __default__ = defineComponent({\n  name: \"ElTimelineItem\"\n});\nvar _sfc_main = /* @__PURE__ */defineComponent(_objectSpread(_objectSpread({}, __default__), {}, {\n  props: timelineItemProps,\n  setup: function setup(__props) {\n    var props = __props;\n    var ns = useNamespace(\"timeline-item\");\n    var defaultNodeKls = computed(function () {\n      return [ns.e(\"node\"), ns.em(\"node\", props.size || \"\"), ns.em(\"node\", props.type || \"\"), ns.is(\"hollow\", props.hollow)];\n    });\n    return function (_ctx, _cache) {\n      return openBlock(), createElementBlock(\"li\", {\n        \"class\": normalizeClass([unref(ns).b(), _defineProperty({}, unref(ns).e(\"center\"), _ctx.center)])\n      }, [createElementVNode(\"div\", {\n        \"class\": normalizeClass(unref(ns).e(\"tail\"))\n      }, null, 2), !_ctx.$slots.dot ? (openBlock(), createElementBlock(\"div\", {\n        key: 0,\n        \"class\": normalizeClass(unref(defaultNodeKls)),\n        style: normalizeStyle({\n          backgroundColor: _ctx.color\n        })\n      }, [_ctx.icon ? (openBlock(), createBlock(unref(ElIcon), {\n        key: 0,\n        \"class\": normalizeClass(unref(ns).e(\"icon\"))\n      }, {\n        \"default\": withCtx(function () {\n          return [(openBlock(), createBlock(resolveDynamicComponent(_ctx.icon)))];\n        }),\n        _: 1\n      }, 8, [\"class\"])) : createCommentVNode(\"v-if\", true)], 6)) : createCommentVNode(\"v-if\", true), _ctx.$slots.dot ? (openBlock(), createElementBlock(\"div\", {\n        key: 1,\n        \"class\": normalizeClass(unref(ns).e(\"dot\"))\n      }, [renderSlot(_ctx.$slots, \"dot\")], 2)) : createCommentVNode(\"v-if\", true), createElementVNode(\"div\", {\n        \"class\": normalizeClass(unref(ns).e(\"wrapper\"))\n      }, [!_ctx.hideTimestamp && _ctx.placement === \"top\" ? (openBlock(), createElementBlock(\"div\", {\n        key: 0,\n        \"class\": normalizeClass([unref(ns).e(\"timestamp\"), unref(ns).is(\"top\")])\n      }, toDisplayString(_ctx.timestamp), 3)) : createCommentVNode(\"v-if\", true), createElementVNode(\"div\", {\n        \"class\": normalizeClass(unref(ns).e(\"content\"))\n      }, [renderSlot(_ctx.$slots, \"default\")], 2), !_ctx.hideTimestamp && _ctx.placement === \"bottom\" ? (openBlock(), createElementBlock(\"div\", {\n        key: 1,\n        \"class\": normalizeClass([unref(ns).e(\"timestamp\"), unref(ns).is(\"bottom\")])\n      }, toDisplayString(_ctx.timestamp), 3)) : createCommentVNode(\"v-if\", true)], 2)], 2);\n    };\n  }\n}));\nvar TimelineItem = /* @__PURE__ */_export_sfc(_sfc_main, [[\"__file\", \"timeline-item.vue\"]]);\nexport { TimelineItem as default };","map":{"version":3,"names":["name","ns","useNamespace","defaultNodeKls","computed","e","em","props","size","type","is","hollow"],"sources":["../../../../../../packages/components/timeline/src/timeline-item.vue"],"sourcesContent":["<template>\n  <li :class=\"[ns.b(), { [ns.e('center')]: center }]\">\n    <div :class=\"ns.e('tail')\" />\n    <div\n      v-if=\"!$slots.dot\"\n      :class=\"defaultNodeKls\"\n      :style=\"{\n        backgroundColor: color,\n      }\"\n    >\n      <el-icon v-if=\"icon\" :class=\"ns.e('icon')\">\n        <component :is=\"icon\" />\n      </el-icon>\n    </div>\n    <div v-if=\"$slots.dot\" :class=\"ns.e('dot')\">\n      <slot name=\"dot\" />\n    </div>\n\n    <div :class=\"ns.e('wrapper')\">\n      <div\n        v-if=\"!hideTimestamp && placement === 'top'\"\n        :class=\"[ns.e('timestamp'), ns.is('top')]\"\n      >\n        {{ timestamp }}\n      </div>\n\n      <div :class=\"ns.e('content')\">\n        <slot />\n      </div>\n\n      <div\n        v-if=\"!hideTimestamp && placement === 'bottom'\"\n        :class=\"[ns.e('timestamp'), ns.is('bottom')]\"\n      >\n        {{ timestamp }}\n      </div>\n    </div>\n  </li>\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed } from 'vue'\nimport { ElIcon } from '@element-plus/components/icon'\nimport { useNamespace } from '@element-plus/hooks'\nimport { timelineItemProps } from './timeline-item'\n\ndefineOptions({\n  name: 'ElTimelineItem',\n})\n\nconst props = defineProps(timelineItemProps)\n\nconst ns = useNamespace('timeline-item')\nconst defaultNodeKls = computed(() => [\n  ns.e('node'),\n  ns.em('node', props.size || ''),\n  ns.em('node', props.type || ''),\n  ns.is('hollow', props.hollow),\n])\n</script>\n"],"mappings":";;;;;;;iCA8Cc;EACZA,IAAM;AACR;;;;;IAIM,IAAAC,EAAA,GAAKC,YAAA,CAAa,eAAe;IACjC,IAAAC,cAAA,GAAiBC,QAAA,CAAS;MAAA,OAAM,CACpCH,EAAA,CAAGI,CAAA,CAAE,MAAM,GACXJ,EAAG,CAAAK,EAAA,CAAG,MAAQ,EAAAC,KAAA,CAAMC,IAAA,IAAQ,EAAE,GAC9BP,EAAG,CAAAK,EAAA,CAAG,MAAQ,EAAAC,KAAA,CAAME,IAAA,IAAQ,EAAE,GAC9BR,EAAG,CAAAS,EAAA,CAAG,QAAU,EAAAH,KAAA,CAAMI,MAAM,EAC7B;IAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}