{"ast":null,"code":"import _objectSpread from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport { defineComponent, inject, ref, toRef, openBlock, createBlock, unref, normalizeClass, withCtx, renderSlot } from 'vue';\nimport '../../popper/index.mjs';\nimport { TOOLTIP_INJECTION_KEY } from './constants.mjs';\nimport { useTooltipTriggerProps } from './trigger.mjs';\nimport { whenTrigger } from './utils.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport ElPopperTrigger from '../../popper/src/trigger2.mjs';\nimport { composeEventHandlers } from '../../../utils/dom/event.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nvar __default__ = defineComponent({\n  name: \"ElTooltipTrigger\"\n});\nvar _sfc_main = /* @__PURE__ */defineComponent(_objectSpread(_objectSpread({}, __default__), {}, {\n  props: useTooltipTriggerProps,\n  setup: function setup(__props, _ref) {\n    var expose = _ref.expose;\n    var props = __props;\n    var ns = useNamespace(\"tooltip\");\n    var _inject = inject(TOOLTIP_INJECTION_KEY, void 0),\n      controlled = _inject.controlled,\n      id = _inject.id,\n      open = _inject.open,\n      onOpen = _inject.onOpen,\n      onClose = _inject.onClose,\n      onToggle = _inject.onToggle;\n    var triggerRef = ref(null);\n    var stopWhenControlledOrDisabled = function stopWhenControlledOrDisabled() {\n      if (unref(controlled) || props.disabled) {\n        return true;\n      }\n    };\n    var trigger = toRef(props, \"trigger\");\n    var onMouseenter = composeEventHandlers(stopWhenControlledOrDisabled, whenTrigger(trigger, \"hover\", onOpen));\n    var onMouseleave = composeEventHandlers(stopWhenControlledOrDisabled, whenTrigger(trigger, \"hover\", onClose));\n    var onClick = composeEventHandlers(stopWhenControlledOrDisabled, whenTrigger(trigger, \"click\", function (e) {\n      if (e.button === 0) {\n        onToggle(e);\n      }\n    }));\n    var onFocus = composeEventHandlers(stopWhenControlledOrDisabled, whenTrigger(trigger, \"focus\", onOpen));\n    var onBlur = composeEventHandlers(stopWhenControlledOrDisabled, whenTrigger(trigger, \"focus\", onClose));\n    var onContextMenu = composeEventHandlers(stopWhenControlledOrDisabled, whenTrigger(trigger, \"contextmenu\", function (e) {\n      e.preventDefault();\n      onToggle(e);\n    }));\n    var onKeydown = composeEventHandlers(stopWhenControlledOrDisabled, function (e) {\n      var code = e.code;\n      if (props.triggerKeys.includes(code)) {\n        e.preventDefault();\n        onToggle(e);\n      }\n    });\n    expose({\n      triggerRef: triggerRef\n    });\n    return function (_ctx, _cache) {\n      return openBlock(), createBlock(unref(ElPopperTrigger), {\n        id: unref(id),\n        \"virtual-ref\": _ctx.virtualRef,\n        open: unref(open),\n        \"virtual-triggering\": _ctx.virtualTriggering,\n        \"class\": normalizeClass(unref(ns).e(\"trigger\")),\n        onBlur: unref(onBlur),\n        onClick: unref(onClick),\n        onContextmenu: unref(onContextMenu),\n        onFocus: unref(onFocus),\n        onMouseenter: unref(onMouseenter),\n        onMouseleave: unref(onMouseleave),\n        onKeydown: unref(onKeydown)\n      }, {\n        \"default\": withCtx(function () {\n          return [renderSlot(_ctx.$slots, \"default\")];\n        }),\n        _: 3\n      }, 8, [\"id\", \"virtual-ref\", \"open\", \"virtual-triggering\", \"class\", \"onBlur\", \"onClick\", \"onContextmenu\", \"onFocus\", \"onMouseenter\", \"onMouseleave\", \"onKeydown\"]);\n    };\n  }\n}));\nvar ElTooltipTrigger = /* @__PURE__ */_export_sfc(_sfc_main, [[\"__file\", \"trigger.vue\"]]);\nexport { ElTooltipTrigger as default };","map":{"version":3,"names":["name","ns","useNamespace","_inject","inject","TOOLTIP_INJECTION_KEY","controlled","id","open","onOpen","onClose","onToggle","triggerRef","ref","stopWhenControlledOrDisabled","unref","props","disabled","trigger","toRef","onMouseenter","composeEventHandlers","whenTrigger","onMouseleave","onClick","e","button","onFocus","onBlur","onContextMenu","preventDefault","onKeydown","code","triggerKeys","includes","expose","_ctx","_cache","openBlock","createBlock","ElPopperTrigger","virtualRef","virtualTriggering","normalizeClass","onContextmenu","withCtx","renderSlot","$slots","_","ElTooltipTrigger","_export_sfc","_sfc_main"],"sources":["../../../../../../packages/components/tooltip/src/trigger.vue"],"sourcesContent":["<template>\n  <el-popper-trigger\n    :id=\"id\"\n    :virtual-ref=\"virtualRef\"\n    :open=\"open\"\n    :virtual-triggering=\"virtualTriggering\"\n    :class=\"ns.e('trigger')\"\n    @blur=\"onBlur\"\n    @click=\"onClick\"\n    @contextmenu=\"onContextMenu\"\n    @focus=\"onFocus\"\n    @mouseenter=\"onMouseenter\"\n    @mouseleave=\"onMouseleave\"\n    @keydown=\"onKeydown\"\n  >\n    <slot />\n  </el-popper-trigger>\n</template>\n<script lang=\"ts\" setup>\nimport { inject, ref, toRef, unref } from 'vue'\nimport { ElPopperTrigger } from '@element-plus/components/popper'\nimport { composeEventHandlers } from '@element-plus/utils'\nimport { useNamespace } from '@element-plus/hooks'\nimport { TOOLTIP_INJECTION_KEY } from './constants'\nimport { useTooltipTriggerProps } from './trigger'\nimport { whenTrigger } from './utils'\nimport type { OnlyChildExpose } from '@element-plus/components/slot'\n\ndefineOptions({\n  name: 'ElTooltipTrigger',\n})\n\nconst props = defineProps(useTooltipTriggerProps)\n\nconst ns = useNamespace('tooltip')\nconst { controlled, id, open, onOpen, onClose, onToggle } = inject(\n  TOOLTIP_INJECTION_KEY,\n  undefined\n)!\n\nconst triggerRef = ref<OnlyChildExpose | null>(null)\n\nconst stopWhenControlledOrDisabled = () => {\n  if (unref(controlled) || props.disabled) {\n    return true\n  }\n}\nconst trigger = toRef(props, 'trigger')\nconst onMouseenter = composeEventHandlers(\n  stopWhenControlledOrDisabled,\n  whenTrigger(trigger, 'hover', onOpen)\n)\nconst onMouseleave = composeEventHandlers(\n  stopWhenControlledOrDisabled,\n  whenTrigger(trigger, 'hover', onClose)\n)\nconst onClick = composeEventHandlers(\n  stopWhenControlledOrDisabled,\n  whenTrigger(trigger, 'click', (e) => {\n    // distinguish left click\n    if ((e as MouseEvent).button === 0) {\n      onToggle(e)\n    }\n  })\n)\n\nconst onFocus = composeEventHandlers(\n  stopWhenControlledOrDisabled,\n  whenTrigger(trigger, 'focus', onOpen)\n)\n\nconst onBlur = composeEventHandlers(\n  stopWhenControlledOrDisabled,\n  whenTrigger(trigger, 'focus', onClose)\n)\n\nconst onContextMenu = composeEventHandlers(\n  stopWhenControlledOrDisabled,\n  whenTrigger(trigger, 'contextmenu', (e: Event) => {\n    e.preventDefault()\n    onToggle(e)\n  })\n)\n\nconst onKeydown = composeEventHandlers(\n  stopWhenControlledOrDisabled,\n  (e: KeyboardEvent) => {\n    const { code } = e\n    if (props.triggerKeys.includes(code)) {\n      e.preventDefault()\n      onToggle(e)\n    }\n  }\n)\n\ndefineExpose({\n  /**\n   * @description trigger element\n   */\n  triggerRef,\n})\n</script>\n"],"mappings":";;;;;;;;;;;;iCA4Bc;EACZA,IAAM;AACR;;;;;;IAIM,IAAAC,EAAA,GAAKC,YAAA,CAAa,SAAS;IACjC,IAAAC,OAAA,GAA4DC,MAAA,CAAAC,qBAAA;MAApDC,UAAY,GAAAH,OAAA,CAAZG,UAAY;MAAAC,EAAA,GAAAJ,OAAA,CAAAI,EAAA;MAAIC,IAAA,GAAAL,OAAA,CAAAK,IAAA;MAAMC,MAAQ,GAAAN,OAAA,CAARM,MAAQ;MAAAC,OAAA,GAAAP,OAAA,CAAAO,OAAA;MAASC,QAAA,GAAAR,OAAA,CAAAQ,QAAA;IAC7C,IAAAC,UAAA,GAAAC,GAAA;IACA,IAAAC,4BAAA,YAAAA,6BAAA;MACF,IAAAC,KAAA,CAAAT,UAAA,KAAAU,KAAA,CAAAC,QAAA;QAEM;MAEN;IACE;IACS,IAAAC,OAAA,GAAAC,KAAA,CAAAH,KAAA;IACT,IAAAI,YAAA,GAAAC,oBAAA,CAAAP,4BAAA,EAAAQ,WAAA,CAAAJ,OAAA,WAAAT,MAAA;IACF,IAAAc,YAAA,GAAAF,oBAAA,CAAAP,4BAAA,EAAAQ,WAAA,CAAAJ,OAAA,WAAAR,OAAA;IACM,IAAAc,OAAA,GAAUH,oBAAsB,CAAAP,4BAAA,EAAAQ,WAAA,CAAAJ,OAAA,qBAAAO,CAAA;MACtC,IAAMA,CAAe,CAAAC,MAAA;QACnBf,QAAA,CAAAc,CAAA;MAAA;IACoC,CACtC;IACA,IAAME,OAAe,GAAAN,oBAAA,CAAAP,4BAAA,EAAAQ,WAAA,CAAAJ,OAAA,WAAAT,MAAA;IACnB,IAAAmB,MAAA,GAAAP,oBAAA,CAAAP,4BAAA,EAAAQ,WAAA,CAAAJ,OAAA,WAAAR,OAAA;IACA,IAAAmB,aAAqB,GAAAR,oBAAgB,CAAAP,4BAAA,EAAAQ,WAAA,CAAAJ,OAAA,2BAAAO,CAAA;MACvCA,CAAA,CAAAK,cAAA;MACAnB,QAAgB,CAAAc,CAAA;IAAA,CACd;IAAA,IACYM,SAAA,GAAAV,oBAAyB,CAAAP,4BAAA,YAAAW,CAAA;MAE9B,IAAiBO,IAAA,GAAAP,CAAA,CAAAO,IAAA;MACpB,IAAAhB,KAAA,CAAAiB,WAAU,CAAAC,QAAA,CAAAF,IAAA;QACZP,CAAA,CAAAK,cAAA;QACDnB,QAAA,CAAAc,CAAA;MAAA;IAGH;IACEU,MAAA;MACAvB,UAAA,EAAAA;IAAoC,CACtC;IAEA,OAAe,UAAAwB,IAAA,EAAAC,MAAA;MACb,OAAAC,SAAA,IAAAC,WAAA,CAAAxB,KAAA,CAAAyB,eAAA;QACAjC,EAAA,EAAAQ,KAAY,CAASR,EAAA;QACvB,eAAA6B,IAAA,CAAAK,UAAA;QAEAjC,IAAsB,EAAAO,KAAA,CAAAP,IAAA;QACpB,sBAAA4B,IAAA,CAAAM,iBAAA;QACY,SAAAC,cAAwB,CAAA5B,KAAA,CAAAd,EAAA,EAAAwB,CAAC,CAAa;QAChDG,MAAiB,EAAAb,KAAA,CAAAa,MAAA;QACjBJ,OAAA,EAAST,KAAC,CAAAS,OAAA;QACXoB,aAAA,EAAA7B,KAAA,CAAAc,aAAA;QACHF,OAAA,EAAAZ,KAAA,CAAAY,OAAA;QAEAP,YAAkB,EAAAL,KAAA,CAAAK,YAAA;QAChBG,YAAA,EAAAR,KAAA,CAAAQ,YAAA;QACsBQ,SAAA,EAAAhB,KAAA,CAAAgB,SAAA;MACpB,CAAM;QACN,WAAUc,OAAA;UAAA,OAAqB,CAC7BC,UAAiB,CAAAV,IAAA,CAAAW,MAAA,aACjB;QAAA;QACFC,CAAA;MAAA,CACF;IAAA,CACF;EAEA;AAAa;AAAA,IAAAC,gBAAA,kBAAAC,WAAA,CAAAC,SAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}