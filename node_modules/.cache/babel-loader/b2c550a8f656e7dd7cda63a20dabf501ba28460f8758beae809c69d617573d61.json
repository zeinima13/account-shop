{"ast":null,"code":"import \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport { capitalize as capitalize$1 } from '@vue/shared';\nexport { camelize, hyphenate, hyphenate as kebabCase } from '@vue/shared';\nvar escapeStringRegexp = function escapeStringRegexp() {\n  var string = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  return string.replace(/[|\\\\{}()[\\]^$+*?.]/g, \"\\\\$&\").replace(/-/g, \"\\\\x2d\");\n};\nvar capitalize = function capitalize(str) {\n  return capitalize$1(str);\n};\nexport { capitalize, escapeStringRegexp };","map":{"version":3,"names":["escapeStringRegexp","string","arguments","length","undefined","replace","capitalize","str","capitalize$1"],"sources":["../../../../packages/utils/strings.ts"],"sourcesContent":["import { capitalize as toCapitalize } from '@vue/shared'\nexport {\n  camelize,\n  hyphenate,\n  hyphenate as kebabCase, // alias\n} from '@vue/shared'\n\n/**\n * fork from {@link https://github.com/sindresorhus/escape-string-regexp}\n */\nexport const escapeStringRegexp = (string = '') =>\n  string.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&').replace(/-/g, '\\\\x2d')\n\n// NOTE: improve capitalize types. Restore previous code after the [PR](https://github.com/vuejs/core/pull/6212) merge\nexport const capitalize = <T extends string>(str: T) =>\n  toCapitalize(str) as Capitalize<T>\n"],"mappings":";;;;AAMY,IAACA,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAA;EAAA,IAAIC,MAAM,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAE;EAAA,OAAKD,MAAM,CAACI,OAAO,CAAC,qBAAqB,EAAE,MAAM,CAAC,CAACA,OAAO,CAAC,IAAI,EAAE,OAAO;AAAA;AAC1G,IAACC,UAAU,GAAG,SAAbA,UAAUA,CAAIC,GAAG;EAAA,OAAKC,YAAY,CAACD,GAAG;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}