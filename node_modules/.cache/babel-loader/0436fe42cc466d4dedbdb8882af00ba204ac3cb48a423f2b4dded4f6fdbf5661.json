{"ast":null,"code":"import _objectSpread from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { defineComponent, openBlock, createBlock, Transition, mergeProps, unref, toHandlers, withCtx, renderSlot } from 'vue';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nvar __default__ = defineComponent({\n  name: \"ElCollapseTransition\"\n});\nvar _sfc_main = /* @__PURE__ */defineComponent(_objectSpread(_objectSpread({}, __default__), {}, {\n  setup: function setup(__props) {\n    var ns = useNamespace(\"collapse-transition\");\n    var reset = function reset(el) {\n      el.style.maxHeight = \"\";\n      el.style.overflow = el.dataset.oldOverflow;\n      el.style.paddingTop = el.dataset.oldPaddingTop;\n      el.style.paddingBottom = el.dataset.oldPaddingBottom;\n    };\n    var on = {\n      beforeEnter: function beforeEnter(el) {\n        if (!el.dataset) el.dataset = {};\n        el.dataset.oldPaddingTop = el.style.paddingTop;\n        el.dataset.oldPaddingBottom = el.style.paddingBottom;\n        if (el.style.height) el.dataset.elExistsHeight = el.style.height;\n        el.style.maxHeight = 0;\n        el.style.paddingTop = 0;\n        el.style.paddingBottom = 0;\n      },\n      enter: function enter(el) {\n        requestAnimationFrame(function () {\n          el.dataset.oldOverflow = el.style.overflow;\n          if (el.dataset.elExistsHeight) {\n            el.style.maxHeight = el.dataset.elExistsHeight;\n          } else if (el.scrollHeight !== 0) {\n            el.style.maxHeight = \"\".concat(el.scrollHeight, \"px\");\n          } else {\n            el.style.maxHeight = 0;\n          }\n          el.style.paddingTop = el.dataset.oldPaddingTop;\n          el.style.paddingBottom = el.dataset.oldPaddingBottom;\n          el.style.overflow = \"hidden\";\n        });\n      },\n      afterEnter: function afterEnter(el) {\n        el.style.maxHeight = \"\";\n        el.style.overflow = el.dataset.oldOverflow;\n      },\n      enterCancelled: function enterCancelled(el) {\n        reset(el);\n      },\n      beforeLeave: function beforeLeave(el) {\n        if (!el.dataset) el.dataset = {};\n        el.dataset.oldPaddingTop = el.style.paddingTop;\n        el.dataset.oldPaddingBottom = el.style.paddingBottom;\n        el.dataset.oldOverflow = el.style.overflow;\n        el.style.maxHeight = \"\".concat(el.scrollHeight, \"px\");\n        el.style.overflow = \"hidden\";\n      },\n      leave: function leave(el) {\n        if (el.scrollHeight !== 0) {\n          el.style.maxHeight = 0;\n          el.style.paddingTop = 0;\n          el.style.paddingBottom = 0;\n        }\n      },\n      afterLeave: function afterLeave(el) {\n        reset(el);\n      },\n      leaveCancelled: function leaveCancelled(el) {\n        reset(el);\n      }\n    };\n    return function (_ctx, _cache) {\n      return openBlock(), createBlock(Transition, mergeProps({\n        name: unref(ns).b()\n      }, toHandlers(on)), {\n        \"default\": withCtx(function () {\n          return [renderSlot(_ctx.$slots, \"default\")];\n        }),\n        _: 3\n      }, 16, [\"name\"]);\n    };\n  }\n}));\nvar CollapseTransition = /* @__PURE__ */_export_sfc(_sfc_main, [[\"__file\", \"collapse-transition.vue\"]]);\nexport { CollapseTransition as default };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}