{"ast":null,"code":"import _objectWithoutProperties from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _objectSpread from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _excluded = [\"cacheOptions\"];\nimport { defineComponent, ref, computed, reactive, onMounted, h } from 'vue';\nimport { pick } from 'lodash-unified';\nimport { ElSelect } from '../../select/index.mjs';\nimport { ElTree } from '../../tree/index.mjs';\nimport { useSelect } from './select.mjs';\nimport { useTree } from './tree.mjs';\nimport CacheOptions from './cache-options.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nvar _sfc_main = defineComponent({\n  name: \"ElTreeSelect\",\n  inheritAttrs: false,\n  props: _objectSpread(_objectSpread(_objectSpread({}, ElSelect.props), ElTree.props), {}, {\n    cacheData: {\n      type: Array,\n      \"default\": function _default() {\n        return [];\n      }\n    }\n  }),\n  setup: function setup(props, context) {\n    var slots = context.slots,\n      expose = context.expose;\n    var select = ref();\n    var tree = ref();\n    var key = computed(function () {\n      return props.nodeKey || props.valueKey || \"value\";\n    });\n    var selectProps = useSelect(props, context, {\n      select: select,\n      tree: tree,\n      key: key\n    });\n    var _useTree = useTree(props, context, {\n        select: select,\n        tree: tree,\n        key: key\n      }),\n      cacheOptions = _useTree.cacheOptions,\n      treeProps = _objectWithoutProperties(_useTree, _excluded);\n    var methods = reactive({});\n    expose(methods);\n    onMounted(function () {\n      Object.assign(methods, _objectSpread(_objectSpread({}, pick(tree.value, [\"filter\", \"updateKeyChildren\", \"getCheckedNodes\", \"setCheckedNodes\", \"getCheckedKeys\", \"setCheckedKeys\", \"setChecked\", \"getHalfCheckedNodes\", \"getHalfCheckedKeys\", \"getCurrentKey\", \"getCurrentNode\", \"setCurrentKey\", \"setCurrentNode\", \"getNode\", \"remove\", \"append\", \"insertBefore\", \"insertAfter\"])), pick(select.value, [\"focus\", \"blur\", \"selectedLabel\"])));\n    });\n    return function () {\n      return h(ElSelect, reactive(_objectSpread(_objectSpread({}, selectProps), {}, {\n        ref: function ref(ref2) {\n          return select.value = ref2;\n        }\n      })), _objectSpread(_objectSpread({}, slots), {}, {\n        \"default\": function _default() {\n          return [h(CacheOptions, {\n            data: cacheOptions.value\n          }), h(ElTree, reactive(_objectSpread(_objectSpread({}, treeProps), {}, {\n            ref: function ref(ref2) {\n              return tree.value = ref2;\n            }\n          })))];\n        }\n      }));\n    };\n  }\n});\nvar TreeSelect = /* @__PURE__ */_export_sfc(_sfc_main, [[\"__file\", \"tree-select.vue\"]]);\nexport { TreeSelect as default };","map":{"version":3,"names":["_sfc_main","defineComponent","name","inheritAttrs","props","_objectSpread","ElSelect","ElTree","cacheData","type","Array","default","setup","context","slots","expose","select","ref","tree","key","computed","nodeKey","valueKey","selectProps","useSelect","_useTree","useTree","cacheOptions","treeProps","_objectWithoutProperties","_excluded","methods","reactive","onMounted","Object","assign","pick","value","h","ref2","CacheOptions","data","TreeSelect","_export_sfc"],"sources":["../../../../../../packages/components/tree-select/src/tree-select.vue"],"sourcesContent":["<script lang=\"ts\">\n// @ts-nocheck\nimport { computed, defineComponent, h, onMounted, reactive, ref } from 'vue'\nimport { pick } from 'lodash-unified'\nimport ElSelect from '@element-plus/components/select'\nimport ElTree from '@element-plus/components/tree'\nimport { useSelect } from './select'\nimport { useTree } from './tree'\nimport CacheOptions from './cache-options'\n\nexport default defineComponent({\n  name: 'ElTreeSelect',\n  // disable `ElSelect` inherit current attrs\n  inheritAttrs: false,\n  props: {\n    ...ElSelect.props,\n    ...ElTree.props,\n    /**\n     * @description The cached data of the lazy node, the structure is the same as the data, used to get the label of the unloaded data\n     */\n    cacheData: {\n      type: Array,\n      default: () => [],\n    },\n  },\n  setup(props, context) {\n    const { slots, expose } = context\n\n    const select = ref<InstanceType<typeof ElSelect>>()\n    const tree = ref<InstanceType<typeof ElTree>>()\n\n    const key = computed(() => props.nodeKey || props.valueKey || 'value')\n\n    const selectProps = useSelect(props, context, { select, tree, key })\n    const { cacheOptions, ...treeProps } = useTree(props, context, {\n      select,\n      tree,\n      key,\n    })\n\n    // expose ElTree/ElSelect methods\n    const methods = reactive({})\n    expose(methods)\n    onMounted(() => {\n      Object.assign(methods, {\n        ...pick(tree.value, [\n          'filter',\n          'updateKeyChildren',\n          'getCheckedNodes',\n          'setCheckedNodes',\n          'getCheckedKeys',\n          'setCheckedKeys',\n          'setChecked',\n          'getHalfCheckedNodes',\n          'getHalfCheckedKeys',\n          'getCurrentKey',\n          'getCurrentNode',\n          'setCurrentKey',\n          'setCurrentNode',\n          'getNode',\n          'remove',\n          'append',\n          'insertBefore',\n          'insertAfter',\n        ]),\n        ...pick(select.value, ['focus', 'blur', 'selectedLabel']),\n      })\n    })\n\n    return () =>\n      h(\n        ElSelect,\n        /**\n         * 1. The `props` is processed into `Refs`, but `v-bind` and\n         * render function props cannot read `Refs`, so use `reactive`\n         * unwrap the `Refs` and keep reactive.\n         * 2. The keyword `ref` requires `Ref`, but `reactive` broke it,\n         * so use function.\n         */\n        reactive({\n          ...selectProps,\n          ref: (ref) => (select.value = ref),\n        }),\n        {\n          ...slots,\n          default: () => [\n            h(CacheOptions, { data: cacheOptions.value }),\n            h(\n              ElTree,\n              reactive({\n                ...treeProps,\n                ref: (ref) => (tree.value = ref),\n              })\n            ),\n          ],\n        }\n      )\n  },\n})\n</script>\n"],"mappings":";;;;;;;;;;;AAUA,IAAKA,SAAA,GAAaC,eAAa;EAC7BC,IAAM;EAAAC,YAAA;EAENC,KAAc,EAAAC,aAAA,CAAAA,aAAA,CAAAA,aAAA,KACPC,QAAA,CAAAF,KAAA,GACFG,MAAS,CAAAH,KAAA;IACZI,SAAU;MAAAC,IAAA,EAAAC,KAAA;MAAA,oBAAAC,SAAA;QAAA;MAAA;IAAA;EAAA;EAICC,KACH,WADGA,KACHA,CAAAR,KAAA,EAAAS,OAAA;IACN,IAAAC,KAAA,GAAgBD,OAAA,CAAhBC,KAAA;MAAAC,MAAgB,GAAAF,OAAA,CAAhBE,MAAgB;IAClB,IAAAC,MAAA,GAAAC,GAAA;IACF,IAAAC,IAAA,GAAAD,GAAA;IACA,IAAAE,GAAA,GAAsBC,QAAA;MAAA,OAAAhB,KAAA,CAAAiB,OAAA,IAAAjB,KAAA,CAAAkB,QAAA;IAAA;IACd,IAAAC,WAAS,GAAAC,SAAW,CAAApB,KAAA,EAAAS,OAAA;MAAAG,MAAA,EAAAA,MAAA;MAAAE,IAAA,EAAAA,IAAA;MAAAC,GAAA,EAAAA;IAAA;IAE1B,IAAAM,QAAA,GAAkDC,OAAA,CAAAtB,KAAA,EAAAS,OAAA;QAClDG,MAAA,EAAAA,MAAA;QAEAE,IAAM,EAANA,IAAM;QAEAC,GAAA,EAAAA;MACN;MANMQ,YAA4C,GAAAF,QAAA,CAA5CE,YAA4C;MAAAC,SAAA,GAAAC,wBAAA,CAAAJ,QAAA,EAAAK,SAAA;IAOhD,IAAAC,OAAA,GAAAC,QAAA;IACAjB,MAAA,CAAAgB,OAAA;IACAE,SAAA;MACDC,MAAA,CAAAC,MAAA,CAAAJ,OAAA,EAAA1B,aAAA,CAAAA,aAAA,KAGK+B,IAAA,CAAAlB,IAAU,CAASmB,KAAA,GACzB,QAAc,EACd,mBAAgB,EACd,iBAAuB,EACrB,iBAAoB,EAClB,kBACA,kBACA,cACA,uBACA,sBACA,iBACA,kBACA,iBACA,kBACA,WACA,UACA,UACA,gBACA,cACA,IACAD,IAAA,CAAApB,MAAA,CAAAqB,KAAA,sCACA;IAAA,CACA;IAAA,OACD;MAAA,OAAAC,CAAA,CAAAhC,QAAA,EAAA0B,QAAA,CAAA3B,aAAA,CAAAA,aAAA,KACDkB,WAAe;QACjBN,GAAC,WAADA,GAACA,CAAAsB,IAAA;UAAA,OAAAvB,MAAA,CAAAqB,KAAA,GAAAE,IAAA;QAAA;MAAA,EACF,GAAAlC,aAAA,CAAAA,aAAA,KAEDS,KACE;QACE,oBAAAH,SAAA;UAAA,QAAA2B,CAAA,CAAAE,YAAA;YAAAC,IAAA,EAAAd,YAAA,CAAAU;UAAA,IAAAC,CAAA,CAAA/B,MAAA,EAAAyB,QAAA,CAAA3B,aAAA,CAAAA,aAAA,KAAAuB,SAAA;YAAAX,GAAA,WAAAA,IAAAsB,IAAA;cAAA,OAAArB,IAAA,CAAAmB,KAAA,GAAAE,IAAA;YAAA;UAAA;QAAA;MAAA;IAAA;EAAA;AAQS;AAEuB,IAAAG,UAAA,GAC/B,eAAAC,WAAA,CAAA3C,SAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}