{"ast":null,"code":"import { watch, unref, nextTick } from 'vue';\nvar useDelayedRender = function useDelayedRender(_ref) {\n  var indicator = _ref.indicator,\n    intermediateIndicator = _ref.intermediateIndicator,\n    _ref$shouldSetInterme = _ref.shouldSetIntermediate,\n    shouldSetIntermediate = _ref$shouldSetInterme === void 0 ? function () {\n      return true;\n    } : _ref$shouldSetInterme,\n    beforeShow = _ref.beforeShow,\n    afterShow = _ref.afterShow,\n    afterHide = _ref.afterHide,\n    beforeHide = _ref.beforeHide;\n  watch(function () {\n    return unref(indicator);\n  }, function (val) {\n    if (val) {\n      beforeShow == null ? void 0 : beforeShow();\n      nextTick(function () {\n        if (!unref(indicator)) return;\n        if (shouldSetIntermediate(\"show\")) {\n          intermediateIndicator.value = true;\n        }\n      });\n    } else {\n      beforeHide == null ? void 0 : beforeHide();\n      nextTick(function () {\n        if (unref(indicator)) return;\n        if (shouldSetIntermediate(\"hide\")) {\n          intermediateIndicator.value = false;\n        }\n      });\n    }\n  });\n  watch(function () {\n    return intermediateIndicator.value;\n  }, function (val) {\n    if (val) {\n      afterShow == null ? void 0 : afterShow();\n    } else {\n      afterHide == null ? void 0 : afterHide();\n    }\n  });\n};\nexport { useDelayedRender };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}