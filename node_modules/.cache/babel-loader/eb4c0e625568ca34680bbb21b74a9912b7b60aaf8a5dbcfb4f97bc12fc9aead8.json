{"ast":null,"code":"import \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.reduce.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport \"core-js/modules/esnext.iterator.reduce.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport { defineComponent, getCurrentInstance, inject, watch, onUnmounted, h } from 'vue';\nimport useLayoutObserver from '../layout-observer.mjs';\nimport { removePopper } from '../util.mjs';\nimport { TABLE_INJECTION_KEY } from '../tokens.mjs';\nimport useRender from './render-helper.mjs';\nimport defaultProps from './defaults.mjs';\nimport { useNamespace } from '../../../../hooks/use-namespace/index.mjs';\nimport { addClass, removeClass } from '../../../../utils/dom/style.mjs';\nimport { isClient } from '@vueuse/core';\nimport { rAF } from '../../../../utils/raf.mjs';\nvar TableBody = defineComponent({\n  name: \"ElTableBody\",\n  props: defaultProps,\n  setup: function setup(props) {\n    var instance = getCurrentInstance();\n    var parent = inject(TABLE_INJECTION_KEY);\n    var ns = useNamespace(\"table\");\n    var _useRender = useRender(props),\n      wrappedRowRender = _useRender.wrappedRowRender,\n      tooltipContent = _useRender.tooltipContent,\n      tooltipTrigger = _useRender.tooltipTrigger;\n    var _useLayoutObserver = useLayoutObserver(parent),\n      onColumnsChange = _useLayoutObserver.onColumnsChange,\n      onScrollableChange = _useLayoutObserver.onScrollableChange;\n    var hoveredCellList = [];\n    watch(props.store.states.hoverRow, function (newVal, oldVal) {\n      var _a;\n      var el = instance == null ? void 0 : instance.vnode.el;\n      var rows = Array.from((el == null ? void 0 : el.children) || []).filter(function (e) {\n        return e == null ? void 0 : e.classList.contains(\"\".concat(ns.e(\"row\")));\n      });\n      var rowNum = newVal;\n      var childNodes = (_a = rows[rowNum]) == null ? void 0 : _a.childNodes;\n      if (childNodes == null ? void 0 : childNodes.length) {\n        var control = 0;\n        var indexes = Array.from(childNodes).reduce(function (acc, item, index) {\n          var _a2, _b;\n          if (((_a2 = childNodes[index]) == null ? void 0 : _a2.colSpan) > 1) {\n            control = (_b = childNodes[index]) == null ? void 0 : _b.colSpan;\n          }\n          if (item.nodeName !== \"TD\" && control === 0) {\n            acc.push(index);\n          }\n          control > 0 && control--;\n          return acc;\n        }, []);\n        indexes.forEach(function (rowIndex) {\n          var _a2;\n          rowNum = newVal;\n          while (rowNum > 0) {\n            var preChildNodes = (_a2 = rows[rowNum - 1]) == null ? void 0 : _a2.childNodes;\n            if (preChildNodes[rowIndex] && preChildNodes[rowIndex].nodeName === \"TD\" && preChildNodes[rowIndex].rowSpan > 1) {\n              addClass(preChildNodes[rowIndex], \"hover-cell\");\n              hoveredCellList.push(preChildNodes[rowIndex]);\n              break;\n            }\n            rowNum--;\n          }\n        });\n      } else {\n        hoveredCellList.forEach(function (item) {\n          return removeClass(item, \"hover-cell\");\n        });\n        hoveredCellList.length = 0;\n      }\n      if (!props.store.states.isComplex.value || !isClient) return;\n      rAF(function () {\n        var oldRow = rows[oldVal];\n        var newRow = rows[newVal];\n        if (oldRow && !oldRow.classList.contains(\"hover-fixed-row\")) {\n          removeClass(oldRow, \"hover-row\");\n        }\n        if (newRow) {\n          addClass(newRow, \"hover-row\");\n        }\n      });\n    });\n    onUnmounted(function () {\n      var _a;\n      (_a = removePopper) == null ? void 0 : _a();\n    });\n    return {\n      ns: ns,\n      onColumnsChange: onColumnsChange,\n      onScrollableChange: onScrollableChange,\n      wrappedRowRender: wrappedRowRender,\n      tooltipContent: tooltipContent,\n      tooltipTrigger: tooltipTrigger\n    };\n  },\n  render: function render() {\n    var wrappedRowRender = this.wrappedRowRender,\n      store = this.store;\n    var data = store.states.data.value || [];\n    return h(\"tbody\", {\n      tabIndex: -1\n    }, [data.reduce(function (acc, row) {\n      return acc.concat(wrappedRowRender(row, acc.length));\n    }, [])]);\n  }\n});\nexport { TableBody as default };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}