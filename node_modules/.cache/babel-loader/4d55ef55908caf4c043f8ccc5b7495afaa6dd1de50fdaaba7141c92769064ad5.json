{"ast":null,"code":"import \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport { defineComponent, createVNode } from 'vue';\nimport { tableV2HeaderRowProps } from '../header-row.mjs';\nimport { isArray } from '@vue/shared';\nvar TableV2HeaderRow = defineComponent({\n  name: \"ElTableV2HeaderRow\",\n  props: tableV2HeaderRowProps,\n  setup: function setup(props, _ref) {\n    var slots = _ref.slots;\n    return function () {\n      var columns = props.columns,\n        columnsStyles = props.columnsStyles,\n        headerIndex = props.headerIndex,\n        style = props.style;\n      var Cells = columns.map(function (column, columnIndex) {\n        return slots.cell({\n          columns: columns,\n          column: column,\n          columnIndex: columnIndex,\n          headerIndex: headerIndex,\n          style: columnsStyles[column.key]\n        });\n      });\n      if (slots.header) {\n        Cells = slots.header({\n          cells: Cells.map(function (node) {\n            if (isArray(node) && node.length === 1) {\n              return node[0];\n            }\n            return node;\n          }),\n          columns: columns,\n          headerIndex: headerIndex\n        });\n      }\n      return createVNode(\"div\", {\n        \"class\": props[\"class\"],\n        \"style\": style,\n        \"role\": \"row\"\n      }, [Cells]);\n    };\n  }\n});\nvar HeaderRow = TableV2HeaderRow;\nexport { HeaderRow as default };","map":{"version":3,"names":["TableV2HeaderRow","defineComponent","name","props","tableV2HeaderRowProps","slots","_ref","columns","columnsStyles","headerIndex","style","Cells","map","column","columnIndex","cell","key","header","cells","node","isArray","length","createVNode","HeaderRow"],"sources":["../../../../../../../packages/components/table-v2/src/components/header-row.tsx"],"sourcesContent":["import { defineComponent } from 'vue'\nimport { isArray } from '@element-plus/utils'\nimport { tableV2HeaderRowProps } from '../header-row'\n\nimport type { CSSProperties } from 'vue'\nimport type { ColumnCellsType } from '../types'\nimport type { TableV2HeaderRowProps } from '../header-row'\n\nconst TableV2HeaderRow = defineComponent({\n  name: 'ElTableV2HeaderRow',\n  props: tableV2HeaderRowProps,\n  setup(props, { slots }) {\n    return () => {\n      const { columns, columnsStyles, headerIndex, style } = props\n      let Cells: ColumnCellsType = columns.map((column, columnIndex) => {\n        return slots.cell!({\n          columns,\n          column,\n          columnIndex,\n          headerIndex,\n          style: columnsStyles[column.key!],\n        })\n      })\n\n      if (slots.header) {\n        Cells = slots.header({\n          cells: Cells.map((node) => {\n            if (isArray(node) && node.length === 1) {\n              return node[0]\n            }\n            return node\n          }),\n          columns,\n          headerIndex,\n        })\n      }\n\n      return (\n        <div class={props.class} style={style} role=\"row\">\n          {Cells}\n        </div>\n      )\n    }\n  },\n})\n\nexport default TableV2HeaderRow\n\nexport type TableV2HeaderRowCellRendererParams = {\n  columns: TableV2HeaderRowProps['columns']\n  column: TableV2HeaderRowProps['columns'][number]\n  columnIndex: number\n  headerIndex: number\n  style: CSSProperties\n}\n\nexport type TableV2HeaderRowRendererParams = {\n  cells: ColumnCellsType\n  columns: TableV2HeaderRowProps['columns']\n  headerIndex: number\n}\n"],"mappings":";;;;;AAQA,IAAMA,gBAAgB,GAAGC,eAAe,CAAC;EACvCC,IAAI,EAAE,oBADiC;EAEvCC,KAAK,EAAEC,qBAFgC;qCAGxB;IAAA,IAAVC,KAAA,GAAAC,IAAA,CAAAD,KAAA;IAAmB;MACtB,IACQE,OAAA,GAAuCJ,KAAA,CAAvCI,OAAA;QAAEC,aAAF,GAAuCL,KAAA,CAArCK,aAAF;QAAWC,WAAX,GAAuCN,KAAA,CAA5BM,WAAX;QAA0BC,KAA1B,GAAuCP,KAAA,CAAbO,KAA1B;MAAA,IAAiDC,KAAvD,GAAAJ,OAAA,CAAAK,GAAA,WAAAC,MAAA,EAAAC,WAAA;QACI,OAAsBT,KAAG,CAAAU,IAAO,CAAC;UAC5BR,OAAA,EAAAA,OAAA;UACLM,MADiB,EACjBA,MADiB;UAEjBC,WAFiB,EAEjBA,WAFiB;UAGjBL,WAHiB,EAGjBA,WAHiB;UAIjBC,KAJiB,EAAAF,aAAA,CAAAK,MAAA,CAAAG,GAAA;QAKjB;MALiB;MAOpB,IARDX,KAAA,CAAAY,MAAA;;UAUIC,KAAK,EAACP,KAAV,CAAkBC,GAAA,WAAAO,IAAA;YAChB,IAAQC,OAAM,CAAAD,IAAN,CAAa,IAAAA,IAAA,CAAAE,MAAA;cACnB,OAAYF,IAAL,EAAW;;mBAEPA,IAAA;UACR;;UACDV,WAAA,EAAAA;QACD;;MAED,OAAAa,WAAA;QARmB,OAArB,EAAAnB,KAAA;QAUD,SAAAO,KAAA;;MAED,IAAAC,KAAA;;EAAA;;AAAA,IAAAY,SAAA,GAAAvB,gBAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}