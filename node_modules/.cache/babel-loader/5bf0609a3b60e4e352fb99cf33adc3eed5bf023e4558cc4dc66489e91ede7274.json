{"ast":null,"code":"import { cAF, rAF } from './raf.mjs';\nfunction throttleByRaf(cb) {\n  var timer = 0;\n  var throttle = function throttle() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    if (timer) {\n      cAF(timer);\n    }\n    timer = rAF(function () {\n      cb.apply(void 0, args);\n      timer = 0;\n    });\n  };\n  throttle.cancel = function () {\n    cAF(timer);\n    timer = 0;\n  };\n  return throttle;\n}\nexport { throttleByRaf };","map":{"version":3,"names":["throttleByRaf","cb","timer","throttle","_len","arguments","length","args","Array","_key","cAF","rAF","apply","cancel"],"sources":["../../../../packages/utils/throttleByRaf.ts"],"sourcesContent":["import { cAF, rAF } from './raf'\n\nexport function throttleByRaf(cb: (...args: any[]) => void) {\n  let timer = 0\n\n  const throttle = (...args: any[]): void => {\n    if (timer) {\n      cAF(timer)\n    }\n    timer = rAF(() => {\n      cb(...args)\n      timer = 0\n    })\n  }\n\n  throttle.cancel = () => {\n    cAF(timer)\n    timer = 0\n  }\n\n  return throttle\n}\n"],"mappings":";AACO,SAASA,aAAaA,CAACC,EAAE,EAAE;EAChC,IAAIC,KAAK,GAAG,CAAC;EACb,IAAMC,QAAQ,GAAG,SAAXA,QAAQA,CAAA,EAAgB;IAAA,SAAAC,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAATC,IAAI,OAAAC,KAAA,CAAAJ,IAAA,GAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;MAAJF,IAAI,CAAAE,IAAA,IAAAJ,SAAA,CAAAI,IAAA;IAAA;IACvB,IAAIP,KAAK,EAAE;MACTQ,GAAG,CAACR,KAAK,CAAC;IAChB;IACIA,KAAK,GAAGS,GAAG,CAAC,YAAM;MAChBV,EAAE,CAAAW,KAAA,SAAIL,IAAI,CAAC;MACXL,KAAK,GAAG,CAAC;IACf,CAAK,CAAC;EACN,CAAG;EACDC,QAAQ,CAACU,MAAM,GAAG,YAAM;IACtBH,GAAG,CAACR,KAAK,CAAC;IACVA,KAAK,GAAG,CAAC;EACb,CAAG;EACD,OAAOC,QAAQ;AACjB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}