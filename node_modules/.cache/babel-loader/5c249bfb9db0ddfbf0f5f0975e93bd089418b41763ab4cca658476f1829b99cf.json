{"ast":null,"code":"import _slicedToArray from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport \"core-js/modules/es.array.every.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.every.js\";\nimport \"core-js/modules/esnext.iterator.find.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport dayjs from 'dayjs';\nimport { isArray } from '@vue/shared';\nimport { rangeArr } from '../../time-picker/src/utils.mjs';\nvar isValidRange = function isValidRange(range) {\n  if (!isArray(range)) return false;\n  var _range = _slicedToArray(range, 2),\n    left = _range[0],\n    right = _range[1];\n  return dayjs.isDayjs(left) && dayjs.isDayjs(right) && left.isSameOrBefore(right);\n};\nvar getDefaultValue = function getDefaultValue(defaultValue, _ref) {\n  var lang = _ref.lang,\n    unit = _ref.unit,\n    unlinkPanels = _ref.unlinkPanels;\n  var start;\n  if (isArray(defaultValue)) {\n    var _defaultValue$map = defaultValue.map(function (d) {\n        return dayjs(d).locale(lang);\n      }),\n      _defaultValue$map2 = _slicedToArray(_defaultValue$map, 2),\n      left = _defaultValue$map2[0],\n      right = _defaultValue$map2[1];\n    if (!unlinkPanels) {\n      right = left.add(1, unit);\n    }\n    return [left, right];\n  } else if (defaultValue) {\n    start = dayjs(defaultValue);\n  } else {\n    start = dayjs();\n  }\n  start = start.locale(lang);\n  return [start, start.add(1, unit)];\n};\nvar buildPickerTable = function buildPickerTable(dimension, rows, _ref2) {\n  var columnIndexOffset = _ref2.columnIndexOffset,\n    startDate = _ref2.startDate,\n    nextEndDate = _ref2.nextEndDate,\n    now = _ref2.now,\n    unit = _ref2.unit,\n    relativeDateGetter = _ref2.relativeDateGetter,\n    setCellMetadata = _ref2.setCellMetadata,\n    setRowMetadata = _ref2.setRowMetadata;\n  for (var rowIndex = 0; rowIndex < dimension.row; rowIndex++) {\n    var row = rows[rowIndex];\n    for (var columnIndex = 0; columnIndex < dimension.column; columnIndex++) {\n      var cell = row[columnIndex + columnIndexOffset];\n      if (!cell) {\n        cell = {\n          row: rowIndex,\n          column: columnIndex,\n          type: \"normal\",\n          inRange: false,\n          start: false,\n          end: false\n        };\n      }\n      var index = rowIndex * dimension.column + columnIndex;\n      var nextStartDate = relativeDateGetter(index);\n      cell.dayjs = nextStartDate;\n      cell.date = nextStartDate.toDate();\n      cell.timestamp = nextStartDate.valueOf();\n      cell.type = \"normal\";\n      cell.inRange = !!(startDate && nextStartDate.isSameOrAfter(startDate, unit) && nextEndDate && nextStartDate.isSameOrBefore(nextEndDate, unit)) || !!(startDate && nextStartDate.isSameOrBefore(startDate, unit) && nextEndDate && nextStartDate.isSameOrAfter(nextEndDate, unit));\n      if (startDate == null ? void 0 : startDate.isSameOrAfter(nextEndDate)) {\n        cell.start = !!nextEndDate && nextStartDate.isSame(nextEndDate, unit);\n        cell.end = startDate && nextStartDate.isSame(startDate, unit);\n      } else {\n        cell.start = !!startDate && nextStartDate.isSame(startDate, unit);\n        cell.end = !!nextEndDate && nextStartDate.isSame(nextEndDate, unit);\n      }\n      var isToday = nextStartDate.isSame(now, unit);\n      if (isToday) {\n        cell.type = \"today\";\n      }\n      setCellMetadata == null ? void 0 : setCellMetadata(cell, {\n        rowIndex: rowIndex,\n        columnIndex: columnIndex\n      });\n      row[columnIndex + columnIndexOffset] = cell;\n    }\n    setRowMetadata == null ? void 0 : setRowMetadata(row);\n  }\n};\nvar datesInMonth = function datesInMonth(year, month, lang) {\n  var firstDay = dayjs().locale(lang).startOf(\"month\").month(month).year(year);\n  var numOfDays = firstDay.daysInMonth();\n  return rangeArr(numOfDays).map(function (n) {\n    return firstDay.add(n, \"day\").toDate();\n  });\n};\nvar getValidDateOfMonth = function getValidDateOfMonth(year, month, lang, disabledDate) {\n  var _value = dayjs().year(year).month(month).startOf(\"month\");\n  var _date = datesInMonth(year, month, lang).find(function (date) {\n    return !(disabledDate == null ? void 0 : disabledDate(date));\n  });\n  if (_date) {\n    return dayjs(_date).locale(lang);\n  }\n  return _value.locale(lang);\n};\nvar getValidDateOfYear = function getValidDateOfYear(value, lang, disabledDate) {\n  var year = value.year();\n  if (!(disabledDate == null ? void 0 : disabledDate(value.toDate()))) {\n    return value.locale(lang);\n  }\n  var month = value.month();\n  if (!datesInMonth(year, month, lang).every(disabledDate)) {\n    return getValidDateOfMonth(year, month, lang, disabledDate);\n  }\n  for (var i = 0; i < 12; i++) {\n    if (!datesInMonth(year, i, lang).every(disabledDate)) {\n      return getValidDateOfMonth(year, i, lang, disabledDate);\n    }\n  }\n  return value;\n};\nexport { buildPickerTable, datesInMonth, getDefaultValue, getValidDateOfMonth, getValidDateOfYear, isValidRange };","map":{"version":3,"names":["isValidRange","range","isArray","_range","_slicedToArray","left","right","dayjs","isDayjs","isSameOrBefore","getDefaultValue","defaultValue","_ref","lang","unit","unlinkPanels","start","_defaultValue$map","map","d","locale","_defaultValue$map2","add","buildPickerTable","dimension","rows","_ref2","columnIndexOffset","startDate","nextEndDate","now","relativeDateGetter","setCellMetadata","setRowMetadata","rowIndex","row","columnIndex","column","cell","type","inRange","end","index","nextStartDate","date","toDate","timestamp","valueOf","isSameOrAfter","isSame","isToday","datesInMonth","year","month","firstDay","startOf","numOfDays","daysInMonth","rangeArr","n","getValidDateOfMonth","disabledDate","_value","_date","find","getValidDateOfYear","value","every","i"],"sources":["../../../../../../packages/components/date-picker/src/utils.ts"],"sourcesContent":["import dayjs from 'dayjs'\nimport { isArray } from '@element-plus/utils'\nimport { rangeArr } from '@element-plus/components/time-picker'\n\nimport type { Dayjs } from 'dayjs'\nimport type { DateCell } from './date-picker.type'\nimport type { DisabledDateType } from './props/shared'\n\ntype DayRange = [Dayjs | undefined, Dayjs | undefined]\n\nexport const isValidRange = (range: DayRange): boolean => {\n  if (!isArray(range)) return false\n\n  const [left, right] = range\n\n  return (\n    dayjs.isDayjs(left) && dayjs.isDayjs(right) && left.isSameOrBefore(right)\n  )\n}\n\ntype GetDefaultValueParams = {\n  lang: string\n  unit: 'month' | 'year'\n  unlinkPanels: boolean\n}\n\nexport type DefaultValue = [Date, Date] | Date | undefined\n\nexport const getDefaultValue = (\n  defaultValue: DefaultValue,\n  { lang, unit, unlinkPanels }: GetDefaultValueParams\n) => {\n  let start: Dayjs\n\n  if (isArray(defaultValue)) {\n    let [left, right] = defaultValue.map((d) => dayjs(d).locale(lang))\n    if (!unlinkPanels) {\n      right = left.add(1, unit)\n    }\n    return [left, right]\n  } else if (defaultValue) {\n    start = dayjs(defaultValue)\n  } else {\n    start = dayjs()\n  }\n  start = start.locale(lang)\n  return [start, start.add(1, unit)]\n}\n\ntype Dimension = {\n  row: number\n  column: number\n}\n\ntype BuildPickerTableMetadata = {\n  startDate?: Dayjs | null\n  unit: 'month' | 'day'\n  columnIndexOffset: number\n  now: Dayjs\n  nextEndDate: Dayjs | null\n  relativeDateGetter: (index: number) => Dayjs\n  setCellMetadata?: (\n    cell: DateCell,\n    dimension: { rowIndex: number; columnIndex: number }\n  ) => void\n  setRowMetadata?: (row: DateCell[]) => void\n}\n\nexport const buildPickerTable = (\n  dimension: Dimension,\n  rows: DateCell[][],\n  {\n    columnIndexOffset,\n    startDate,\n    nextEndDate,\n    now,\n    unit,\n    relativeDateGetter,\n    setCellMetadata,\n    setRowMetadata,\n  }: BuildPickerTableMetadata\n) => {\n  for (let rowIndex = 0; rowIndex < dimension.row; rowIndex++) {\n    const row = rows[rowIndex]\n    for (let columnIndex = 0; columnIndex < dimension.column; columnIndex++) {\n      let cell = row[columnIndex + columnIndexOffset]\n      if (!cell) {\n        cell = {\n          row: rowIndex,\n          column: columnIndex,\n          type: 'normal',\n          inRange: false,\n          start: false,\n          end: false,\n        }\n      }\n      const index = rowIndex * dimension.column + columnIndex\n      const nextStartDate = relativeDateGetter(index)\n      cell.dayjs = nextStartDate\n      cell.date = nextStartDate.toDate()\n      cell.timestamp = nextStartDate.valueOf()\n      cell.type = 'normal'\n\n      cell.inRange =\n        !!(\n          startDate &&\n          nextStartDate.isSameOrAfter(startDate, unit) &&\n          nextEndDate &&\n          nextStartDate.isSameOrBefore(nextEndDate, unit)\n        ) ||\n        !!(\n          startDate &&\n          nextStartDate.isSameOrBefore(startDate, unit) &&\n          nextEndDate &&\n          nextStartDate.isSameOrAfter(nextEndDate, unit)\n        )\n\n      if (startDate?.isSameOrAfter(nextEndDate)) {\n        cell.start = !!nextEndDate && nextStartDate.isSame(nextEndDate, unit)\n        cell.end = startDate && nextStartDate.isSame(startDate, unit)\n      } else {\n        cell.start = !!startDate && nextStartDate.isSame(startDate, unit)\n        cell.end = !!nextEndDate && nextStartDate.isSame(nextEndDate, unit)\n      }\n\n      const isToday = nextStartDate.isSame(now, unit)\n\n      if (isToday) {\n        cell.type = 'today'\n      }\n      setCellMetadata?.(cell, { rowIndex, columnIndex })\n      row[columnIndex + columnIndexOffset] = cell\n    }\n    setRowMetadata?.(row)\n  }\n}\n\nexport const datesInMonth = (year: number, month: number, lang: string) => {\n  const firstDay = dayjs().locale(lang).startOf('month').month(month).year(year)\n  const numOfDays = firstDay.daysInMonth()\n  return rangeArr(numOfDays).map((n) => firstDay.add(n, 'day').toDate())\n}\n\nexport const getValidDateOfMonth = (\n  year: number,\n  month: number,\n  lang: string,\n  disabledDate?: DisabledDateType\n) => {\n  const _value = dayjs().year(year).month(month).startOf('month')\n  const _date = datesInMonth(year, month, lang).find((date) => {\n    return !disabledDate?.(date)\n  })\n  if (_date) {\n    return dayjs(_date).locale(lang)\n  }\n  return _value.locale(lang)\n}\n\nexport const getValidDateOfYear = (\n  value: Dayjs,\n  lang: string,\n  disabledDate?: DisabledDateType\n) => {\n  const year = value.year()\n  if (!disabledDate?.(value.toDate())) {\n    return value.locale(lang)\n  }\n  const month = value.month()\n  if (!datesInMonth(year, month, lang).every(disabledDate)) {\n    return getValidDateOfMonth(year, month, lang, disabledDate)\n  }\n  for (let i = 0; i < 12; i++) {\n    if (!datesInMonth(year, i, lang).every(disabledDate)) {\n      return getValidDateOfMonth(year, i, lang, disabledDate)\n    }\n  }\n  return value\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}