{"ast":null,"code":"import _toConsumableArray from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport \"core-js/modules/es.array.index-of.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport { ref, watch, provide, computed } from 'vue';\nimport { collapseContextKey } from './constants.mjs';\nimport { castArray } from 'lodash-unified';\nimport { UPDATE_MODEL_EVENT, CHANGE_EVENT } from '../../../constants/event.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nvar useCollapse = function useCollapse(props, emit) {\n  var activeNames = ref(castArray(props.modelValue));\n  var setActiveNames = function setActiveNames(_activeNames) {\n    activeNames.value = _activeNames;\n    var value = props.accordion ? activeNames.value[0] : activeNames.value;\n    emit(UPDATE_MODEL_EVENT, value);\n    emit(CHANGE_EVENT, value);\n  };\n  var handleItemClick = function handleItemClick(name) {\n    if (props.accordion) {\n      setActiveNames([activeNames.value[0] === name ? \"\" : name]);\n    } else {\n      var _activeNames = _toConsumableArray(activeNames.value);\n      var index = _activeNames.indexOf(name);\n      if (index > -1) {\n        _activeNames.splice(index, 1);\n      } else {\n        _activeNames.push(name);\n      }\n      setActiveNames(_activeNames);\n    }\n  };\n  watch(function () {\n    return props.modelValue;\n  }, function () {\n    return activeNames.value = castArray(props.modelValue);\n  }, {\n    deep: true\n  });\n  provide(collapseContextKey, {\n    activeNames: activeNames,\n    handleItemClick: handleItemClick\n  });\n  return {\n    activeNames: activeNames,\n    setActiveNames: setActiveNames\n  };\n};\nvar useCollapseDOM = function useCollapseDOM() {\n  var ns = useNamespace(\"collapse\");\n  var rootKls = computed(function () {\n    return ns.b();\n  });\n  return {\n    rootKls: rootKls\n  };\n};\nexport { useCollapse, useCollapseDOM };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}