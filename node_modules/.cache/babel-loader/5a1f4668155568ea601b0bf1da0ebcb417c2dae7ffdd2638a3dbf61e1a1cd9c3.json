{"ast":null,"code":"import _defineProperty from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport { defineComponent, provide, unref, createVNode, isVNode, mergeProps } from 'vue';\nimport { useTable } from './use-table.mjs';\nimport { TableV2InjectionKey } from './tokens.mjs';\nimport { tableV2Props } from './table.mjs';\nimport MainTable from './renderers/main-table.mjs';\nimport LeftTable from './renderers/left-table.mjs';\nimport RightTable from './renderers/right-table.mjs';\nimport Row from './renderers/row.mjs';\nimport Cell from './renderers/cell.mjs';\nimport Header from './renderers/header.mjs';\nimport HeaderCell from './renderers/header-cell.mjs';\nimport Footer from './renderers/footer.mjs';\nimport Empty from './renderers/empty.mjs';\nimport Overlay from './renderers/overlay.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nfunction _isSlot(s) {\n  return typeof s === \"function\" || Object.prototype.toString.call(s) === \"[object Object]\" && !isVNode(s);\n}\nvar COMPONENT_NAME = \"ElTableV2\";\nvar TableV2 = defineComponent({\n  name: COMPONENT_NAME,\n  props: tableV2Props,\n  setup: function setup(props, _ref) {\n    var slots = _ref.slots,\n      expose = _ref.expose;\n    var ns = useNamespace(\"table-v2\");\n    var _useTable = useTable(props),\n      columnsStyles = _useTable.columnsStyles,\n      fixedColumnsOnLeft = _useTable.fixedColumnsOnLeft,\n      fixedColumnsOnRight = _useTable.fixedColumnsOnRight,\n      mainColumns = _useTable.mainColumns,\n      mainTableHeight = _useTable.mainTableHeight,\n      fixedTableHeight = _useTable.fixedTableHeight,\n      leftTableWidth = _useTable.leftTableWidth,\n      rightTableWidth = _useTable.rightTableWidth,\n      data = _useTable.data,\n      depthMap = _useTable.depthMap,\n      expandedRowKeys = _useTable.expandedRowKeys,\n      hasFixedColumns = _useTable.hasFixedColumns,\n      mainTableRef = _useTable.mainTableRef,\n      leftTableRef = _useTable.leftTableRef,\n      rightTableRef = _useTable.rightTableRef,\n      isDynamic = _useTable.isDynamic,\n      isResetting = _useTable.isResetting,\n      isScrolling = _useTable.isScrolling,\n      bodyWidth = _useTable.bodyWidth,\n      emptyStyle = _useTable.emptyStyle,\n      rootStyle = _useTable.rootStyle,\n      headerWidth = _useTable.headerWidth,\n      footerHeight = _useTable.footerHeight,\n      showEmpty = _useTable.showEmpty,\n      scrollTo = _useTable.scrollTo,\n      scrollToLeft = _useTable.scrollToLeft,\n      scrollToTop = _useTable.scrollToTop,\n      scrollToRow = _useTable.scrollToRow,\n      getRowHeight = _useTable.getRowHeight,\n      onColumnSorted = _useTable.onColumnSorted,\n      onRowHeightChange = _useTable.onRowHeightChange,\n      onRowHovered = _useTable.onRowHovered,\n      onRowExpanded = _useTable.onRowExpanded,\n      onRowsRendered = _useTable.onRowsRendered,\n      onScroll = _useTable.onScroll,\n      onVerticalScroll = _useTable.onVerticalScroll;\n    expose({\n      scrollTo: scrollTo,\n      scrollToLeft: scrollToLeft,\n      scrollToTop: scrollToTop,\n      scrollToRow: scrollToRow\n    });\n    provide(TableV2InjectionKey, {\n      ns: ns,\n      isResetting: isResetting,\n      isScrolling: isScrolling\n    });\n    return function () {\n      var cache = props.cache,\n        cellProps = props.cellProps,\n        estimatedRowHeight = props.estimatedRowHeight,\n        expandColumnKey = props.expandColumnKey,\n        fixedData = props.fixedData,\n        headerHeight = props.headerHeight,\n        headerClass = props.headerClass,\n        headerProps = props.headerProps,\n        headerCellProps = props.headerCellProps,\n        sortBy = props.sortBy,\n        sortState = props.sortState,\n        rowHeight = props.rowHeight,\n        rowClass = props.rowClass,\n        rowEventHandlers = props.rowEventHandlers,\n        rowKey = props.rowKey,\n        rowProps = props.rowProps,\n        scrollbarAlwaysOn = props.scrollbarAlwaysOn,\n        indentSize = props.indentSize,\n        iconSize = props.iconSize,\n        useIsScrolling = props.useIsScrolling,\n        vScrollbarSize = props.vScrollbarSize,\n        width = props.width;\n      var _data = unref(data);\n      var mainTableProps = {\n        cache: cache,\n        \"class\": ns.e(\"main\"),\n        columns: unref(mainColumns),\n        data: _data,\n        fixedData: fixedData,\n        estimatedRowHeight: estimatedRowHeight,\n        bodyWidth: unref(bodyWidth) + vScrollbarSize,\n        headerHeight: headerHeight,\n        headerWidth: unref(headerWidth),\n        height: unref(mainTableHeight),\n        mainTableRef: mainTableRef,\n        rowKey: rowKey,\n        rowHeight: rowHeight,\n        scrollbarAlwaysOn: scrollbarAlwaysOn,\n        scrollbarStartGap: 2,\n        scrollbarEndGap: vScrollbarSize,\n        useIsScrolling: useIsScrolling,\n        width: width,\n        getRowHeight: getRowHeight,\n        onRowsRendered: onRowsRendered,\n        onScroll: onScroll\n      };\n      var leftColumnsWidth = unref(leftTableWidth);\n      var _fixedTableHeight = unref(fixedTableHeight);\n      var leftTableProps = {\n        cache: cache,\n        \"class\": ns.e(\"left\"),\n        columns: unref(fixedColumnsOnLeft),\n        data: _data,\n        estimatedRowHeight: estimatedRowHeight,\n        leftTableRef: leftTableRef,\n        rowHeight: rowHeight,\n        bodyWidth: leftColumnsWidth,\n        headerWidth: leftColumnsWidth,\n        headerHeight: headerHeight,\n        height: _fixedTableHeight,\n        rowKey: rowKey,\n        scrollbarAlwaysOn: scrollbarAlwaysOn,\n        scrollbarStartGap: 2,\n        scrollbarEndGap: vScrollbarSize,\n        useIsScrolling: useIsScrolling,\n        width: leftColumnsWidth,\n        getRowHeight: getRowHeight,\n        onScroll: onVerticalScroll\n      };\n      var rightColumnsWidth = unref(rightTableWidth);\n      var rightColumnsWidthWithScrollbar = rightColumnsWidth + vScrollbarSize;\n      var rightTableProps = {\n        cache: cache,\n        \"class\": ns.e(\"right\"),\n        columns: unref(fixedColumnsOnRight),\n        data: _data,\n        estimatedRowHeight: estimatedRowHeight,\n        rightTableRef: rightTableRef,\n        rowHeight: rowHeight,\n        bodyWidth: rightColumnsWidthWithScrollbar,\n        headerWidth: rightColumnsWidthWithScrollbar,\n        headerHeight: headerHeight,\n        height: _fixedTableHeight,\n        rowKey: rowKey,\n        scrollbarAlwaysOn: scrollbarAlwaysOn,\n        scrollbarStartGap: 2,\n        scrollbarEndGap: vScrollbarSize,\n        width: rightColumnsWidthWithScrollbar,\n        style: \"--\".concat(unref(ns.namespace), \"-table-scrollbar-size: \").concat(vScrollbarSize, \"px\"),\n        useIsScrolling: useIsScrolling,\n        getRowHeight: getRowHeight,\n        onScroll: onVerticalScroll\n      };\n      var _columnsStyles = unref(columnsStyles);\n      var tableRowProps = {\n        ns: ns,\n        depthMap: unref(depthMap),\n        columnsStyles: _columnsStyles,\n        expandColumnKey: expandColumnKey,\n        expandedRowKeys: unref(expandedRowKeys),\n        estimatedRowHeight: estimatedRowHeight,\n        hasFixedColumns: unref(hasFixedColumns),\n        rowProps: rowProps,\n        rowClass: rowClass,\n        rowKey: rowKey,\n        rowEventHandlers: rowEventHandlers,\n        onRowHovered: onRowHovered,\n        onRowExpanded: onRowExpanded,\n        onRowHeightChange: onRowHeightChange\n      };\n      var tableCellProps = {\n        cellProps: cellProps,\n        expandColumnKey: expandColumnKey,\n        indentSize: indentSize,\n        iconSize: iconSize,\n        rowKey: rowKey,\n        expandedRowKeys: unref(expandedRowKeys),\n        ns: ns\n      };\n      var tableHeaderProps = {\n        ns: ns,\n        headerClass: headerClass,\n        headerProps: headerProps,\n        columnsStyles: _columnsStyles\n      };\n      var tableHeaderCellProps = {\n        ns: ns,\n        sortBy: sortBy,\n        sortState: sortState,\n        headerCellProps: headerCellProps,\n        onColumnSorted: onColumnSorted\n      };\n      var tableSlots = {\n        row: function row(props2) {\n          return createVNode(Row, mergeProps(props2, tableRowProps), {\n            row: slots.row,\n            cell: function cell(props3) {\n              var _slot;\n              return slots.cell ? createVNode(Cell, mergeProps(props3, tableCellProps, {\n                \"style\": _columnsStyles[props3.column.key]\n              }), _isSlot(_slot = slots.cell(props3)) ? _slot : {\n                \"default\": function _default() {\n                  return [_slot];\n                }\n              }) : createVNode(Cell, mergeProps(props3, tableCellProps, {\n                \"style\": _columnsStyles[props3.column.key]\n              }), null);\n            }\n          });\n        },\n        header: function header(props2) {\n          return createVNode(Header, mergeProps(props2, tableHeaderProps), {\n            header: slots.header,\n            cell: function cell(props3) {\n              var _slot2;\n              return slots[\"header-cell\"] ? createVNode(HeaderCell, mergeProps(props3, tableHeaderCellProps, {\n                \"style\": _columnsStyles[props3.column.key]\n              }), _isSlot(_slot2 = slots[\"header-cell\"](props3)) ? _slot2 : {\n                \"default\": function _default() {\n                  return [_slot2];\n                }\n              }) : createVNode(HeaderCell, mergeProps(props3, tableHeaderCellProps, {\n                \"style\": _columnsStyles[props3.column.key]\n              }), null);\n            }\n          });\n        }\n      };\n      var rootKls = [props[\"class\"], ns.b(), ns.e(\"root\"), _defineProperty({}, ns.is(\"dynamic\"), unref(isDynamic))];\n      var footerProps = {\n        \"class\": ns.e(\"footer\"),\n        style: unref(footerHeight)\n      };\n      return createVNode(\"div\", {\n        \"class\": rootKls,\n        \"style\": unref(rootStyle)\n      }, [createVNode(MainTable, mainTableProps, _isSlot(tableSlots) ? tableSlots : {\n        \"default\": function _default() {\n          return [tableSlots];\n        }\n      }), createVNode(LeftTable, leftTableProps, _isSlot(tableSlots) ? tableSlots : {\n        \"default\": function _default() {\n          return [tableSlots];\n        }\n      }), createVNode(RightTable, rightTableProps, _isSlot(tableSlots) ? tableSlots : {\n        \"default\": function _default() {\n          return [tableSlots];\n        }\n      }), slots.footer && createVNode(Footer, footerProps, {\n        \"default\": slots.footer\n      }), unref(showEmpty) && createVNode(Empty, {\n        \"class\": ns.e(\"empty\"),\n        \"style\": unref(emptyStyle)\n      }, {\n        \"default\": slots.empty\n      }), slots.overlay && createVNode(Overlay, {\n        \"class\": ns.e(\"overlay\")\n      }, {\n        \"default\": slots.overlay\n      })]);\n    };\n  }\n});\nvar TableV2$1 = TableV2;\nexport { TableV2$1 as default };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}