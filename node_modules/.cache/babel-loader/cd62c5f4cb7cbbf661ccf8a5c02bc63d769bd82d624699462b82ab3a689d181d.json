{"ast":null,"code":"import _toConsumableArray from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport \"core-js/modules/es.array.index-of.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport { ref, watch, provide, computed } from 'vue';\nimport { collapseContextKey } from './constants.mjs';\nimport { castArray } from 'lodash-unified';\nimport { UPDATE_MODEL_EVENT, CHANGE_EVENT } from '../../../constants/event.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nvar useCollapse = function useCollapse(props, emit) {\n  var activeNames = ref(castArray(props.modelValue));\n  var setActiveNames = function setActiveNames(_activeNames) {\n    activeNames.value = _activeNames;\n    var value = props.accordion ? activeNames.value[0] : activeNames.value;\n    emit(UPDATE_MODEL_EVENT, value);\n    emit(CHANGE_EVENT, value);\n  };\n  var handleItemClick = function handleItemClick(name) {\n    if (props.accordion) {\n      setActiveNames([activeNames.value[0] === name ? \"\" : name]);\n    } else {\n      var _activeNames = _toConsumableArray(activeNames.value);\n      var index = _activeNames.indexOf(name);\n      if (index > -1) {\n        _activeNames.splice(index, 1);\n      } else {\n        _activeNames.push(name);\n      }\n      setActiveNames(_activeNames);\n    }\n  };\n  watch(function () {\n    return props.modelValue;\n  }, function () {\n    return activeNames.value = castArray(props.modelValue);\n  }, {\n    deep: true\n  });\n  provide(collapseContextKey, {\n    activeNames: activeNames,\n    handleItemClick: handleItemClick\n  });\n  return {\n    activeNames: activeNames,\n    setActiveNames: setActiveNames\n  };\n};\nvar useCollapseDOM = function useCollapseDOM() {\n  var ns = useNamespace(\"collapse\");\n  var rootKls = computed(function () {\n    return ns.b();\n  });\n  return {\n    rootKls: rootKls\n  };\n};\nexport { useCollapse, useCollapseDOM };","map":{"version":3,"names":["useCollapse","props","emit","activeNames","ref","castArray","modelValue","setActiveNames","_activeNames","value","accordion","UPDATE_MODEL_EVENT","CHANGE_EVENT","handleItemClick","name","_toConsumableArray","index","indexOf","splice","push","watch","deep","provide","collapseContextKey","useCollapseDOM","ns","useNamespace","rootKls","computed","b"],"sources":["../../../../../../packages/components/collapse/src/use-collapse.ts"],"sourcesContent":["import { computed, provide, ref, watch } from 'vue'\nimport { ensureArray } from '@element-plus/utils'\nimport { useNamespace } from '@element-plus/hooks'\nimport { CHANGE_EVENT, UPDATE_MODEL_EVENT } from '@element-plus/constants'\nimport { collapseContextKey } from './constants'\n\nimport type { SetupContext } from 'vue'\nimport type {\n  CollapseActiveName,\n  CollapseEmits,\n  CollapseProps,\n} from './collapse'\n\nexport const useCollapse = (\n  props: CollapseProps,\n  emit: SetupContext<CollapseEmits>['emit']\n) => {\n  const activeNames = ref(ensureArray(props.modelValue))\n\n  const setActiveNames = (_activeNames: CollapseActiveName[]) => {\n    activeNames.value = _activeNames\n    const value = props.accordion ? activeNames.value[0] : activeNames.value\n    emit(UPDATE_MODEL_EVENT, value)\n    emit(CHANGE_EVENT, value)\n  }\n\n  const handleItemClick = (name: CollapseActiveName) => {\n    if (props.accordion) {\n      setActiveNames([activeNames.value[0] === name ? '' : name])\n    } else {\n      const _activeNames = [...activeNames.value]\n      const index = _activeNames.indexOf(name)\n\n      if (index > -1) {\n        _activeNames.splice(index, 1)\n      } else {\n        _activeNames.push(name)\n      }\n      setActiveNames(_activeNames)\n    }\n  }\n\n  watch(\n    () => props.modelValue,\n    () => (activeNames.value = ensureArray(props.modelValue)),\n    { deep: true }\n  )\n\n  provide(collapseContextKey, {\n    activeNames,\n    handleItemClick,\n  })\n  return {\n    activeNames,\n    setActiveNames,\n  }\n}\n\nexport const useCollapseDOM = () => {\n  const ns = useNamespace('collapse')\n\n  const rootKls = computed(() => ns.b())\n  return {\n    rootKls,\n  }\n}\n"],"mappings":";;;;;;;;;AAKY,IAACA,WAAW,GAAG,SAAdA,WAAWA,CAAIC,KAAK,EAAEC,IAAI,EAAK;EAC1C,IAAMC,WAAW,GAAGC,GAAG,CAACC,SAAW,CAACJ,KAAK,CAACK,UAAU,CAAC,CAAC;EACtD,IAAMC,cAAc,GAAG,SAAjBA,cAAcA,CAAIC,YAAY,EAAK;IACvCL,WAAW,CAACM,KAAK,GAAGD,YAAY;IAChC,IAAMC,KAAK,GAAGR,KAAK,CAACS,SAAS,GAAGP,WAAW,CAACM,KAAK,CAAC,CAAC,CAAC,GAAGN,WAAW,CAACM,KAAK;IACxEP,IAAI,CAACS,kBAAkB,EAAEF,KAAK,CAAC;IAC/BP,IAAI,CAACU,YAAY,EAAEH,KAAK,CAAC;EAC7B,CAAG;EACD,IAAMI,eAAe,GAAG,SAAlBA,eAAeA,CAAIC,IAAI,EAAK;IAChC,IAAIb,KAAK,CAACS,SAAS,EAAE;MACnBH,cAAc,CAAC,CAACJ,WAAW,CAACM,KAAK,CAAC,CAAC,CAAC,KAAKK,IAAI,GAAG,EAAE,GAAGA,IAAI,CAAC,CAAC;IACjE,CAAK,MAAM;MACL,IAAMN,YAAY,GAAAO,kBAAA,CAAOZ,WAAW,CAACM,KAAK,CAAC;MAC3C,IAAMO,KAAK,GAAGR,YAAY,CAACS,OAAO,CAACH,IAAI,CAAC;MACxC,IAAIE,KAAK,GAAG,CAAC,CAAC,EAAE;QACdR,YAAY,CAACU,MAAM,CAACF,KAAK,EAAE,CAAC,CAAC;MACrC,CAAO,MAAM;QACLR,YAAY,CAACW,IAAI,CAACL,IAAI,CAAC;MAC/B;MACMP,cAAc,CAACC,YAAY,CAAC;IAClC;EACA,CAAG;EACDY,KAAK,CAAC;IAAA,OAAMnB,KAAK,CAACK,UAAU;EAAA,GAAE;IAAA,OAAMH,WAAW,CAACM,KAAK,GAAGJ,SAAW,CAACJ,KAAK,CAACK,UAAU,CAAC;EAAA,GAAE;IAAEe,IAAI,EAAE;EAAI,CAAE,CAAC;EACtGC,OAAO,CAACC,kBAAkB,EAAE;IAC1BpB,WAAW,EAAXA,WAAW;IACXU,eAAe,EAAfA;EACJ,CAAG,CAAC;EACF,OAAO;IACLV,WAAW,EAAXA,WAAW;IACXI,cAAc,EAAdA;EACJ,CAAG;AACH;AACY,IAACiB,cAAc,GAAG,SAAjBA,cAAcA,CAAA,EAAS;EAClC,IAAMC,EAAE,GAAGC,YAAY,CAAC,UAAU,CAAC;EACnC,IAAMC,OAAO,GAAGC,QAAQ,CAAC;IAAA,OAAMH,EAAE,CAACI,CAAC,EAAE;EAAA,EAAC;EACtC,OAAO;IACLF,OAAO,EAAPA;EACJ,CAAG;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}