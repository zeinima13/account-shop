{"ast":null,"code":"import _objectSpread from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { defineComponent, computed, openBlock, createElementBlock, normalizeClass, unref, renderSlot } from 'vue';\nimport { checkTagProps, checkTagEmits } from './check-tag.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { CHANGE_EVENT } from '../../../constants/event.mjs';\nvar __default__ = defineComponent({\n  name: \"ElCheckTag\"\n});\nvar _sfc_main = /* @__PURE__ */defineComponent(_objectSpread(_objectSpread({}, __default__), {}, {\n  props: checkTagProps,\n  emits: checkTagEmits,\n  setup: function setup(__props, _ref) {\n    var emit = _ref.emit;\n    var props = __props;\n    var ns = useNamespace(\"check-tag\");\n    var isDisabled = computed(function () {\n      return props.disabled;\n    });\n    var containerKls = computed(function () {\n      return [ns.b(), ns.is(\"checked\", props.checked), ns.is(\"disabled\", isDisabled.value), ns.m(props.type || \"primary\")];\n    });\n    var handleChange = function handleChange() {\n      if (isDisabled.value) return;\n      var checked = !props.checked;\n      emit(CHANGE_EVENT, checked);\n      emit(\"update:checked\", checked);\n    };\n    return function (_ctx, _cache) {\n      return openBlock(), createElementBlock(\"span\", {\n        \"class\": normalizeClass(unref(containerKls)),\n        onClick: handleChange\n      }, [renderSlot(_ctx.$slots, \"default\")], 2);\n    };\n  }\n}));\nvar CheckTag = /* @__PURE__ */_export_sfc(_sfc_main, [[\"__file\", \"check-tag.vue\"]]);\nexport { CheckTag as default };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}