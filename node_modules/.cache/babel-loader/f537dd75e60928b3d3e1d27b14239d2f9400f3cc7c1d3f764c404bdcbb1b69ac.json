{"ast":null,"code":"import \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.reverse.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport { defineComponent, inject, computed, openBlock, createElementBlock, normalizeClass, normalizeStyle, withModifiers, renderSlot, unref } from 'vue';\nimport { DROPDOWN_INJECTION_KEY } from './tokens.mjs';\nimport { dropdownMenuProps, DROPDOWN_COLLECTION_INJECTION_KEY as COLLECTION_INJECTION_KEY, FIRST_LAST_KEYS, LAST_KEYS } from './dropdown.mjs';\nimport { useDropdown } from './useDropdown.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { ROVING_FOCUS_GROUP_INJECTION_KEY } from '../../roving-focus-group/src/tokens.mjs';\nimport { ROVING_FOCUS_COLLECTION_INJECTION_KEY as COLLECTION_INJECTION_KEY$1 } from '../../roving-focus-group/src/roving-focus-group.mjs';\nimport { focusFirst } from '../../roving-focus-group/src/utils.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { FOCUS_TRAP_INJECTION_KEY } from '../../focus-trap/src/tokens.mjs';\nimport { composeRefs } from '../../../utils/vue/refs.mjs';\nimport { composeEventHandlers } from '../../../utils/dom/event.mjs';\nimport { EVENT_CODE } from '../../../constants/aria.mjs';\nvar _sfc_main = defineComponent({\n  name: \"ElDropdownMenu\",\n  props: dropdownMenuProps,\n  setup: function setup(props) {\n    var ns = useNamespace(\"dropdown\");\n    var _useDropdown = useDropdown(),\n      _elDropdownSize = _useDropdown._elDropdownSize;\n    var size = _elDropdownSize.value;\n    var _inject = inject(FOCUS_TRAP_INJECTION_KEY, void 0),\n      focusTrapRef = _inject.focusTrapRef,\n      onKeydown = _inject.onKeydown;\n    var _inject2 = inject(DROPDOWN_INJECTION_KEY, void 0),\n      contentRef = _inject2.contentRef,\n      role = _inject2.role,\n      triggerId = _inject2.triggerId;\n    var _inject3 = inject(COLLECTION_INJECTION_KEY, void 0),\n      dropdownCollectionRef = _inject3.collectionRef,\n      getItems = _inject3.getItems;\n    var _inject4 = inject(ROVING_FOCUS_GROUP_INJECTION_KEY, void 0),\n      rovingFocusGroupRef = _inject4.rovingFocusGroupRef,\n      rovingFocusGroupRootStyle = _inject4.rovingFocusGroupRootStyle,\n      tabIndex = _inject4.tabIndex,\n      onBlur = _inject4.onBlur,\n      onFocus = _inject4.onFocus,\n      onMousedown = _inject4.onMousedown;\n    var _inject5 = inject(COLLECTION_INJECTION_KEY$1, void 0),\n      rovingFocusGroupCollectionRef = _inject5.collectionRef;\n    var dropdownKls = computed(function () {\n      return [ns.b(\"menu\"), ns.bm(\"menu\", size == null ? void 0 : size.value)];\n    });\n    var dropdownListWrapperRef = composeRefs(contentRef, dropdownCollectionRef, focusTrapRef, rovingFocusGroupRef, rovingFocusGroupCollectionRef);\n    var composedKeydown = composeEventHandlers(function (e) {\n      var _a;\n      (_a = props.onKeydown) == null ? void 0 : _a.call(props, e);\n    }, function (e) {\n      var currentTarget = e.currentTarget,\n        code = e.code,\n        target = e.target;\n      currentTarget.contains(target);\n      if (EVENT_CODE.tab === code) {\n        e.stopImmediatePropagation();\n      }\n      e.preventDefault();\n      if (target !== unref(contentRef) || !FIRST_LAST_KEYS.includes(code)) return;\n      var items = getItems().filter(function (item) {\n        return !item.disabled;\n      });\n      var targets = items.map(function (item) {\n        return item.ref;\n      });\n      if (LAST_KEYS.includes(code)) {\n        targets.reverse();\n      }\n      focusFirst(targets);\n    });\n    var handleKeydown = function handleKeydown(e) {\n      composedKeydown(e);\n      onKeydown(e);\n    };\n    return {\n      size: size,\n      rovingFocusGroupRootStyle: rovingFocusGroupRootStyle,\n      tabIndex: tabIndex,\n      dropdownKls: dropdownKls,\n      role: role,\n      triggerId: triggerId,\n      dropdownListWrapperRef: dropdownListWrapperRef,\n      handleKeydown: handleKeydown,\n      onBlur: onBlur,\n      onFocus: onFocus,\n      onMousedown: onMousedown\n    };\n  }\n});\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  return openBlock(), createElementBlock(\"ul\", {\n    ref: _ctx.dropdownListWrapperRef,\n    \"class\": normalizeClass(_ctx.dropdownKls),\n    style: normalizeStyle(_ctx.rovingFocusGroupRootStyle),\n    tabindex: -1,\n    role: _ctx.role,\n    \"aria-labelledby\": _ctx.triggerId,\n    onBlur: _ctx.onBlur,\n    onFocus: _ctx.onFocus,\n    onKeydown: withModifiers(_ctx.handleKeydown, [\"self\"]),\n    onMousedown: withModifiers(_ctx.onMousedown, [\"self\"])\n  }, [renderSlot(_ctx.$slots, \"default\")], 46, [\"role\", \"aria-labelledby\", \"onBlur\", \"onFocus\", \"onKeydown\", \"onMousedown\"]);\n}\nvar DropdownMenu = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render], [\"__file\", \"dropdown-menu.vue\"]]);\nexport { DropdownMenu as default };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}