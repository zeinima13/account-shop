{"ast":null,"code":"import \"core-js/modules/es.function.name.js\";\nimport { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass, createTextVNode as _createTextVNode } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"payment-container\"\n};\nvar _hoisted_2 = {\n  \"class\": \"payment-card\"\n};\nvar _hoisted_3 = {\n  \"class\": \"order-info\"\n};\nvar _hoisted_4 = {\n  \"class\": \"success-icon\"\n};\nvar _hoisted_5 = {\n  \"class\": \"order-details\"\n};\nvar _hoisted_6 = {\n  \"class\": \"order-item\"\n};\nvar _hoisted_7 = {\n  \"class\": \"order-item\"\n};\nvar _hoisted_8 = {\n  \"class\": \"payment-methods\"\n};\nvar _hoisted_9 = {\n  \"class\": \"wallet-list\"\n};\nvar _hoisted_10 = [\"onClick\"];\nvar _hoisted_11 = [\"src\", \"alt\"];\nvar _hoisted_12 = {\n  \"class\": \"wallet-info\"\n};\nvar _hoisted_13 = {\n  \"class\": \"wallet-name\"\n};\nvar _hoisted_14 = {\n  \"class\": \"wallet-type\"\n};\nvar _hoisted_15 = {\n  \"class\": \"wallet-status\"\n};\nvar _hoisted_16 = {\n  \"class\": \"payment-action\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_CircleCheckFilled = _resolveComponent(\"CircleCheckFilled\");\n  var _component_el_icon = _resolveComponent(\"el-icon\");\n  var _component_el_button = _resolveComponent(\"el-button\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createVNode(_component_el_icon, null, {\n    \"default\": _withCtx(function () {\n      return [_createVNode(_component_CircleCheckFilled)];\n    }),\n    _: 1 /* STABLE */\n  })]), _createElementVNode(\"div\", _hoisted_5, [_cache[2] || (_cache[2] = _createElementVNode(\"div\", {\n    \"class\": \"order-title\"\n  }, \"订单信息\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_6, [_cache[0] || (_cache[0] = _createElementVNode(\"span\", null, \"订单号：\", -1 /* HOISTED */)), _createElementVNode(\"span\", null, _toDisplayString($setup.orderId), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_7, [_cache[1] || (_cache[1] = _createElementVNode(\"span\", null, \"付款金额：\", -1 /* HOISTED */)), _createElementVNode(\"span\", null, _toDisplayString($setup.amount) + \" USDT\", 1 /* TEXT */)]), _cache[3] || (_cache[3] = _createElementVNode(\"div\", {\n    \"class\": \"warning-text\"\n  }, \" 由于第三方充值限制规则，目前仅支持USDT充值，请耐心等待其他支付方式的开放。 \", -1 /* HOISTED */))])]), _createElementVNode(\"div\", _hoisted_8, [_cache[4] || (_cache[4] = _createElementVNode(\"div\", {\n    \"class\": \"section-title\"\n  }, \"USDT - 请选择您的支付钱包\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_9, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.wallets, function (wallet) {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: wallet.id,\n      \"class\": _normalizeClass([\"wallet-item\", {\n        active: $setup.selectedWallet === wallet.id\n      }]),\n      onClick: function onClick($event) {\n        return $setup.selectWallet(wallet);\n      }\n    }, [_createElementVNode(\"img\", {\n      src: wallet.icon,\n      alt: wallet.name,\n      \"class\": \"wallet-icon\"\n    }, null, 8 /* PROPS */, _hoisted_11), _createElementVNode(\"div\", _hoisted_12, [_createElementVNode(\"div\", _hoisted_13, _toDisplayString(wallet.name), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_14, _toDisplayString(wallet.type), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_15, _toDisplayString(wallet.status), 1 /* TEXT */)])], 10 /* CLASS, PROPS */, _hoisted_10);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createElementVNode(\"div\", _hoisted_16, [_createVNode(_component_el_button, {\n    type: \"primary\",\n    \"class\": \"pay-button\",\n    onClick: $setup.confirmPayment\n  }, {\n    \"default\": _withCtx(function () {\n      return _cache[5] || (_cache[5] = [_createTextVNode(\" 已完成支付 \")]);\n    }),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onClick\"])])])]);\n}","map":{"version":3,"names":["_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_hoisted_4","_createVNode","_component_el_icon","_withCtx","_component_CircleCheckFilled","_","_hoisted_5","_hoisted_6","_toDisplayString","$setup","orderId","_hoisted_7","amount","_hoisted_8","_hoisted_9","_Fragment","_renderList","wallets","wallet","key","id","_normalizeClass","active","selectedWallet","onClick","$event","selectWallet","src","icon","alt","name","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","type","_hoisted_15","status","_hoisted_10","_hoisted_16","_component_el_button","confirmPayment","_cache","_createTextVNode"],"sources":["C:\\Users\\ASUS\\CascadeProjects\\account-shop\\src\\views\\Payment.vue"],"sourcesContent":["<template>\n  <div class=\"payment-container\">\n    <div class=\"payment-card\">\n      <div class=\"order-info\">\n        <div class=\"success-icon\">\n          <el-icon><CircleCheckFilled /></el-icon>\n        </div>\n        <div class=\"order-details\">\n          <div class=\"order-title\">订单信息</div>\n          <div class=\"order-item\">\n            <span>订单号：</span>\n            <span>{{ orderId }}</span>\n          </div>\n          <div class=\"order-item\">\n            <span>付款金额：</span>\n            <span>{{ amount }} USDT</span>\n          </div>\n          <div class=\"warning-text\">\n            由于第三方充值限制规则，目前仅支持USDT充值，请耐心等待其他支付方式的开放。\n          </div>\n        </div>\n      </div>\n\n      <div class=\"payment-methods\">\n        <div class=\"section-title\">USDT - 请选择您的支付钱包</div>\n        <div class=\"wallet-list\">\n          <div v-for=\"wallet in wallets\" \n               :key=\"wallet.id\" \n               class=\"wallet-item\"\n               :class=\"{ active: selectedWallet === wallet.id }\"\n               @click=\"selectWallet(wallet)\">\n            <img :src=\"wallet.icon\" :alt=\"wallet.name\" class=\"wallet-icon\">\n            <div class=\"wallet-info\">\n              <div class=\"wallet-name\">{{ wallet.name }}</div>\n              <div class=\"wallet-type\">{{ wallet.type }}</div>\n              <div class=\"wallet-status\">{{ wallet.status }}</div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"payment-action\">\n        <el-button type=\"primary\" class=\"pay-button\" @click=\"confirmPayment\">\n          已完成支付\n        </el-button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, onMounted } from 'vue'\nimport { useRoute, useRouter } from 'vue-router'\nimport { ElMessage } from 'element-plus'\nimport { CircleCheckFilled } from '@element-plus/icons-vue'\n\nexport default {\n  name: 'Payment',\n  components: {\n    CircleCheckFilled\n  },\n  setup() {\n    const route = useRoute()\n    const router = useRouter()\n    const orderId = ref('')\n    const amount = ref(0)\n    const selectedWallet = ref(null)\n\n    const wallets = ref([\n      {\n        id: 1,\n        name: 'imToken',\n        type: 'TRC20 / ERC20 / BEP20',\n        status: '【快速支付】点击充充值，请手机浏览访问该网站',\n        icon: '/wallet-icons/imtoken.png'\n      },\n      {\n        id: 2,\n        name: 'TokenPocket',\n        type: 'TRC20 / ERC20 / BEP20',\n        status: '【快速支付】点击充充值，请手机浏览访问该网站',\n        icon: '/wallet-icons/tokenpocket.png'\n      },\n      {\n        id: 3,\n        name: '欧易web3钱包',\n        type: 'TRC20 / ERC20',\n        status: '请使用欧易web3钱包，交易确认后系统充值到账',\n        icon: '/wallet-icons/okx.png'\n      }\n    ])\n\n    onMounted(() => {\n      orderId.value = 'BL' + Date.now()\n      amount.value = route.query.amount || 0\n    })\n\n    const selectWallet = (wallet) => {\n      selectedWallet.value = wallet.id\n    }\n\n    const confirmPayment = () => {\n      if (!selectedWallet.value) {\n        ElMessage.error('请选择支付钱包')\n        return\n      }\n      ElMessage.success('支付确认成功！')\n      router.push('/')\n    }\n\n    return {\n      orderId,\n      amount,\n      wallets,\n      selectedWallet,\n      selectWallet,\n      confirmPayment\n    }\n  }\n}\n</script>\n\n<style scoped>\n.payment-container {\n  min-height: 100vh;\n  background: #f5f7fa;\n  padding: 20px;\n}\n\n.payment-card {\n  max-width: 800px;\n  margin: 0 auto;\n  background: white;\n  border-radius: 8px;\n  box-shadow: 0 2px 12px 0 rgba(0,0,0,0.1);\n}\n\n.order-info {\n  padding: 20px;\n  background: #f0f9eb;\n  border-radius: 8px 8px 0 0;\n  display: flex;\n  gap: 20px;\n}\n\n.success-icon {\n  color: #67c23a;\n  font-size: 24px;\n}\n\n.order-details {\n  flex: 1;\n}\n\n.order-title {\n  font-size: 18px;\n  font-weight: bold;\n  margin-bottom: 15px;\n}\n\n.order-item {\n  margin: 10px 0;\n  color: #666;\n}\n\n.warning-text {\n  color: #e6a23c;\n  font-size: 14px;\n  margin-top: 15px;\n}\n\n.payment-methods {\n  padding: 20px;\n}\n\n.section-title {\n  font-size: 16px;\n  font-weight: bold;\n  margin-bottom: 20px;\n  color: #303133;\n}\n\n.wallet-list {\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n}\n\n.wallet-item {\n  display: flex;\n  align-items: center;\n  gap: 15px;\n  padding: 15px;\n  border: 1px solid #ebeef5;\n  border-radius: 4px;\n  cursor: pointer;\n  transition: all 0.3s;\n}\n\n.wallet-item:hover {\n  border-color: #409eff;\n}\n\n.wallet-item.active {\n  border-color: #409eff;\n  background: #ecf5ff;\n}\n\n.wallet-icon {\n  width: 40px;\n  height: 40px;\n  object-fit: contain;\n}\n\n.wallet-info {\n  flex: 1;\n}\n\n.wallet-name {\n  font-weight: bold;\n  margin-bottom: 5px;\n}\n\n.wallet-type {\n  color: #666;\n  font-size: 14px;\n  margin-bottom: 5px;\n}\n\n.wallet-status {\n  color: #409eff;\n  font-size: 12px;\n}\n\n.payment-action {\n  padding: 20px;\n  text-align: center;\n  border-top: 1px solid #ebeef5;\n}\n\n.pay-button {\n  width: 200px;\n  height: 40px;\n}\n</style>\n"],"mappings":";;;EACO,SAAM;AAAmB;;EACvB,SAAM;AAAc;;EAClB,SAAM;AAAY;;EAChB,SAAM;AAAc;;EAGpB,SAAM;AAAe;;EAEnB,SAAM;AAAY;;EAIlB,SAAM;AAAY;;EAUtB,SAAM;AAAiB;;EAErB,SAAM;AAAa;kBAzBhC;kBAAA;;EAgCiB,SAAM;AAAa;;EACjB,SAAM;AAAa;;EACnB,SAAM;AAAa;;EACnB,SAAM;AAAe;;EAM7B,SAAM;AAAgB;;;;;uBAxC/BA,mBAAA,CA8CM,OA9CNC,UA8CM,GA7CJC,mBAAA,CA4CM,OA5CNC,UA4CM,GA3CJD,mBAAA,CAkBM,OAlBNE,UAkBM,GAjBJF,mBAAA,CAEM,OAFNG,UAEM,GADJC,YAAA,CAAwCC,kBAAA;IALlD,WAAAC,QAAA,CAKmB;MAAA,OAAqB,CAArBF,YAAA,CAAqBG,4BAAA,E;;IALxCC,CAAA;QAOQR,mBAAA,CAaM,OAbNS,UAaM,G,0BAZJT,mBAAA,CAAmC;IAA9B,SAAM;EAAa,GAAC,MAAI,sBAC7BA,mBAAA,CAGM,OAHNU,UAGM,G,0BAFJV,mBAAA,CAAiB,cAAX,MAAI,sBACVA,mBAAA,CAA0B,cAAAW,gBAAA,CAAjBC,MAAA,CAAAC,OAAO,iB,GAElBb,mBAAA,CAGM,OAHNc,UAGM,G,0BAFJd,mBAAA,CAAkB,cAAZ,OAAK,sBACXA,mBAAA,CAA8B,cAAAW,gBAAA,CAArBC,MAAA,CAAAG,MAAM,IAAG,OAAK,gB,6BAEzBf,mBAAA,CAEM;IAFD,SAAM;EAAc,GAAC,2CAE1B,qB,KAIJA,mBAAA,CAgBM,OAhBNgB,UAgBM,G,0BAfJhB,mBAAA,CAAiD;IAA5C,SAAM;EAAe,GAAC,kBAAgB,sBAC3CA,mBAAA,CAaM,OAbNiB,UAaM,I,kBAZJnB,mBAAA,CAWMoB,SAAA,QArChBC,WAAA,CA0BgCP,MAAA,CAAAQ,OAAO,EA1BvC,UA0BsBC,MAAM;yBAAlBvB,mBAAA,CAWM;MAVAwB,GAAG,EAAED,MAAM,CAACE,EAAE;MACf,SA5BfC,eAAA,EA4BqB,aAAa;QAAAC,MAAA,EACDb,MAAA,CAAAc,cAAc,KAAKL,MAAM,CAACE;MAAE;MAC7CI,OAAK,WAALA,OAAKA,CAAAC,MAAA;QAAA,OAAEhB,MAAA,CAAAiB,YAAY,CAACR,MAAM;MAAA;QAC9BrB,mBAAA,CAA+D;MAAzD8B,GAAG,EAAET,MAAM,CAACU,IAAI;MAAGC,GAAG,EAAEX,MAAM,CAACY,IAAI;MAAE,SAAM;4BA/B7DC,WAAA,GAgCYlC,mBAAA,CAIM,OAJNmC,WAIM,GAHJnC,mBAAA,CAAgD,OAAhDoC,WAAgD,EAAAzB,gBAAA,CAApBU,MAAM,CAACY,IAAI,kBACvCjC,mBAAA,CAAgD,OAAhDqC,WAAgD,EAAA1B,gBAAA,CAApBU,MAAM,CAACiB,IAAI,kBACvCtC,mBAAA,CAAoD,OAApDuC,WAAoD,EAAA5B,gBAAA,CAAtBU,MAAM,CAACmB,MAAM,iB,2BAnCzDC,WAAA;sCAyCMzC,mBAAA,CAIM,OAJN0C,WAIM,GAHJtC,YAAA,CAEYuC,oBAAA;IAFDL,IAAI,EAAC,SAAS;IAAC,SAAM,YAAY;IAAEX,OAAK,EAAEf,MAAA,CAAAgC;;IA1C7D,WAAAtC,QAAA,CA0C6E;MAAA,OAErEuC,MAAA,QAAAA,MAAA,OA5CRC,gBAAA,CA0C6E,SAErE,E;;IA5CRtC,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}