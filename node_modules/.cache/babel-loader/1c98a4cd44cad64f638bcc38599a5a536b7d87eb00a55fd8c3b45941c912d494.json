{"ast":null,"code":"import \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.number.parse-float.js\";\nimport { isFirefox } from '../../../utils/browser.mjs';\nimport { isNumber } from '../../../utils/types.mjs';\nvar hiddenTextarea = void 0;\nvar HIDDEN_STYLE = \"\\n  height:0 !important;\\n  visibility:hidden !important;\\n  \".concat(isFirefox() ? \"\" : \"overflow:hidden !important;\", \"\\n  position:absolute !important;\\n  z-index:-1000 !important;\\n  top:0 !important;\\n  right:0 !important;\\n\");\nvar CONTEXT_STYLE = [\"letter-spacing\", \"line-height\", \"padding-top\", \"padding-bottom\", \"font-family\", \"font-weight\", \"font-size\", \"text-rendering\", \"text-transform\", \"width\", \"text-indent\", \"padding-left\", \"padding-right\", \"border-width\", \"box-sizing\"];\nfunction calculateNodeStyling(targetElement) {\n  var style = window.getComputedStyle(targetElement);\n  var boxSizing = style.getPropertyValue(\"box-sizing\");\n  var paddingSize = Number.parseFloat(style.getPropertyValue(\"padding-bottom\")) + Number.parseFloat(style.getPropertyValue(\"padding-top\"));\n  var borderSize = Number.parseFloat(style.getPropertyValue(\"border-bottom-width\")) + Number.parseFloat(style.getPropertyValue(\"border-top-width\"));\n  var contextStyle = CONTEXT_STYLE.map(function (name) {\n    return \"\".concat(name, \":\").concat(style.getPropertyValue(name));\n  }).join(\";\");\n  return {\n    contextStyle: contextStyle,\n    paddingSize: paddingSize,\n    borderSize: borderSize,\n    boxSizing: boxSizing\n  };\n}\nfunction calcTextareaHeight(targetElement) {\n  var minRows = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  var maxRows = arguments.length > 2 ? arguments[2] : undefined;\n  var _a;\n  if (!hiddenTextarea) {\n    hiddenTextarea = document.createElement(\"textarea\");\n    document.body.appendChild(hiddenTextarea);\n  }\n  var _calculateNodeStyling = calculateNodeStyling(targetElement),\n    paddingSize = _calculateNodeStyling.paddingSize,\n    borderSize = _calculateNodeStyling.borderSize,\n    boxSizing = _calculateNodeStyling.boxSizing,\n    contextStyle = _calculateNodeStyling.contextStyle;\n  hiddenTextarea.setAttribute(\"style\", \"\".concat(contextStyle, \";\").concat(HIDDEN_STYLE));\n  hiddenTextarea.value = targetElement.value || targetElement.placeholder || \"\";\n  var height = hiddenTextarea.scrollHeight;\n  var result = {};\n  if (boxSizing === \"border-box\") {\n    height = height + borderSize;\n  } else if (boxSizing === \"content-box\") {\n    height = height - paddingSize;\n  }\n  hiddenTextarea.value = \"\";\n  var singleRowHeight = hiddenTextarea.scrollHeight - paddingSize;\n  if (isNumber(minRows)) {\n    var minHeight = singleRowHeight * minRows;\n    if (boxSizing === \"border-box\") {\n      minHeight = minHeight + paddingSize + borderSize;\n    }\n    height = Math.max(minHeight, height);\n    result.minHeight = \"\".concat(minHeight, \"px\");\n  }\n  if (isNumber(maxRows)) {\n    var maxHeight = singleRowHeight * maxRows;\n    if (boxSizing === \"border-box\") {\n      maxHeight = maxHeight + paddingSize + borderSize;\n    }\n    height = Math.min(maxHeight, height);\n  }\n  result.height = \"\".concat(height, \"px\");\n  (_a = hiddenTextarea.parentNode) == null ? void 0 : _a.removeChild(hiddenTextarea);\n  hiddenTextarea = void 0;\n  return result;\n}\nexport { calcTextareaHeight };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}