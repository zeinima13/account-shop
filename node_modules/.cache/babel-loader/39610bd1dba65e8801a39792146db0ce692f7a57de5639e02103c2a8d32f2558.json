{"ast":null,"code":"import \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport { ref, onMounted, onUnmounted } from 'vue';\nfunction useKeyRender(table) {\n  var observer = ref();\n  var initWatchDom = function initWatchDom() {\n    var el = table.vnode.el;\n    var columnsWrapper = el.querySelector(\".hidden-columns\");\n    var config = {\n      childList: true,\n      subtree: true\n    };\n    var updateOrderFns = table.store.states.updateOrderFns;\n    observer.value = new MutationObserver(function () {\n      updateOrderFns.forEach(function (fn) {\n        return fn();\n      });\n    });\n    observer.value.observe(columnsWrapper, config);\n  };\n  onMounted(function () {\n    initWatchDom();\n  });\n  onUnmounted(function () {\n    var _a;\n    (_a = observer.value) == null ? void 0 : _a.disconnect();\n  });\n}\nexport { useKeyRender as default };","map":{"version":3,"names":["useKeyRender","table","observer","ref","initWatchDom","el","vnode","columnsWrapper","querySelector","config","childList","subtree","updateOrderFns","store","states","value","MutationObserver","forEach","fn","observe","onMounted","onUnmounted","_a","disconnect"],"sources":["../../../../../../../packages/components/table/src/table/key-render-helper.ts"],"sourcesContent":["import { onMounted, onUnmounted, ref } from 'vue'\nimport type { Table } from './defaults'\n\nexport default function useKeyRender(table: Table<[]>) {\n  const observer = ref<MutationObserver>()\n\n  const initWatchDom = () => {\n    const el = table.vnode.el\n    const columnsWrapper = (el as HTMLElement).querySelector('.hidden-columns')\n    const config = { childList: true, subtree: true }\n    const updateOrderFns = table.store.states.updateOrderFns\n    observer.value = new MutationObserver(() => {\n      updateOrderFns.forEach((fn: () => void) => fn())\n    })\n\n    observer.value.observe(columnsWrapper!, config)\n  }\n\n  onMounted(() => {\n    // fix https://github.com/element-plus/element-plus/issues/8528\n    initWatchDom()\n  })\n\n  onUnmounted(() => {\n    observer.value?.disconnect()\n  })\n}\n"],"mappings":";;;;;;AACe,SAASA,YAAYA,CAACC,KAAK,EAAE;EAC1C,IAAMC,QAAQ,GAAGC,GAAG,EAAE;EACtB,IAAMC,YAAY,GAAG,SAAfA,YAAYA,CAAA,EAAS;IACzB,IAAMC,EAAE,GAAGJ,KAAK,CAACK,KAAK,CAACD,EAAE;IACzB,IAAME,cAAc,GAAGF,EAAE,CAACG,aAAa,CAAC,iBAAiB,CAAC;IAC1D,IAAMC,MAAM,GAAG;MAAEC,SAAS,EAAE,IAAI;MAAEC,OAAO,EAAE;IAAI,CAAE;IACjD,IAAMC,cAAc,GAAGX,KAAK,CAACY,KAAK,CAACC,MAAM,CAACF,cAAc;IACxDV,QAAQ,CAACa,KAAK,GAAG,IAAIC,gBAAgB,CAAC,YAAM;MAC1CJ,cAAc,CAACK,OAAO,CAAC,UAACC,EAAE;QAAA,OAAKA,EAAE,EAAE;MAAA,EAAC;IAC1C,CAAK,CAAC;IACFhB,QAAQ,CAACa,KAAK,CAACI,OAAO,CAACZ,cAAc,EAAEE,MAAM,CAAC;EAClD,CAAG;EACDW,SAAS,CAAC,YAAM;IACdhB,YAAY,EAAE;EAClB,CAAG,CAAC;EACFiB,WAAW,CAAC,YAAM;IAChB,IAAIC,EAAE;IACN,CAACA,EAAE,GAAGpB,QAAQ,CAACa,KAAK,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGO,EAAE,CAACC,UAAU,EAAE;EAC5D,CAAG,CAAC;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}