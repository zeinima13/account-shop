{"ast":null,"code":"import _toConsumableArray from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _objectSpread from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.array.index-of.js\";\nimport \"core-js/modules/es.array.sort.js\";\nimport \"core-js/modules/es.map.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport { ref, provide, inject, onMounted, unref, onBeforeUnmount } from 'vue';\nimport Collection from './collection2.mjs';\nimport CollectionItem from './collection-item.mjs';\nvar COLLECTION_ITEM_SIGN = \"data-el-collection-item\";\nvar createCollectionWithScope = function createCollectionWithScope(name) {\n  var COLLECTION_NAME = \"El\".concat(name, \"Collection\");\n  var COLLECTION_ITEM_NAME = \"\".concat(COLLECTION_NAME, \"Item\");\n  var COLLECTION_INJECTION_KEY = Symbol(COLLECTION_NAME);\n  var COLLECTION_ITEM_INJECTION_KEY = Symbol(COLLECTION_ITEM_NAME);\n  var ElCollection = _objectSpread(_objectSpread({}, Collection), {}, {\n    name: COLLECTION_NAME,\n    setup: function setup() {\n      var collectionRef = ref(null);\n      var itemMap = /* @__PURE__ */new Map();\n      var getItems = function getItems() {\n        var collectionEl = unref(collectionRef);\n        if (!collectionEl) return [];\n        var orderedNodes = Array.from(collectionEl.querySelectorAll(\"[\".concat(COLLECTION_ITEM_SIGN, \"]\")));\n        var items = _toConsumableArray(itemMap.values());\n        return items.sort(function (a, b) {\n          return orderedNodes.indexOf(a.ref) - orderedNodes.indexOf(b.ref);\n        });\n      };\n      provide(COLLECTION_INJECTION_KEY, {\n        itemMap: itemMap,\n        getItems: getItems,\n        collectionRef: collectionRef\n      });\n    }\n  });\n  var ElCollectionItem = _objectSpread(_objectSpread({}, CollectionItem), {}, {\n    name: COLLECTION_ITEM_NAME,\n    setup: function setup(_, _ref) {\n      var attrs = _ref.attrs;\n      var collectionItemRef = ref(null);\n      var collectionInjection = inject(COLLECTION_INJECTION_KEY, void 0);\n      provide(COLLECTION_ITEM_INJECTION_KEY, {\n        collectionItemRef: collectionItemRef\n      });\n      onMounted(function () {\n        var collectionItemEl = unref(collectionItemRef);\n        if (collectionItemEl) {\n          collectionInjection.itemMap.set(collectionItemEl, _objectSpread({\n            ref: collectionItemEl\n          }, attrs));\n        }\n      });\n      onBeforeUnmount(function () {\n        var collectionItemEl = unref(collectionItemRef);\n        collectionInjection.itemMap[\"delete\"](collectionItemEl);\n      });\n    }\n  });\n  return {\n    COLLECTION_INJECTION_KEY: COLLECTION_INJECTION_KEY,\n    COLLECTION_ITEM_INJECTION_KEY: COLLECTION_ITEM_INJECTION_KEY,\n    ElCollection: ElCollection,\n    ElCollectionItem: ElCollectionItem\n  };\n};\nexport { COLLECTION_ITEM_SIGN, createCollectionWithScope };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}