{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _defineProperty from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.every.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.number.parse-float.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.starts-with.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.every.js\";\nimport { defineComponent, getCurrentInstance, inject, ref, watch, nextTick, onBeforeUnmount, openBlock, createElementBlock, normalizeClass, unref, normalizeStyle } from 'vue';\nimport { useResizeObserver } from '@vueuse/core';\nimport { tabsRootContextKey } from './constants.mjs';\nimport { tabBarProps } from './tab-bar.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { throwError } from '../../../utils/error.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { capitalize } from '../../../utils/strings.mjs';\nvar COMPONENT_NAME = \"ElTabBar\";\nvar __default__ = defineComponent({\n  name: COMPONENT_NAME\n});\nvar _sfc_main = /* @__PURE__ */defineComponent(_objectSpread(_objectSpread({}, __default__), {}, {\n  props: tabBarProps,\n  setup: function setup(__props, _ref) {\n    var expose = _ref.expose;\n    var props = __props;\n    var instance = getCurrentInstance();\n    var rootTabs = inject(tabsRootContextKey);\n    if (!rootTabs) throwError(COMPONENT_NAME, \"<el-tabs><el-tab-bar /></el-tabs>\");\n    var ns = useNamespace(\"tabs\");\n    var barRef = ref();\n    var barStyle = ref();\n    var getBarStyle = function getBarStyle() {\n      var offset = 0;\n      var tabSize = 0;\n      var sizeName = [\"top\", \"bottom\"].includes(rootTabs.props.tabPosition) ? \"width\" : \"height\";\n      var sizeDir = sizeName === \"width\" ? \"x\" : \"y\";\n      var position = sizeDir === \"x\" ? \"left\" : \"top\";\n      props.tabs.every(function (tab) {\n        var _a, _b;\n        var $el = (_b = (_a = instance.parent) == null ? void 0 : _a.refs) == null ? void 0 : _b[\"tab-\".concat(tab.uid)];\n        if (!$el) return false;\n        if (!tab.active) {\n          return true;\n        }\n        offset = $el[\"offset\".concat(capitalize(position))];\n        tabSize = $el[\"client\".concat(capitalize(sizeName))];\n        var tabStyles = window.getComputedStyle($el);\n        if (sizeName === \"width\") {\n          tabSize -= Number.parseFloat(tabStyles.paddingLeft) + Number.parseFloat(tabStyles.paddingRight);\n          offset += Number.parseFloat(tabStyles.paddingLeft);\n        }\n        return false;\n      });\n      return _defineProperty(_defineProperty({}, sizeName, \"\".concat(tabSize, \"px\")), \"transform\", \"translate\".concat(capitalize(sizeDir), \"(\").concat(offset, \"px)\"));\n    };\n    var update = function update() {\n      return barStyle.value = getBarStyle();\n    };\n    var saveObserver = [];\n    var observerTabs = function observerTabs() {\n      var _a;\n      saveObserver.forEach(function (observer) {\n        return observer.stop();\n      });\n      saveObserver.length = 0;\n      var list = (_a = instance.parent) == null ? void 0 : _a.refs;\n      if (!list) return;\n      for (var key in list) {\n        if (key.startsWith(\"tab-\")) {\n          var _el = list[key];\n          if (_el) {\n            saveObserver.push(useResizeObserver(_el, update));\n          }\n        }\n      }\n    };\n    watch(function () {\n      return props.tabs;\n    }, /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return nextTick();\n          case 2:\n            update();\n            observerTabs();\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    })), {\n      immediate: true\n    });\n    var barObserever = useResizeObserver(barRef, function () {\n      return update();\n    });\n    onBeforeUnmount(function () {\n      saveObserver.forEach(function (observer) {\n        return observer.stop();\n      });\n      saveObserver.length = 0;\n      barObserever.stop();\n    });\n    expose({\n      ref: barRef,\n      update: update\n    });\n    return function (_ctx, _cache) {\n      return openBlock(), createElementBlock(\"div\", {\n        ref_key: \"barRef\",\n        ref: barRef,\n        \"class\": normalizeClass([unref(ns).e(\"active-bar\"), unref(ns).is(unref(rootTabs).props.tabPosition)]),\n        style: normalizeStyle(barStyle.value)\n      }, null, 6);\n    };\n  }\n}));\nvar TabBar = /* @__PURE__ */_export_sfc(_sfc_main, [[\"__file\", \"tab-bar.vue\"]]);\nexport { TabBar as default };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}