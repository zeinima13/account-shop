{"ast":null,"code":"import _objectSpread from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport { defineComponent, ref, computed, watch, openBlock, createElementBlock, normalizeClass, unref, normalizeStyle, createBlock, withCtx, resolveDynamicComponent, renderSlot } from 'vue';\nimport { ElIcon } from '../../icon/index.mjs';\nimport { avatarProps, avatarEmits } from './avatar2.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { isString } from '@vue/shared';\nimport { isNumber } from '../../../utils/types.mjs';\nimport { addUnit } from '../../../utils/dom/style.mjs';\nvar __default__ = defineComponent({\n  name: \"ElAvatar\"\n});\nvar _sfc_main = /* @__PURE__ */defineComponent(_objectSpread(_objectSpread({}, __default__), {}, {\n  props: avatarProps,\n  emits: avatarEmits,\n  setup: function setup(__props, _ref) {\n    var emit = _ref.emit;\n    var props = __props;\n    var ns = useNamespace(\"avatar\");\n    var hasLoadError = ref(false);\n    var avatarClass = computed(function () {\n      var size = props.size,\n        icon = props.icon,\n        shape = props.shape;\n      var classList = [ns.b()];\n      if (isString(size)) classList.push(ns.m(size));\n      if (icon) classList.push(ns.m(\"icon\"));\n      if (shape) classList.push(ns.m(shape));\n      return classList;\n    });\n    var sizeStyle = computed(function () {\n      var size = props.size;\n      return isNumber(size) ? ns.cssVarBlock({\n        size: addUnit(size) || \"\"\n      }) : void 0;\n    });\n    var fitStyle = computed(function () {\n      return {\n        objectFit: props.fit\n      };\n    });\n    watch(function () {\n      return props.src;\n    }, function () {\n      return hasLoadError.value = false;\n    });\n    function handleError(e) {\n      hasLoadError.value = true;\n      emit(\"error\", e);\n    }\n    return function (_ctx, _cache) {\n      return openBlock(), createElementBlock(\"span\", {\n        \"class\": normalizeClass(unref(avatarClass)),\n        style: normalizeStyle(unref(sizeStyle))\n      }, [(_ctx.src || _ctx.srcSet) && !hasLoadError.value ? (openBlock(), createElementBlock(\"img\", {\n        key: 0,\n        src: _ctx.src,\n        alt: _ctx.alt,\n        srcset: _ctx.srcSet,\n        style: normalizeStyle(unref(fitStyle)),\n        onError: handleError\n      }, null, 44, [\"src\", \"alt\", \"srcset\"])) : _ctx.icon ? (openBlock(), createBlock(unref(ElIcon), {\n        key: 1\n      }, {\n        \"default\": withCtx(function () {\n          return [(openBlock(), createBlock(resolveDynamicComponent(_ctx.icon)))];\n        }),\n        _: 1\n      })) : renderSlot(_ctx.$slots, \"default\", {\n        key: 2\n      })], 6);\n    };\n  }\n}));\nvar Avatar = /* @__PURE__ */_export_sfc(_sfc_main, [[\"__file\", \"avatar.vue\"]]);\nexport { Avatar as default };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}