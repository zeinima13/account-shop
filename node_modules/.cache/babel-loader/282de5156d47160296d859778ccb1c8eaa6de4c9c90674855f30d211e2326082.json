{"ast":null,"code":"import \"core-js/modules/es.array.concat.js\";\nimport { computed, onBeforeMount } from 'vue';\nimport { useGetDerivedNamespace } from '../use-namespace/index.mjs';\nimport { useIdInjection } from '../use-id/index.mjs';\nimport { isClient } from '@vueuse/core';\nvar usePopperContainerId = function usePopperContainerId() {\n  var namespace = useGetDerivedNamespace();\n  var idInjection = useIdInjection();\n  var id = computed(function () {\n    return \"\".concat(namespace.value, \"-popper-container-\").concat(idInjection.prefix);\n  });\n  var selector = computed(function () {\n    return \"#\".concat(id.value);\n  });\n  return {\n    id: id,\n    selector: selector\n  };\n};\nvar createContainer = function createContainer(id) {\n  var container = document.createElement(\"div\");\n  container.id = id;\n  document.body.appendChild(container);\n  return container;\n};\nvar usePopperContainer = function usePopperContainer() {\n  var _usePopperContainerId = usePopperContainerId(),\n    id = _usePopperContainerId.id,\n    selector = _usePopperContainerId.selector;\n  onBeforeMount(function () {\n    if (!isClient) return;\n    if (process.env.NODE_ENV === \"test\" || !document.body.querySelector(selector.value)) {\n      createContainer(id.value);\n    }\n  });\n  return {\n    id: id,\n    selector: selector\n  };\n};\nexport { usePopperContainer, usePopperContainerId };","map":{"version":3,"names":["usePopperContainerId","namespace","useGetDerivedNamespace","idInjection","useIdInjection","id","computed","concat","value","prefix","selector","createContainer","container","document","createElement","body","appendChild","usePopperContainer","_usePopperContainerId","onBeforeMount","isClient","process","env","NODE_ENV","querySelector"],"sources":["../../../../../packages/hooks/use-popper-container/index.ts"],"sourcesContent":["import { computed, onBeforeMount } from 'vue'\nimport { isClient } from '@element-plus/utils'\nimport { useGetDerivedNamespace } from '../use-namespace'\nimport { useIdInjection } from '../use-id'\n\nexport const usePopperContainerId = () => {\n  const namespace = useGetDerivedNamespace()\n  const idInjection = useIdInjection()\n\n  const id = computed(() => {\n    return `${namespace.value}-popper-container-${idInjection.prefix}`\n  })\n  const selector = computed(() => `#${id.value}`)\n\n  return {\n    id,\n    selector,\n  }\n}\n\nconst createContainer = (id: string) => {\n  const container = document.createElement('div')\n  container.id = id\n  document.body.appendChild(container)\n  return container\n}\n\nexport const usePopperContainer = () => {\n  const { id, selector } = usePopperContainerId()\n  onBeforeMount(() => {\n    if (!isClient) return\n\n    // This is for bypassing the error that when under testing env, we often encounter\n    // document.body.innerHTML = '' situation\n    // for this we need to disable the caching since it's not really needed\n    if (\n      process.env.NODE_ENV === 'test' ||\n      !document.body.querySelector(selector.value)\n    ) {\n      createContainer(id.value)\n    }\n  })\n\n  return {\n    id,\n    selector,\n  }\n}\n"],"mappings":";;;;;AAIY,IAACA,oBAAoB,GAAG,SAAvBA,oBAAoBA,CAAA,EAAS;EACxC,IAAMC,SAAS,GAAGC,sBAAsB,EAAE;EAC1C,IAAMC,WAAW,GAAGC,cAAc,EAAE;EACpC,IAAMC,EAAE,GAAGC,QAAQ,CAAC,YAAM;IACxB,UAAAC,MAAA,CAAUN,SAAS,CAACO,KAAK,wBAAAD,MAAA,CAAqBJ,WAAW,CAACM,MAAM;EACpE,CAAG,CAAC;EACF,IAAMC,QAAQ,GAAGJ,QAAQ,CAAC;IAAA,WAAAC,MAAA,CAAUF,EAAE,CAACG,KAAK;EAAA,CAAE,CAAC;EAC/C,OAAO;IACLH,EAAE,EAAFA,EAAE;IACFK,QAAQ,EAARA;EACJ,CAAG;AACH;AACA,IAAMC,eAAe,GAAG,SAAlBA,eAAeA,CAAIN,EAAE,EAAK;EAC9B,IAAMO,SAAS,GAAGC,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;EAC/CF,SAAS,CAACP,EAAE,GAAGA,EAAE;EACjBQ,QAAQ,CAACE,IAAI,CAACC,WAAW,CAACJ,SAAS,CAAC;EACpC,OAAOA,SAAS;AAClB,CAAC;AACW,IAACK,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAA,EAAS;EACtC,IAAAC,qBAAA,GAAyBlB,oBAAoB,EAAE;IAAvCK,EAAE,GAAAa,qBAAA,CAAFb,EAAE;IAAEK,QAAQ,GAAAQ,qBAAA,CAARR,QAAQ;EACpBS,aAAa,CAAC,YAAM;IAClB,IAAI,CAACC,QAAQ,EACX;IACF,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,MAAM,IAAI,CAACV,QAAQ,CAACE,IAAI,CAACS,aAAa,CAACd,QAAQ,CAACF,KAAK,CAAC,EAAE;MACnFG,eAAe,CAACN,EAAE,CAACG,KAAK,CAAC;IAC/B;EACA,CAAG,CAAC;EACF,OAAO;IACLH,EAAE,EAAFA,EAAE;IACFK,QAAQ,EAARA;EACJ,CAAG;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}