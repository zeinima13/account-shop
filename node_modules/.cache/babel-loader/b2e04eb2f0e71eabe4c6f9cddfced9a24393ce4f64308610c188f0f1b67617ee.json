{"ast":null,"code":"import _slicedToArray from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.includes.js\";\nvar useTimePanel = function useTimePanel(_ref) {\n  var getAvailableHours = _ref.getAvailableHours,\n    getAvailableMinutes = _ref.getAvailableMinutes,\n    getAvailableSeconds = _ref.getAvailableSeconds;\n  var getAvailableTime = function getAvailableTime(date, role, first, compareDate) {\n    var availableTimeGetters = {\n      hour: getAvailableHours,\n      minute: getAvailableMinutes,\n      second: getAvailableSeconds\n    };\n    var result = date;\n    [\"hour\", \"minute\", \"second\"].forEach(function (type) {\n      if (availableTimeGetters[type]) {\n        var availableTimeSlots;\n        var method = availableTimeGetters[type];\n        switch (type) {\n          case \"minute\":\n            {\n              availableTimeSlots = method(result.hour(), role, compareDate);\n              break;\n            }\n          case \"second\":\n            {\n              availableTimeSlots = method(result.hour(), result.minute(), role, compareDate);\n              break;\n            }\n          default:\n            {\n              availableTimeSlots = method(role, compareDate);\n              break;\n            }\n        }\n        if ((availableTimeSlots == null ? void 0 : availableTimeSlots.length) && !availableTimeSlots.includes(result[type]())) {\n          var pos = first ? 0 : availableTimeSlots.length - 1;\n          result = result[type](availableTimeSlots[pos]);\n        }\n      }\n    });\n    return result;\n  };\n  var timePickerOptions = {};\n  var onSetOption = function onSetOption(_ref2) {\n    var _ref3 = _slicedToArray(_ref2, 2),\n      key = _ref3[0],\n      val = _ref3[1];\n    timePickerOptions[key] = val;\n  };\n  return {\n    timePickerOptions: timePickerOptions,\n    getAvailableTime: getAvailableTime,\n    onSetOption: onSetOption\n  };\n};\nexport { useTimePanel };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}