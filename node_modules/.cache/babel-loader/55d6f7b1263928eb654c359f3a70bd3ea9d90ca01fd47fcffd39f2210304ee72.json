{"ast":null,"code":"import _objectSpread from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { defineComponent, toRef, unref, openBlock, createElementBlock, mergeProps, Fragment, renderList, renderSlot, createVNode, normalizeClass, createBlock, createCommentVNode, normalizeProps } from 'vue';\nimport { skeletonProps } from './skeleton.mjs';\nimport SkeletonItem from './skeleton-item2.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useThrottleRender } from '../../../hooks/use-throttle-render/index.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nvar __default__ = defineComponent({\n  name: \"ElSkeleton\"\n});\nvar _sfc_main = /* @__PURE__ */defineComponent(_objectSpread(_objectSpread({}, __default__), {}, {\n  props: skeletonProps,\n  setup: function setup(__props, _ref) {\n    var expose = _ref.expose;\n    var props = __props;\n    var ns = useNamespace(\"skeleton\");\n    var uiLoading = useThrottleRender(toRef(props, \"loading\"), props.throttle);\n    expose({\n      uiLoading: uiLoading\n    });\n    return function (_ctx, _cache) {\n      return unref(uiLoading) ? (openBlock(), createElementBlock(\"div\", mergeProps({\n        key: 0,\n        \"class\": [unref(ns).b(), unref(ns).is(\"animated\", _ctx.animated)]\n      }, _ctx.$attrs), [(openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.count, function (i) {\n        return openBlock(), createElementBlock(Fragment, {\n          key: i\n        }, [unref(uiLoading) ? renderSlot(_ctx.$slots, \"template\", {\n          key: i\n        }, function () {\n          return [createVNode(SkeletonItem, {\n            \"class\": normalizeClass(unref(ns).is(\"first\")),\n            variant: \"p\"\n          }, null, 8, [\"class\"]), (openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.rows, function (item) {\n            return openBlock(), createBlock(SkeletonItem, {\n              key: item,\n              \"class\": normalizeClass([unref(ns).e(\"paragraph\"), unref(ns).is(\"last\", item === _ctx.rows && _ctx.rows > 1)]),\n              variant: \"p\"\n            }, null, 8, [\"class\"]);\n          }), 128))];\n        }) : createCommentVNode(\"v-if\", true)], 64);\n      }), 128))], 16)) : renderSlot(_ctx.$slots, \"default\", normalizeProps(mergeProps({\n        key: 1\n      }, _ctx.$attrs)));\n    };\n  }\n}));\nvar Skeleton = /* @__PURE__ */_export_sfc(_sfc_main, [[\"__file\", \"skeleton.vue\"]]);\nexport { Skeleton as default };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}