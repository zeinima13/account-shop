{"ast":null,"code":"import _toConsumableArray from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _objectSpread from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport { useTooltipContentProps } from './content.mjs';\nimport { useTooltipTriggerProps } from './trigger.mjs';\nimport { popperProps } from '../../popper/src/popper.mjs';\nimport { popperArrowProps } from '../../popper/src/arrow.mjs';\nimport { createModelToggleComposable } from '../../../hooks/use-model-toggle/index.mjs';\nimport { buildProps } from '../../../utils/vue/props/runtime.mjs';\nvar _createModelToggleCom = createModelToggleComposable(\"visible\"),\n  useTooltipModelToggleProps = _createModelToggleCom.useModelToggleProps,\n  useTooltipModelToggleEmits = _createModelToggleCom.useModelToggleEmits,\n  useTooltipModelToggle = _createModelToggleCom.useModelToggle;\nvar useTooltipProps = buildProps(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, popperProps), useTooltipModelToggleProps), useTooltipContentProps), useTooltipTriggerProps), popperArrowProps), {}, {\n  showArrow: {\n    type: Boolean,\n    \"default\": true\n  }\n}));\nvar tooltipEmits = [].concat(_toConsumableArray(useTooltipModelToggleEmits), [\"before-show\", \"before-hide\", \"show\", \"hide\", \"open\", \"close\"]);\nexport { tooltipEmits, useTooltipModelToggle, useTooltipModelToggleEmits, useTooltipModelToggleProps, useTooltipProps };","map":{"version":3,"names":["_createModelToggleCom","createModelToggleComposable","useTooltipModelToggleProps","useModelToggleProps","useTooltipModelToggleEmits","useModelToggleEmits","useTooltipModelToggle","useModelToggle","useTooltipProps","buildProps","_objectSpread","popperProps","useTooltipContentProps","useTooltipTriggerProps","popperArrowProps","showArrow","type","Boolean","tooltipEmits","concat","_toConsumableArray"],"sources":["../../../../../../packages/components/tooltip/src/tooltip.ts"],"sourcesContent":["import { buildProps } from '@element-plus/utils'\nimport { createModelToggleComposable } from '@element-plus/hooks'\nimport { popperArrowProps, popperProps } from '@element-plus/components/popper'\nimport { useTooltipContentProps } from './content'\nimport { useTooltipTriggerProps } from './trigger'\nimport type Tooltip from './tooltip.vue'\n\nimport type { ExtractPropTypes } from 'vue'\n\nexport const {\n  useModelToggleProps: useTooltipModelToggleProps,\n  useModelToggleEmits: useTooltipModelToggleEmits,\n  useModelToggle: useTooltipModelToggle,\n} = createModelToggleComposable('visible' as const)\n\nexport const useTooltipProps = buildProps({\n  ...popperProps,\n  ...useTooltipModelToggleProps,\n  ...useTooltipContentProps,\n  ...useTooltipTriggerProps,\n  ...popperArrowProps,\n  /**\n   * @description whether the tooltip content has an arrow\n   */\n  showArrow: {\n    type: Boolean,\n    default: true,\n  },\n})\n\nexport const tooltipEmits = [\n  ...useTooltipModelToggleEmits,\n  'before-show',\n  'before-hide',\n  'show',\n  'hide',\n  'open',\n  'close',\n]\n\nexport type ElTooltipProps = ExtractPropTypes<typeof useTooltipProps>\n\nexport type TooltipInstance = InstanceType<typeof Tooltip>\n"],"mappings":";;;;;;;;;AAKY,IAAAA,qBAAA,GAIRC,2BAA2B,CAAC,SAAS;EAHlBC,0BAA0B,GAAAF,qBAAA,CAA/CG,mBAAmB;EACEC,0BAA0B,GAAAJ,qBAAA,CAA/CK,mBAAmB;EACHC,qBAAqB,GAAAN,qBAAA,CAArCO,cAAc;AAEJ,IAACC,eAAe,GAAGC,UAAU,CAAAC,aAAA,CAAAA,aAAA,CAAAA,aAAA,CAAAA,aAAA,CAAAA,aAAA,CAAAA,aAAA,KACpCC,WAAW,GACXT,0BAA0B,GAC1BU,sBAAsB,GACtBC,sBAAsB,GACtBC,gBAAgB;EACnBC,SAAS,EAAE;IACTC,IAAI,EAAEC,OAAO;IACb,WAAS;EACb;AAAG,EACF;AACW,IAACC,YAAY,MAAAC,MAAA,CAAAC,kBAAA,CACpBhB,0BAA0B,IAC7B,aAAa,EACb,aAAa,EACb,MAAM,EACN,MAAM,EACN,MAAM,EACN,OAAO,EACT","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}