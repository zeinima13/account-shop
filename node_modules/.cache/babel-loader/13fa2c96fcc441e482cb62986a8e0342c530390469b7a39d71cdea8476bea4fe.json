{"ast":null,"code":"import { ref, inject, computed } from 'vue';\nimport { radioGroupKey } from './constants.mjs';\nimport { isPropAbsent } from '../../../utils/types.mjs';\nimport { UPDATE_MODEL_EVENT } from '../../../constants/event.mjs';\nimport { useFormSize, useFormDisabled } from '../../form/src/hooks/use-form-common-props.mjs';\nimport { useDeprecated } from '../../../hooks/use-deprecated/index.mjs';\nvar useRadio = function useRadio(props, emit) {\n  var radioRef = ref();\n  var radioGroup = inject(radioGroupKey, void 0);\n  var isGroup = computed(function () {\n    return !!radioGroup;\n  });\n  var actualValue = computed(function () {\n    if (!isPropAbsent(props.value)) {\n      return props.value;\n    }\n    return props.label;\n  });\n  var modelValue = computed({\n    get: function get() {\n      return isGroup.value ? radioGroup.modelValue : props.modelValue;\n    },\n    set: function set(val) {\n      if (isGroup.value) {\n        radioGroup.changeEvent(val);\n      } else {\n        emit && emit(UPDATE_MODEL_EVENT, val);\n      }\n      radioRef.value.checked = props.modelValue === actualValue.value;\n    }\n  });\n  var size = useFormSize(computed(function () {\n    return radioGroup == null ? void 0 : radioGroup.size;\n  }));\n  var disabled = useFormDisabled(computed(function () {\n    return radioGroup == null ? void 0 : radioGroup.disabled;\n  }));\n  var focus = ref(false);\n  var tabIndex = computed(function () {\n    return disabled.value || isGroup.value && modelValue.value !== actualValue.value ? -1 : 0;\n  });\n  useDeprecated({\n    from: \"label act as value\",\n    replacement: \"value\",\n    version: \"3.0.0\",\n    scope: \"el-radio\",\n    ref: \"https://element-plus.org/en-US/component/radio.html\"\n  }, computed(function () {\n    return isGroup.value && isPropAbsent(props.value);\n  }));\n  return {\n    radioRef: radioRef,\n    isGroup: isGroup,\n    radioGroup: radioGroup,\n    focus: focus,\n    size: size,\n    disabled: disabled,\n    tabIndex: tabIndex,\n    modelValue: modelValue,\n    actualValue: actualValue\n  };\n};\nexport { useRadio };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}