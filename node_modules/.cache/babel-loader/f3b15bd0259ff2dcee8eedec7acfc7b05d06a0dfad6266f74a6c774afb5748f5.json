{"ast":null,"code":"import _objectSpread from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { defineComponent, ref, toRef, computed, provide, readonly, unref, watch, onDeactivated, openBlock, createBlock, withCtx, createVNode, renderSlot, createCommentVNode, createElementBlock, toDisplayString } from 'vue';\nimport { ElPopper } from '../../popper/index.mjs';\nimport { TOOLTIP_INJECTION_KEY } from './constants.mjs';\nimport { useTooltipProps, tooltipEmits, useTooltipModelToggle } from './tooltip.mjs';\nimport ElTooltipTrigger from './trigger2.mjs';\nimport ElTooltipContent from './content2.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { usePopperContainer } from '../../../hooks/use-popper-container/index.mjs';\nimport { useDelayedToggle } from '../../../hooks/use-delayed-toggle/index.mjs';\nimport ElPopperArrow from '../../popper/src/arrow2.mjs';\nimport { useId } from '../../../hooks/use-id/index.mjs';\nimport { isBoolean } from '../../../utils/types.mjs';\nvar __default__ = defineComponent({\n  name: \"ElTooltip\"\n});\nvar _sfc_main = /* @__PURE__ */defineComponent(_objectSpread(_objectSpread({}, __default__), {}, {\n  props: useTooltipProps,\n  emits: tooltipEmits,\n  setup: function setup(__props, _ref) {\n    var expose = _ref.expose,\n      emit = _ref.emit;\n    var props = __props;\n    usePopperContainer();\n    var id = useId();\n    var popperRef = ref();\n    var contentRef = ref();\n    var updatePopper = function updatePopper() {\n      var _a;\n      var popperComponent = unref(popperRef);\n      if (popperComponent) {\n        (_a = popperComponent.popperInstanceRef) == null ? void 0 : _a.update();\n      }\n    };\n    var open = ref(false);\n    var toggleReason = ref();\n    var _useTooltipModelToggl = useTooltipModelToggle({\n        indicator: open,\n        toggleReason: toggleReason\n      }),\n      show = _useTooltipModelToggl.show,\n      hide = _useTooltipModelToggl.hide,\n      hasUpdateHandler = _useTooltipModelToggl.hasUpdateHandler;\n    var _useDelayedToggle = useDelayedToggle({\n        showAfter: toRef(props, \"showAfter\"),\n        hideAfter: toRef(props, \"hideAfter\"),\n        autoClose: toRef(props, \"autoClose\"),\n        open: show,\n        close: hide\n      }),\n      _onOpen = _useDelayedToggle.onOpen,\n      _onClose = _useDelayedToggle.onClose;\n    var controlled = computed(function () {\n      return isBoolean(props.visible) && !hasUpdateHandler.value;\n    });\n    provide(TOOLTIP_INJECTION_KEY, {\n      controlled: controlled,\n      id: id,\n      open: readonly(open),\n      trigger: toRef(props, \"trigger\"),\n      onOpen: function onOpen(event) {\n        _onOpen(event);\n      },\n      onClose: function onClose(event) {\n        _onClose(event);\n      },\n      onToggle: function onToggle(event) {\n        if (unref(open)) {\n          _onClose(event);\n        } else {\n          _onOpen(event);\n        }\n      },\n      onShow: function onShow() {\n        emit(\"show\", toggleReason.value);\n      },\n      onHide: function onHide() {\n        emit(\"hide\", toggleReason.value);\n      },\n      onBeforeShow: function onBeforeShow() {\n        emit(\"before-show\", toggleReason.value);\n      },\n      onBeforeHide: function onBeforeHide() {\n        emit(\"before-hide\", toggleReason.value);\n      },\n      updatePopper: updatePopper\n    });\n    watch(function () {\n      return props.disabled;\n    }, function (disabled) {\n      if (disabled && open.value) {\n        open.value = false;\n      }\n    });\n    var isFocusInsideContent = function isFocusInsideContent(event) {\n      var _a;\n      return (_a = contentRef.value) == null ? void 0 : _a.isFocusInsideContent(event);\n    };\n    onDeactivated(function () {\n      return open.value && hide();\n    });\n    expose({\n      popperRef: popperRef,\n      contentRef: contentRef,\n      isFocusInsideContent: isFocusInsideContent,\n      updatePopper: updatePopper,\n      onOpen: _onOpen,\n      onClose: _onClose,\n      hide: hide\n    });\n    return function (_ctx, _cache) {\n      return openBlock(), createBlock(unref(ElPopper), {\n        ref_key: \"popperRef\",\n        ref: popperRef,\n        role: _ctx.role\n      }, {\n        \"default\": withCtx(function () {\n          return [createVNode(ElTooltipTrigger, {\n            disabled: _ctx.disabled,\n            trigger: _ctx.trigger,\n            \"trigger-keys\": _ctx.triggerKeys,\n            \"virtual-ref\": _ctx.virtualRef,\n            \"virtual-triggering\": _ctx.virtualTriggering\n          }, {\n            \"default\": withCtx(function () {\n              return [_ctx.$slots[\"default\"] ? renderSlot(_ctx.$slots, \"default\", {\n                key: 0\n              }) : createCommentVNode(\"v-if\", true)];\n            }),\n            _: 3\n          }, 8, [\"disabled\", \"trigger\", \"trigger-keys\", \"virtual-ref\", \"virtual-triggering\"]), createVNode(ElTooltipContent, {\n            ref_key: \"contentRef\",\n            ref: contentRef,\n            \"aria-label\": _ctx.ariaLabel,\n            \"boundaries-padding\": _ctx.boundariesPadding,\n            content: _ctx.content,\n            disabled: _ctx.disabled,\n            effect: _ctx.effect,\n            enterable: _ctx.enterable,\n            \"fallback-placements\": _ctx.fallbackPlacements,\n            \"hide-after\": _ctx.hideAfter,\n            \"gpu-acceleration\": _ctx.gpuAcceleration,\n            offset: _ctx.offset,\n            persistent: _ctx.persistent,\n            \"popper-class\": _ctx.popperClass,\n            \"popper-style\": _ctx.popperStyle,\n            placement: _ctx.placement,\n            \"popper-options\": _ctx.popperOptions,\n            pure: _ctx.pure,\n            \"raw-content\": _ctx.rawContent,\n            \"reference-el\": _ctx.referenceEl,\n            \"trigger-target-el\": _ctx.triggerTargetEl,\n            \"show-after\": _ctx.showAfter,\n            strategy: _ctx.strategy,\n            teleported: _ctx.teleported,\n            transition: _ctx.transition,\n            \"virtual-triggering\": _ctx.virtualTriggering,\n            \"z-index\": _ctx.zIndex,\n            \"append-to\": _ctx.appendTo\n          }, {\n            \"default\": withCtx(function () {\n              return [renderSlot(_ctx.$slots, \"content\", {}, function () {\n                return [_ctx.rawContent ? (openBlock(), createElementBlock(\"span\", {\n                  key: 0,\n                  innerHTML: _ctx.content\n                }, null, 8, [\"innerHTML\"])) : (openBlock(), createElementBlock(\"span\", {\n                  key: 1\n                }, toDisplayString(_ctx.content), 1))];\n              }), _ctx.showArrow ? (openBlock(), createBlock(unref(ElPopperArrow), {\n                key: 0,\n                \"arrow-offset\": _ctx.arrowOffset\n              }, null, 8, [\"arrow-offset\"])) : createCommentVNode(\"v-if\", true)];\n            }),\n            _: 3\n          }, 8, [\"aria-label\", \"boundaries-padding\", \"content\", \"disabled\", \"effect\", \"enterable\", \"fallback-placements\", \"hide-after\", \"gpu-acceleration\", \"offset\", \"persistent\", \"popper-class\", \"popper-style\", \"placement\", \"popper-options\", \"pure\", \"raw-content\", \"reference-el\", \"trigger-target-el\", \"show-after\", \"strategy\", \"teleported\", \"transition\", \"virtual-triggering\", \"z-index\", \"append-to\"])];\n        }),\n        _: 3\n      }, 8, [\"role\"]);\n    };\n  }\n}));\nvar Tooltip = /* @__PURE__ */_export_sfc(_sfc_main, [[\"__file\", \"tooltip.vue\"]]);\nexport { Tooltip as default };","map":{"version":3,"names":["name","usePopperContainer","id","useId","popperRef","ref","contentRef","updatePopper","_a","popperComponent","unref","popperInstanceRef","update","open","toggleReason","_useTooltipModelToggl","useTooltipModelToggle","indicator","show","hide","hasUpdateHandler","_useDelayedToggle","useDelayedToggle","showAfter","toRef","props","hideAfter","autoClose","close","onOpen","onClose","controlled","computed","isBoolean","visible","value","provide","TOOLTIP_INJECTION_KEY","readonly","trigger","event","onToggle","onShow","emit","onHide","onBeforeShow","onBeforeHide","watch","disabled","isFocusInsideContent","onDeactivated","expose","_ctx","_cache","openBlock","createBlock","ElPopper","ref_key","role","withCtx","createVNode","ElTooltipTrigger","triggerKeys","virtualRef","virtualTriggering","$slots","renderSlot","key","createCommentVNode","_","ElTooltipContent","ariaLabel","boundariesPadding"],"sources":["../../../../../../packages/components/tooltip/src/tooltip.vue"],"sourcesContent":["<template>\n  <el-popper ref=\"popperRef\" :role=\"role\">\n    <el-tooltip-trigger\n      :disabled=\"disabled\"\n      :trigger=\"trigger\"\n      :trigger-keys=\"triggerKeys\"\n      :virtual-ref=\"virtualRef\"\n      :virtual-triggering=\"virtualTriggering\"\n    >\n      <slot v-if=\"$slots.default\" />\n    </el-tooltip-trigger>\n    <el-tooltip-content\n      ref=\"contentRef\"\n      :aria-label=\"ariaLabel\"\n      :boundaries-padding=\"boundariesPadding\"\n      :content=\"content\"\n      :disabled=\"disabled\"\n      :effect=\"effect\"\n      :enterable=\"enterable\"\n      :fallback-placements=\"fallbackPlacements\"\n      :hide-after=\"hideAfter\"\n      :gpu-acceleration=\"gpuAcceleration\"\n      :offset=\"offset\"\n      :persistent=\"persistent\"\n      :popper-class=\"popperClass\"\n      :popper-style=\"popperStyle\"\n      :placement=\"placement\"\n      :popper-options=\"popperOptions\"\n      :pure=\"pure\"\n      :raw-content=\"rawContent\"\n      :reference-el=\"referenceEl\"\n      :trigger-target-el=\"triggerTargetEl\"\n      :show-after=\"showAfter\"\n      :strategy=\"strategy\"\n      :teleported=\"teleported\"\n      :transition=\"transition\"\n      :virtual-triggering=\"virtualTriggering\"\n      :z-index=\"zIndex\"\n      :append-to=\"appendTo\"\n    >\n      <slot name=\"content\">\n        <span v-if=\"rawContent\" v-html=\"content\" />\n        <span v-else>{{ content }}</span>\n      </slot>\n      <el-popper-arrow v-if=\"showArrow\" :arrow-offset=\"arrowOffset\" />\n    </el-tooltip-content>\n  </el-popper>\n</template>\n\n<script lang=\"ts\" setup>\nimport {\n  computed,\n  onDeactivated,\n  provide,\n  readonly,\n  ref,\n  toRef,\n  unref,\n  watch,\n} from 'vue'\nimport { ElPopper, ElPopperArrow } from '@element-plus/components/popper'\n\nimport { isBoolean } from '@element-plus/utils'\nimport {\n  useDelayedToggle,\n  useId,\n  usePopperContainer,\n} from '@element-plus/hooks'\nimport { TOOLTIP_INJECTION_KEY } from './constants'\nimport { tooltipEmits, useTooltipModelToggle, useTooltipProps } from './tooltip'\nimport ElTooltipTrigger from './trigger.vue'\nimport ElTooltipContent from './content.vue'\nimport type { TooltipContentInstance } from './content'\nimport type { PopperInstance } from '@element-plus/components/popper'\nimport type { Ref } from 'vue'\n\ndefineOptions({\n  name: 'ElTooltip',\n})\n\nconst props = defineProps(useTooltipProps)\nconst emit = defineEmits(tooltipEmits)\n\nusePopperContainer()\n\nconst id = useId()\nconst popperRef = ref<PopperInstance>()\nconst contentRef = ref<TooltipContentInstance>()\n\nconst updatePopper = () => {\n  const popperComponent = unref(popperRef)\n  if (popperComponent) {\n    popperComponent.popperInstanceRef?.update()\n  }\n}\nconst open = ref(false)\nconst toggleReason = ref<Event>()\n\nconst { show, hide, hasUpdateHandler } = useTooltipModelToggle({\n  indicator: open,\n  toggleReason,\n})\n\nconst { onOpen, onClose } = useDelayedToggle({\n  showAfter: toRef(props, 'showAfter'),\n  hideAfter: toRef(props, 'hideAfter'),\n  autoClose: toRef(props, 'autoClose'),\n  open: show,\n  close: hide,\n})\n\nconst controlled = computed(\n  () => isBoolean(props.visible) && !hasUpdateHandler.value\n)\n\nprovide(TOOLTIP_INJECTION_KEY, {\n  controlled,\n  id,\n  open: readonly(open),\n  trigger: toRef(props, 'trigger'),\n  onOpen: (event?: Event) => {\n    onOpen(event)\n  },\n  onClose: (event?: Event) => {\n    onClose(event)\n  },\n  onToggle: (event?: Event) => {\n    if (unref(open)) {\n      onClose(event)\n    } else {\n      onOpen(event)\n    }\n  },\n  onShow: () => {\n    emit('show', toggleReason.value)\n  },\n  onHide: () => {\n    emit('hide', toggleReason.value)\n  },\n  onBeforeShow: () => {\n    emit('before-show', toggleReason.value)\n  },\n  onBeforeHide: () => {\n    emit('before-hide', toggleReason.value)\n  },\n  updatePopper,\n})\n\nwatch(\n  () => props.disabled,\n  (disabled) => {\n    if (disabled && open.value) {\n      open.value = false\n    }\n  }\n)\n\nconst isFocusInsideContent = (event?: FocusEvent) => {\n  return contentRef.value?.isFocusInsideContent(event)\n}\n\nonDeactivated(() => open.value && hide())\n\ndefineExpose<{\n  popperRef: Ref<PopperInstance | undefined>\n  contentRef: Ref<TooltipContentInstance | undefined>\n  isFocusInsideContent: (event?: FocusEvent) => boolean | undefined\n  updatePopper: () => void\n  onOpen: (event?: Event) => void\n  onClose: (event?: Event) => void\n  hide: () => void\n}>({\n  /**\n   * @description el-popper component instance\n   */\n  popperRef,\n  /**\n   * @description el-tooltip-content component instance\n   */\n  contentRef,\n  /**\n   * @description validate current focus event is trigger inside el-tooltip-content\n   */\n  isFocusInsideContent,\n  /**\n   * @description update el-popper component instance\n   */\n  updatePopper,\n  /**\n   * @description expose onOpen function to mange el-tooltip open state\n   */\n  onOpen,\n  /**\n   * @description expose onOpen function to mange el-tooltip open state\n   */\n  onClose,\n  /**\n   * @description expose hide function\n   */\n  hide,\n})\n</script>\n"],"mappings":";;;;;;;;;;;;;iCA4Ec;EACZA,IAAM;AACR;;;;;;;;IAKmBC,kBAAA;IAEnB,IAAMC,EAAA,GAAKC,KAAM;IACjB,IAAMC,SAAA,GAAYC,GAAoB;IACtC,IAAMC,UAAA,GAAaD,GAA4B;IAE/C,IAAME,YAAA,GAAe,SAAfA,aAAA,EAAqB;MACnB,IAAAC,EAAA;MACN,IAAqBC,eAAA,GAAAC,KAAA,CAAAN,SAAA;MACnB,IAAAK,eAAA;QACF,CAAAD,EAAA,GAAAC,eAAA,CAAAE,iBAAA,qBAAAH,EAAA,CAAAI,MAAA;MAAA;IAEF,CAAM;IACN,IAAMC,IAAA,GAAAR,GAAA,MAA0B;IAEhC,IAAMS,YAAc,GAAAT,GAAA;IAA2C,IAAAU,qBAAA,GAClDC,qBAAA;QACXC,SAAA,EAAAJ,IAAA;QACDC,YAAA,EAAAA;MAED;MAJaI,IAAA,GAAAH,qBAAA,CAAAG,IAAA;MAAAC,IAAA,GAAAJ,qBAAA,CAAAI,IAAA;MAAAC,gBAAA,GAAAL,qBAAA,CAAAK,gBAAA;IAKX,IAAAC,iBAAA,GAAmCC,gBAAA;QACnCC,SAAA,EAAWC,KAAM,CAAAC,KAAA,EAAO,WAAW;QACnCC,SAAA,EAAWF,KAAM,CAAAC,KAAA,EAAO,WAAW;QACnCE,SAAM,EAAAH,KAAA,CAAAC,KAAA;QACNZ,IAAO,EAAAK,IAAA;QACRU,KAAA,EAAAT;MAED;MAPEU,OAAiB,GAAAR,iBAAA,CAAjBQ,MAAiB;MAAAC,QAAA,GAAAT,iBAAA,CAAAS,OAAA;IAOA,IAAAC,UACD,GAAAC,QAAa;MAAA,OAAAC,SAAuB,CAAAR,KAAA,CAAAS,OAAA,MAAAd,gBAAA,CAAAe,KAAA;IAAA;IACtDC,OAAA,CAAAC,qBAAA;MAEAN,UAA+B,EAA/BA,UAA+B;MAC7B7B,EAAA,EAAAA,EAAA;MACAW,IAAA,EAAAyB,QAAA,CAAAzB,IAAA;MACA0B,OAAA,EAAAf,KAAA,CAAeC,KAAI;MACnBI,MAAA,WAAAA,OAASW,KAAM;QACfX,OAAQ,CAACW,KAAkB;MACzB;MACFV,OAAA,WAAAA,QAAAU,KAAA;QACAV,QAAS,CAACU,KAAkB;MAC1B;MACFC,QAAA,WAAAA,SAAAD,KAAA;QACA,IAAA9B,KAAW,CAAkBG,IAAA;UACvBiB,QAAA,CAAMU,KAAO;QACf;UACKX,OAAA,CAAAW,KAAA;QACL;MAAY,CACd;MACFE,MAAA,WAAAA,OAAA;QAAAC,IAAA,OACc,EAAA7B,YAAA,CAAAqB,KAAA;MACZ,CAAK;MACPS,MAAA,WAAAA,OAAA;QAAAD,IAAA,OACc,EAAA7B,YAAA,CAAAqB,KAAA;MACZ,CAAK;MACPU,YAAA,WAAAA,aAAA;QAAAF,IAAA,cACoB,EAAA7B,YAAA,CAAAqB,KAAA;MAClB,CAAK;MACPW,YAAA,WAAAA,aAAA;QAAAH,IAAA,cACoB,EAAA7B,YAAA,CAAAqB,KAAA;MAClB,CAAK;MACP5B,YAAA,EAAAA;IAAA,CACA;IACFwC,KAAC;MAAA,OAAAtB,KAAA,CAAAuB,QAAA;IAAA,aAAAA,QAAA;MAED,IAAAA,QAAA,IAAAnC,IAAA,CAAAsB,KAAA;QAAAtB,IACQ,CAAMsB,KAAA;MAAA;IAEV,CAAI;IACF,IAAAc,oBAAa,YAAbA,oBAAaA,CAAAT,KAAA;MACf,IAAAhC,EAAA;MACF,QAAAA,EAAA,GAAAF,UAAA,CAAA6B,KAAA,qBAAA3B,EAAA,CAAAyC,oBAAA,CAAAT,KAAA;IAAA,CACF;IAEMU,aAAA;MAAA,OAAArC,IAAA,CAAAsB,KAAwB,IAAuBhB,IAAA;IAAA;IAC5CgC,MAAA;MACT/C,SAAA,EAAAA,SAAA;MAEAE,UAAA,EAAAA,UAAA;MAUG2C,oBAAA,EAAAA,oBAAA;MAAA1C,YAAA,EAAAA,YAAA;MAAAsB,MAAA,EAAAA,OAAA;MAAAC,OAAA,EAAAA,QAAA;MAIDX,IAAA,EAAAA;IAAA;IAAA,iBAAAiC,IAAA,EAAAC,MAAA;MAAA,OAAAC,SAAA,IAAAC,WAAA,CAAA7C,KAAA,CAAA8C,QAAA;QAIAC,OAAA;QAAApD,GAAA,EAAAD,SAAA;QAAAsD,IAAA,EAAAN,IAAA,CAAAM;MAAA;QAIA,WAAAC,OAAA;UAAA,QAAAC,WAAA,CAAAC,gBAAA;YAAAb,QAAA,EAAAI,IAAA,CAAAJ,QAAA;YAAAT,OAAA,EAAAa,IAAA,CAAAb,OAAA;YAIA,gBAAAa,IAAA,CAAAU,WAAA;YAAA,eAAAV,IAAA,CAAAW,UAAA;YAAA,sBAAAX,IAAA,CAAAY;UAAA;YAIA,WAAAL,OAAA;cAAA,QAAAP,IAAA,CAAAa,MAAA,cAAAC,UAAA,CAAAd,IAAA,CAAAa,MAAA;gBAAAE,GAAA;cAAA,KAAAC,kBAAA;YAAA;YAAAC,CAAA;UAAA,CAIA,oFAAAT,WAAA,CAAAU,gBAAA;YAAAb,OAAA;YAAApD,GAAA,EAAAC,UAAA;YAIA,cAAA8C,IAAA,CAAAmB,SAAA;YACD,sBAAAnB,IAAA,CAAAoB,iBAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}