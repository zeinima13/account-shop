{"ast":null,"code":"import { watch, unref, nextTick } from 'vue';\nvar useDelayedRender = function useDelayedRender(_ref) {\n  var indicator = _ref.indicator,\n    intermediateIndicator = _ref.intermediateIndicator,\n    _ref$shouldSetInterme = _ref.shouldSetIntermediate,\n    shouldSetIntermediate = _ref$shouldSetInterme === void 0 ? function () {\n      return true;\n    } : _ref$shouldSetInterme,\n    beforeShow = _ref.beforeShow,\n    afterShow = _ref.afterShow,\n    afterHide = _ref.afterHide,\n    beforeHide = _ref.beforeHide;\n  watch(function () {\n    return unref(indicator);\n  }, function (val) {\n    if (val) {\n      beforeShow == null ? void 0 : beforeShow();\n      nextTick(function () {\n        if (!unref(indicator)) return;\n        if (shouldSetIntermediate(\"show\")) {\n          intermediateIndicator.value = true;\n        }\n      });\n    } else {\n      beforeHide == null ? void 0 : beforeHide();\n      nextTick(function () {\n        if (unref(indicator)) return;\n        if (shouldSetIntermediate(\"hide\")) {\n          intermediateIndicator.value = false;\n        }\n      });\n    }\n  });\n  watch(function () {\n    return intermediateIndicator.value;\n  }, function (val) {\n    if (val) {\n      afterShow == null ? void 0 : afterShow();\n    } else {\n      afterHide == null ? void 0 : afterHide();\n    }\n  });\n};\nexport { useDelayedRender };","map":{"version":3,"names":["useDelayedRender","_ref","indicator","intermediateIndicator","_ref$shouldSetInterme","shouldSetIntermediate","beforeShow","afterShow","afterHide","beforeHide","watch","unref","val","nextTick","value"],"sources":["../../../../../packages/hooks/use-intermediate-render/index.ts"],"sourcesContent":["import { nextTick, unref, watch } from 'vue'\n\nimport type { Ref } from 'vue'\n\nexport type UseDelayedRenderProps = {\n  indicator: Ref<boolean>\n  intermediateIndicator: Ref<boolean>\n  shouldSetIntermediate?: (step: 'show' | 'hide') => boolean\n  beforeShow?: () => void\n  beforeHide?: () => void\n  afterShow?: () => void\n  afterHide?: () => void\n}\n\nexport const useDelayedRender = ({\n  indicator,\n  intermediateIndicator,\n  shouldSetIntermediate = () => true,\n  beforeShow,\n  afterShow,\n  afterHide,\n  beforeHide,\n}: UseDelayedRenderProps) => {\n  watch(\n    () => unref(indicator),\n    (val) => {\n      if (val) {\n        beforeShow?.()\n        nextTick(() => {\n          if (!unref(indicator)) return\n          if (shouldSetIntermediate('show')) {\n            intermediateIndicator.value = true\n          }\n        })\n      } else {\n        beforeHide?.()\n        nextTick(() => {\n          if (unref(indicator)) return\n\n          if (shouldSetIntermediate('hide')) {\n            intermediateIndicator.value = false\n          }\n        })\n      }\n    }\n  )\n\n  // because we don't always set the value ourselves, so that we\n  // simply watch the value's state, then invoke the corresponding hook.\n  watch(\n    () => intermediateIndicator.value,\n    (val) => {\n      if (val) {\n        afterShow?.()\n      } else {\n        afterHide?.()\n      }\n    }\n  )\n}\n"],"mappings":";AACY,IAACA,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAAC,IAAA,EAQvB;EAAA,IAPJC,SAAS,GAAAD,IAAA,CAATC,SAAS;IACTC,qBAAqB,GAAAF,IAAA,CAArBE,qBAAqB;IAAAC,qBAAA,GAAAH,IAAA,CACrBI,qBAAqB;IAArBA,qBAAqB,GAAAD,qBAAA,cAAG;MAAA,OAAM,IAAI;IAAA,IAAAA,qBAAA;IAClCE,UAAU,GAAAL,IAAA,CAAVK,UAAU;IACVC,SAAS,GAAAN,IAAA,CAATM,SAAS;IACTC,SAAS,GAAAP,IAAA,CAATO,SAAS;IACTC,UAAU,GAAAR,IAAA,CAAVQ,UAAU;EAEVC,KAAK,CAAC;IAAA,OAAMC,KAAK,CAACT,SAAS,CAAC;EAAA,GAAE,UAACU,GAAG,EAAK;IACrC,IAAIA,GAAG,EAAE;MACPN,UAAU,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,UAAU,EAAE;MAC1CO,QAAQ,CAAC,YAAM;QACb,IAAI,CAACF,KAAK,CAACT,SAAS,CAAC,EACnB;QACF,IAAIG,qBAAqB,CAAC,MAAM,CAAC,EAAE;UACjCF,qBAAqB,CAACW,KAAK,GAAG,IAAI;QAC5C;MACA,CAAO,CAAC;IACR,CAAK,MAAM;MACLL,UAAU,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,UAAU,EAAE;MAC1CI,QAAQ,CAAC,YAAM;QACb,IAAIF,KAAK,CAACT,SAAS,CAAC,EAClB;QACF,IAAIG,qBAAqB,CAAC,MAAM,CAAC,EAAE;UACjCF,qBAAqB,CAACW,KAAK,GAAG,KAAK;QAC7C;MACA,CAAO,CAAC;IACR;EACA,CAAG,CAAC;EACFJ,KAAK,CAAC;IAAA,OAAMP,qBAAqB,CAACW,KAAK;EAAA,GAAE,UAACF,GAAG,EAAK;IAChD,IAAIA,GAAG,EAAE;MACPL,SAAS,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,SAAS,EAAE;IAC9C,CAAK,MAAM;MACLC,SAAS,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,SAAS,EAAE;IAC9C;EACA,CAAG,CAAC;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}