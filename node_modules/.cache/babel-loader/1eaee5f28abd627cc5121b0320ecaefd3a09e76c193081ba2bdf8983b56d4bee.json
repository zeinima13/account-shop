{"ast":null,"code":"import _objectSpread from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { defineComponent, ref, computed, openBlock, createBlock, unref, mergeProps, withCtx, createElementVNode, normalizeClass, normalizeStyle, resolveDynamicComponent, createCommentVNode, createTextVNode, toDisplayString, renderSlot, createVNode } from 'vue';\nimport { ElButton } from '../../button/index.mjs';\nimport { ElIcon } from '../../icon/index.mjs';\nimport { ElTooltip } from '../../tooltip/index.mjs';\nimport { popconfirmProps, popconfirmEmits } from './popconfirm.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useLocale } from '../../../hooks/use-locale/index.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { addUnit } from '../../../utils/dom/style.mjs';\nvar __default__ = defineComponent({\n  name: \"ElPopconfirm\"\n});\nvar _sfc_main = /* @__PURE__ */defineComponent(_objectSpread(_objectSpread({}, __default__), {}, {\n  props: popconfirmProps,\n  emits: popconfirmEmits,\n  setup: function setup(__props, _ref) {\n    var emit = _ref.emit;\n    var props = __props;\n    var _useLocale = useLocale(),\n      t = _useLocale.t;\n    var ns = useNamespace(\"popconfirm\");\n    var tooltipRef = ref();\n    var hidePopper = function hidePopper() {\n      var _a, _b;\n      (_b = (_a = tooltipRef.value) == null ? void 0 : _a.onClose) == null ? void 0 : _b.call(_a);\n    };\n    var style = computed(function () {\n      return {\n        width: addUnit(props.width)\n      };\n    });\n    var confirm = function confirm(e) {\n      emit(\"confirm\", e);\n      hidePopper();\n    };\n    var cancel = function cancel(e) {\n      emit(\"cancel\", e);\n      hidePopper();\n    };\n    var finalConfirmButtonText = computed(function () {\n      return props.confirmButtonText || t(\"el.popconfirm.confirmButtonText\");\n    });\n    var finalCancelButtonText = computed(function () {\n      return props.cancelButtonText || t(\"el.popconfirm.cancelButtonText\");\n    });\n    return function (_ctx, _cache) {\n      return openBlock(), createBlock(unref(ElTooltip), mergeProps({\n        ref_key: \"tooltipRef\",\n        ref: tooltipRef,\n        trigger: \"click\",\n        effect: \"light\"\n      }, _ctx.$attrs, {\n        \"popper-class\": \"\".concat(unref(ns).namespace.value, \"-popover\"),\n        \"popper-style\": unref(style),\n        teleported: _ctx.teleported,\n        \"fallback-placements\": [\"bottom\", \"top\", \"right\", \"left\"],\n        \"hide-after\": _ctx.hideAfter,\n        persistent: _ctx.persistent\n      }), {\n        content: withCtx(function () {\n          return [createElementVNode(\"div\", {\n            \"class\": normalizeClass(unref(ns).b())\n          }, [createElementVNode(\"div\", {\n            \"class\": normalizeClass(unref(ns).e(\"main\"))\n          }, [!_ctx.hideIcon && _ctx.icon ? (openBlock(), createBlock(unref(ElIcon), {\n            key: 0,\n            \"class\": normalizeClass(unref(ns).e(\"icon\")),\n            style: normalizeStyle({\n              color: _ctx.iconColor\n            })\n          }, {\n            \"default\": withCtx(function () {\n              return [(openBlock(), createBlock(resolveDynamicComponent(_ctx.icon)))];\n            }),\n            _: 1\n          }, 8, [\"class\", \"style\"])) : createCommentVNode(\"v-if\", true), createTextVNode(\" \" + toDisplayString(_ctx.title), 1)], 2), createElementVNode(\"div\", {\n            \"class\": normalizeClass(unref(ns).e(\"action\"))\n          }, [renderSlot(_ctx.$slots, \"actions\", {\n            confirm: confirm,\n            cancel: cancel\n          }, function () {\n            return [createVNode(unref(ElButton), {\n              size: \"small\",\n              type: _ctx.cancelButtonType === \"text\" ? \"\" : _ctx.cancelButtonType,\n              text: _ctx.cancelButtonType === \"text\",\n              onClick: cancel\n            }, {\n              \"default\": withCtx(function () {\n                return [createTextVNode(toDisplayString(unref(finalCancelButtonText)), 1)];\n              }),\n              _: 1\n            }, 8, [\"type\", \"text\"]), createVNode(unref(ElButton), {\n              size: \"small\",\n              type: _ctx.confirmButtonType === \"text\" ? \"\" : _ctx.confirmButtonType,\n              text: _ctx.confirmButtonType === \"text\",\n              onClick: confirm\n            }, {\n              \"default\": withCtx(function () {\n                return [createTextVNode(toDisplayString(unref(finalConfirmButtonText)), 1)];\n              }),\n              _: 1\n            }, 8, [\"type\", \"text\"])];\n          })], 2)], 2)];\n        }),\n        \"default\": withCtx(function () {\n          return [_ctx.$slots.reference ? renderSlot(_ctx.$slots, \"reference\", {\n            key: 0\n          }) : createCommentVNode(\"v-if\", true)];\n        }),\n        _: 3\n      }, 16, [\"popper-class\", \"popper-style\", \"teleported\", \"hide-after\", \"persistent\"]);\n    };\n  }\n}));\nvar Popconfirm = /* @__PURE__ */_export_sfc(_sfc_main, [[\"__file\", \"popconfirm.vue\"]]);\nexport { Popconfirm as default };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}