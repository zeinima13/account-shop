{"ast":null,"code":"import _defineProperty from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport { buildProps, definePropType } from '../../../utils/vue/props/runtime.mjs';\nimport { useSizeProp } from '../../../hooks/use-size/index.mjs';\nimport { useAriaProps } from '../../../hooks/use-aria/index.mjs';\nimport { UPDATE_MODEL_EVENT } from '../../../constants/event.mjs';\nimport { isArray } from '@vue/shared';\nvar checkboxGroupProps = buildProps(_objectSpread({\n  modelValue: {\n    type: definePropType(Array),\n    \"default\": function _default() {\n      return [];\n    }\n  },\n  disabled: Boolean,\n  min: Number,\n  max: Number,\n  size: useSizeProp,\n  fill: String,\n  textColor: String,\n  tag: {\n    type: String,\n    \"default\": \"div\"\n  },\n  validateEvent: {\n    type: Boolean,\n    \"default\": true\n  }\n}, useAriaProps([\"ariaLabel\"])));\nvar checkboxGroupEmits = _defineProperty(_defineProperty({}, UPDATE_MODEL_EVENT, function (val) {\n  return isArray(val);\n}), \"change\", function change(val) {\n  return isArray(val);\n});\nexport { checkboxGroupEmits, checkboxGroupProps };","map":{"version":3,"names":["checkboxGroupProps","buildProps","_objectSpread","modelValue","type","definePropType","Array","default","disabled","Boolean","min","Number","max","size","useSizeProp","fill","String","textColor","tag","validateEvent","useAriaProps","checkboxGroupEmits","_defineProperty","UPDATE_MODEL_EVENT","val","isArray","change"],"sources":["../../../../../../packages/components/checkbox/src/checkbox-group.ts"],"sourcesContent":["import { UPDATE_MODEL_EVENT } from '@element-plus/constants'\nimport { useAriaProps, useSizeProp } from '@element-plus/hooks'\nimport { buildProps, definePropType, isArray } from '@element-plus/utils'\n\nimport type { ExtractPropTypes } from 'vue'\nimport type checkboxGroup from './checkbox-group.vue'\nimport type { CheckboxValueType } from './checkbox'\n\nexport type CheckboxGroupValueType = Exclude<CheckboxValueType, boolean>[]\n\nexport const checkboxGroupProps = buildProps({\n  /**\n   * @description binding value\n   */\n  modelValue: {\n    type: definePropType<CheckboxGroupValueType>(Array),\n    default: () => [],\n  },\n  /**\n   * @description whether the nesting checkboxes are disabled\n   */\n  disabled: Boolean,\n  /**\n   * @description minimum number of checkbox checked\n   */\n  min: Number,\n  /**\n   * @description maximum number of checkbox checked\n   */\n  max: Number,\n  /**\n   * @description size of checkbox\n   */\n  size: useSizeProp,\n  /**\n   * @description border and background color when button is active\n   */\n  fill: String,\n  /**\n   * @description font color when button is active\n   */\n  textColor: String,\n  /**\n   * @description element tag of the checkbox group\n   */\n  tag: {\n    type: String,\n    default: 'div',\n  },\n  /**\n   * @description whether to trigger form validation\n   */\n  validateEvent: {\n    type: Boolean,\n    default: true,\n  },\n  ...useAriaProps(['ariaLabel']),\n} as const)\n\nexport const checkboxGroupEmits = {\n  [UPDATE_MODEL_EVENT]: (val: CheckboxGroupValueType) => isArray(val),\n  change: (val: CheckboxValueType[]) => isArray(val),\n}\n\nexport type CheckboxGroupProps = ExtractPropTypes<typeof checkboxGroupProps>\nexport type CheckboxGroupEmits = typeof checkboxGroupEmits\nexport type CheckboxGroupInstance = InstanceType<typeof checkboxGroup>\n"],"mappings":";;;;;;;;AAGY,IAACA,kBAAkB,GAAGC,UAAU,CAAAC,aAAA;EAC1CC,UAAU,EAAE;IACVC,IAAI,EAAEC,cAAc,CAACC,KAAK,CAAC;IAC3B,WAAS,SAATC,QAAOA,CAAA;MAAA,OAAQ,EAAE;IAAA;EACrB,CAAG;EACDC,QAAQ,EAAEC,OAAO;EACjBC,GAAG,EAAEC,MAAM;EACXC,GAAG,EAAED,MAAM;EACXE,IAAI,EAAEC,WAAW;EACjBC,IAAI,EAAEC,MAAM;EACZC,SAAS,EAAED,MAAM;EACjBE,GAAG,EAAE;IACHd,IAAI,EAAEY,MAAM;IACZ,WAAS;EACb,CAAG;EACDG,aAAa,EAAE;IACbf,IAAI,EAAEK,OAAO;IACb,WAAS;EACb;AAAG,GACEW,YAAY,CAAC,CAAC,WAAW,CAAC,CAAC,CAC/B;AACW,IAACC,kBAAkB,GAAAC,eAAA,CAAAA,eAAA,KAC5BC,kBAAkB,EAAG,UAACC,GAAG;EAAA,OAAKC,OAAO,CAACD,GAAG,CAAC;AAAA,cACnC,SAARE,MAAMA,CAAGF,GAAG;EAAA,OAAKC,OAAO,CAACD,GAAG,CAAC;AAAA,EAC/B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}