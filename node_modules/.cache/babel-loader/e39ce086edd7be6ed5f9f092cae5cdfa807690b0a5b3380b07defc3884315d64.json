{"ast":null,"code":"import _toConsumableArray from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.every.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.reduce.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.every.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport \"core-js/modules/esnext.iterator.reduce.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport { isVNode, defineComponent, renderSlot, createVNode, createTextVNode } from 'vue';\nimport SpaceItem from './item.mjs';\nimport { useSpace } from './use-space.mjs';\nimport { PatchFlags, isFragment, isValidElementNode } from '../../../utils/vue/vnode.mjs';\nimport { buildProps, definePropType } from '../../../utils/vue/props/runtime.mjs';\nimport { isNumber } from '../../../utils/types.mjs';\nimport { isString, isArray } from '@vue/shared';\nimport { componentSizes } from '../../../constants/size.mjs';\nvar spaceProps = buildProps({\n  direction: {\n    type: String,\n    values: [\"horizontal\", \"vertical\"],\n    \"default\": \"horizontal\"\n  },\n  \"class\": {\n    type: definePropType([String, Object, Array]),\n    \"default\": \"\"\n  },\n  style: {\n    type: definePropType([String, Array, Object]),\n    \"default\": \"\"\n  },\n  alignment: {\n    type: definePropType(String),\n    \"default\": \"center\"\n  },\n  prefixCls: {\n    type: String\n  },\n  spacer: {\n    type: definePropType([Object, String, Number, Array]),\n    \"default\": null,\n    validator: function validator(val) {\n      return isVNode(val) || isNumber(val) || isString(val);\n    }\n  },\n  wrap: Boolean,\n  fill: Boolean,\n  fillRatio: {\n    type: Number,\n    \"default\": 100\n  },\n  size: {\n    type: [String, Array, Number],\n    values: componentSizes,\n    validator: function validator(val) {\n      return isNumber(val) || isArray(val) && val.length === 2 && val.every(isNumber);\n    }\n  }\n});\nvar Space = defineComponent({\n  name: \"ElSpace\",\n  props: spaceProps,\n  setup: function setup(props, _ref) {\n    var slots = _ref.slots;\n    var _useSpace = useSpace(props),\n      classes = _useSpace.classes,\n      containerStyle = _useSpace.containerStyle,\n      itemStyle = _useSpace.itemStyle;\n    function extractChildren(children) {\n      var parentKey = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n      var extractedChildren = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n      var prefixCls = props.prefixCls;\n      children.forEach(function (child, loopKey) {\n        if (isFragment(child)) {\n          if (isArray(child.children)) {\n            child.children.forEach(function (nested, key) {\n              if (isFragment(nested) && isArray(nested.children)) {\n                extractChildren(nested.children, \"\".concat(parentKey + key, \"-\"), extractedChildren);\n              } else {\n                extractedChildren.push(createVNode(SpaceItem, {\n                  style: itemStyle.value,\n                  prefixCls: prefixCls,\n                  key: \"nested-\".concat(parentKey + key)\n                }, {\n                  \"default\": function _default() {\n                    return [nested];\n                  }\n                }, PatchFlags.PROPS | PatchFlags.STYLE, [\"style\", \"prefixCls\"]));\n              }\n            });\n          }\n        } else if (isValidElementNode(child)) {\n          extractedChildren.push(createVNode(SpaceItem, {\n            style: itemStyle.value,\n            prefixCls: prefixCls,\n            key: \"LoopKey\".concat(parentKey + loopKey)\n          }, {\n            \"default\": function _default() {\n              return [child];\n            }\n          }, PatchFlags.PROPS | PatchFlags.STYLE, [\"style\", \"prefixCls\"]));\n        }\n      });\n      return extractedChildren;\n    }\n    return function () {\n      var _a;\n      var spacer = props.spacer,\n        direction = props.direction;\n      var children = renderSlot(slots, \"default\", {\n        key: 0\n      }, function () {\n        return [];\n      });\n      if (((_a = children.children) != null ? _a : []).length === 0) return null;\n      if (isArray(children.children)) {\n        var extractedChildren = extractChildren(children.children);\n        if (spacer) {\n          var len = extractedChildren.length - 1;\n          extractedChildren = extractedChildren.reduce(function (acc, child, idx) {\n            var children2 = [].concat(_toConsumableArray(acc), [child]);\n            if (idx !== len) {\n              children2.push(createVNode(\"span\", {\n                style: [itemStyle.value, direction === \"vertical\" ? \"width: 100%\" : null],\n                key: idx\n              }, [isVNode(spacer) ? spacer : createTextVNode(spacer, PatchFlags.TEXT)], PatchFlags.STYLE));\n            }\n            return children2;\n          }, []);\n        }\n        return createVNode(\"div\", {\n          \"class\": classes.value,\n          style: containerStyle.value\n        }, extractedChildren, PatchFlags.STYLE | PatchFlags.CLASS);\n      }\n      return children.children;\n    };\n  }\n});\nexport { Space as default, spaceProps };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}