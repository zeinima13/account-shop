{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport \"element-plus/theme-chalk/el-message.css\";\nimport _ElMessage from \"element-plus/lib/el-message\";\nimport _asyncToGenerator from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport { createElementVNode as _createElementVNode, unref as _unref, createVNode as _createVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"login-container\"\n};\nvar _hoisted_2 = {\n  \"class\": \"login-box\"\n};\nimport { ref, reactive } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { User, Lock } from '@element-plus/icons-vue';\nexport default {\n  __name: 'Login',\n  setup: function setup(__props) {\n    var router = useRouter();\n    var loading = ref(false);\n    var loginForm = reactive({\n      username: '',\n      password: ''\n    });\n    var loginRules = {\n      username: [{\n        required: true,\n        message: '请输入用户名',\n        trigger: 'blur'\n      }],\n      password: [{\n        required: true,\n        message: '请输入密码',\n        trigger: 'blur'\n      }]\n    };\n    var handleLogin = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              if (!loading.value) {\n                _context.next = 2;\n                break;\n              }\n              return _context.abrupt(\"return\");\n            case 2:\n              loading.value = true;\n              try {\n                // 这里应该调用真实的登录API\n                // 现在为了演示，使用硬编码的用户名和密码\n                if (loginForm.username === 'admin' && loginForm.password === 'admin123') {\n                  localStorage.setItem('adminToken', 'demo-token');\n                  _ElMessage.success('登录成功');\n                  router.push('/admin/products');\n                } else {\n                  _ElMessage.error('用户名或密码错误');\n                }\n              } catch (error) {\n                _ElMessage.error('登录失败，请重试');\n              } finally {\n                loading.value = false;\n              }\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n      return function handleLogin() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    return function (_ctx, _cache) {\n      var _component_el_icon = _resolveComponent(\"el-icon\");\n      var _component_el_input = _resolveComponent(\"el-input\");\n      var _component_el_form_item = _resolveComponent(\"el-form-item\");\n      var _component_el_button = _resolveComponent(\"el-button\");\n      var _component_el_form = _resolveComponent(\"el-form\");\n      return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_cache[2] || (_cache[2] = _createElementVNode(\"h2\", null, \"管理员登录\", -1)), _createVNode(_component_el_form, {\n        ref: \"loginForm\",\n        model: loginForm,\n        rules: loginRules,\n        onSubmit: _withModifiers(handleLogin, [\"prevent\"])\n      }, {\n        \"default\": _withCtx(function () {\n          return [_createVNode(_component_el_form_item, {\n            prop: \"username\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_input, {\n                modelValue: loginForm.username,\n                \"onUpdate:modelValue\": _cache[0] || (_cache[0] = function ($event) {\n                  return loginForm.username = $event;\n                }),\n                placeholder: \"请输入用户名\"\n              }, {\n                prefix: _withCtx(function () {\n                  return [_createVNode(_component_el_icon, null, {\n                    \"default\": _withCtx(function () {\n                      return [_createVNode(_unref(User))];\n                    }),\n                    _: 1\n                  })];\n                }),\n                _: 1\n              }, 8, [\"modelValue\"])];\n            }),\n            _: 1\n          }), _createVNode(_component_el_form_item, {\n            prop: \"password\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_input, {\n                modelValue: loginForm.password,\n                \"onUpdate:modelValue\": _cache[1] || (_cache[1] = function ($event) {\n                  return loginForm.password = $event;\n                }),\n                type: \"password\",\n                placeholder: \"请输入密码\",\n                \"show-password\": \"\"\n              }, {\n                prefix: _withCtx(function () {\n                  return [_createVNode(_component_el_icon, null, {\n                    \"default\": _withCtx(function () {\n                      return [_createVNode(_unref(Lock))];\n                    }),\n                    _: 1\n                  })];\n                }),\n                _: 1\n              }, 8, [\"modelValue\"])];\n            }),\n            _: 1\n          }), _createVNode(_component_el_form_item, null, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_button, {\n                type: \"primary\",\n                \"class\": \"submit-button\",\n                loading: loading.value,\n                onClick: handleLogin\n              }, {\n                \"default\": _withCtx(function () {\n                  return [_createTextVNode(_toDisplayString(loading.value ? '登录中...' : '登录'), 1)];\n                }),\n                _: 1\n              }, 8, [\"loading\"])];\n            }),\n            _: 1\n          })];\n        }),\n        _: 1\n      }, 8, [\"model\"])])]);\n    };\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}