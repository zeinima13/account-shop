{"ast":null,"code":"import _objectSpread from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport { useEmptyValuesProps } from '../../../hooks/use-empty-values/index.mjs';\nimport { buildProps, definePropType } from '../../../utils/vue/props/runtime.mjs';\nimport { useSizeProp } from '../../../hooks/use-size/index.mjs';\nvar configProviderProps = buildProps(_objectSpread({\n  a11y: {\n    type: Boolean,\n    \"default\": true\n  },\n  locale: {\n    type: definePropType(Object)\n  },\n  size: useSizeProp,\n  button: {\n    type: definePropType(Object)\n  },\n  experimentalFeatures: {\n    type: definePropType(Object)\n  },\n  keyboardNavigation: {\n    type: Boolean,\n    \"default\": true\n  },\n  message: {\n    type: definePropType(Object)\n  },\n  zIndex: Number,\n  namespace: {\n    type: String,\n    \"default\": \"el\"\n  }\n}, useEmptyValuesProps));\nexport { configProviderProps };","map":{"version":3,"names":["configProviderProps","buildProps","_objectSpread","a11y","type","Boolean","locale","definePropType","Object","size","useSizeProp","button","experimentalFeatures","keyboardNavigation","message","zIndex","Number","namespace","String","useEmptyValuesProps"],"sources":["../../../../../../packages/components/config-provider/src/config-provider-props.ts"],"sourcesContent":["import { buildProps, definePropType } from '@element-plus/utils'\nimport { useEmptyValuesProps, useSizeProp } from '@element-plus/hooks'\n\nimport type { ExtractPropTypes } from 'vue'\nimport type { Language } from '@element-plus/locale'\nimport type { ButtonConfigContext } from '@element-plus/components/button'\nimport type { MessageConfigContext } from '@element-plus/components/message'\n\n// eslint-disable-next-line @typescript-eslint/no-empty-object-type\nexport type ExperimentalFeatures = {\n  // TO BE Defined\n}\n\nexport const configProviderProps = buildProps({\n  /**\n   * @description Controlling if the users want a11y features\n   */\n  a11y: {\n    type: Boolean,\n    default: true,\n  },\n  /**\n   * @description Locale Object\n   */\n  locale: {\n    type: definePropType<Language>(Object),\n  },\n  /**\n   * @description global component size\n   */\n  size: useSizeProp,\n  /**\n   * @description button related configuration, [see the following table](#button-attributes)\n   */\n  button: {\n    type: definePropType<ButtonConfigContext>(Object),\n  },\n  /**\n   * @description features at experimental stage to be added, all features are default to be set to false                                                                                | ^[object]\n   */\n  experimentalFeatures: {\n    type: definePropType<ExperimentalFeatures>(Object),\n  },\n  /**\n   * @description Controls if we should handle keyboard navigation\n   */\n  keyboardNavigation: {\n    type: Boolean,\n    default: true,\n  },\n  /**\n   * @description message related configuration, [see the following table](#message-attributes)\n   */\n  message: {\n    type: definePropType<MessageConfigContext>(Object),\n  },\n  /**\n   * @description global Initial zIndex\n   */\n  zIndex: Number,\n  /**\n   * @description global component className prefix (cooperated with [$namespace](https://github.com/element-plus/element-plus/blob/dev/packages/theme-chalk/src/mixins/config.scss#L1)) | ^[string]\n   */\n  namespace: {\n    type: String,\n    default: 'el',\n  },\n  ...useEmptyValuesProps,\n} as const)\nexport type ConfigProviderProps = ExtractPropTypes<typeof configProviderProps>\n"],"mappings":";;;;;AAEY,IAACA,mBAAmB,GAAGC,UAAU,CAAAC,aAAA;EAC3CC,IAAI,EAAE;IACJC,IAAI,EAAEC,OAAO;IACb,WAAS;EACb,CAAG;EACDC,MAAM,EAAE;IACNF,IAAI,EAAEG,cAAc,CAACC,MAAM;EAC/B,CAAG;EACDC,IAAI,EAAEC,WAAW;EACjBC,MAAM,EAAE;IACNP,IAAI,EAAEG,cAAc,CAACC,MAAM;EAC/B,CAAG;EACDI,oBAAoB,EAAE;IACpBR,IAAI,EAAEG,cAAc,CAACC,MAAM;EAC/B,CAAG;EACDK,kBAAkB,EAAE;IAClBT,IAAI,EAAEC,OAAO;IACb,WAAS;EACb,CAAG;EACDS,OAAO,EAAE;IACPV,IAAI,EAAEG,cAAc,CAACC,MAAM;EAC/B,CAAG;EACDO,MAAM,EAAEC,MAAM;EACdC,SAAS,EAAE;IACTb,IAAI,EAAEc,MAAM;IACZ,WAAS;EACb;AAAG,GACEC,mBAAmB,CACvB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}