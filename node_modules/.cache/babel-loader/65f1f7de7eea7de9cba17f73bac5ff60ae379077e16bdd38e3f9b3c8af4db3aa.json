{"ast":null,"code":"import _slicedToArray from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _objectSpread from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport { defineComponent, ref, inject, getCurrentInstance, onMounted, watch, onBeforeUnmount, computed, reactive, openBlock, createElementBlock, normalizeStyle, unref, normalizeClass, createCommentVNode, createElementVNode, renderSlot, createBlock, withCtx, resolveDynamicComponent, createVNode, toDisplayString, createTextVNode } from 'vue';\nimport { ElIcon } from '../../icon/index.mjs';\nimport { Check, Close } from '@element-plus/icons-vue';\nimport { stepProps } from './item.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { isNumber } from '../../../utils/types.mjs';\nvar __default__ = defineComponent({\n  name: \"ElStep\"\n});\nvar _sfc_main = defineComponent(_objectSpread(_objectSpread({}, __default__), {}, {\n  props: stepProps,\n  setup: function setup(__props) {\n    var props = __props;\n    var ns = useNamespace(\"step\");\n    var index = ref(-1);\n    var lineStyle = ref({});\n    var internalStatus = ref(\"\");\n    var parent = inject(\"ElSteps\");\n    var currentInstance = getCurrentInstance();\n    onMounted(function () {\n      watch([function () {\n        return parent.props.active;\n      }, function () {\n        return parent.props.processStatus;\n      }, function () {\n        return parent.props.finishStatus;\n      }], function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 1),\n          active = _ref2[0];\n        updateStatus(active);\n      }, {\n        immediate: true\n      });\n    });\n    onBeforeUnmount(function () {\n      parent.removeStep(stepItemState.uid);\n    });\n    var currentStatus = computed(function () {\n      return props.status || internalStatus.value;\n    });\n    var prevStatus = computed(function () {\n      var prevStep = parent.steps.value[index.value - 1];\n      return prevStep ? prevStep.currentStatus : \"wait\";\n    });\n    var isCenter = computed(function () {\n      return parent.props.alignCenter;\n    });\n    var isVertical = computed(function () {\n      return parent.props.direction === \"vertical\";\n    });\n    var isSimple = computed(function () {\n      return parent.props.simple;\n    });\n    var stepsCount = computed(function () {\n      return parent.steps.value.length;\n    });\n    var isLast = computed(function () {\n      var _a;\n      return ((_a = parent.steps.value[stepsCount.value - 1]) == null ? void 0 : _a.uid) === (currentInstance == null ? void 0 : currentInstance.uid);\n    });\n    var space = computed(function () {\n      return isSimple.value ? \"\" : parent.props.space;\n    });\n    var containerKls = computed(function () {\n      return [ns.b(), ns.is(isSimple.value ? \"simple\" : parent.props.direction), ns.is(\"flex\", isLast.value && !space.value && !isCenter.value), ns.is(\"center\", isCenter.value && !isVertical.value && !isSimple.value)];\n    });\n    var style = computed(function () {\n      var style2 = {\n        flexBasis: isNumber(space.value) ? \"\".concat(space.value, \"px\") : space.value ? space.value : \"\".concat(100 / (stepsCount.value - (isCenter.value ? 0 : 1)), \"%\")\n      };\n      if (isVertical.value) return style2;\n      if (isLast.value) {\n        style2.maxWidth = \"\".concat(100 / stepsCount.value, \"%\");\n      }\n      return style2;\n    });\n    var setIndex = function setIndex(val) {\n      index.value = val;\n    };\n    var calcProgress = function calcProgress(status) {\n      var isWait = status === \"wait\";\n      var style2 = {\n        transitionDelay: \"\".concat(isWait ? \"-\" : \"\").concat(150 * index.value, \"ms\")\n      };\n      var step = status === parent.props.processStatus || isWait ? 0 : 100;\n      style2.borderWidth = step && !isSimple.value ? \"1px\" : 0;\n      style2[parent.props.direction === \"vertical\" ? \"height\" : \"width\"] = \"\".concat(step, \"%\");\n      lineStyle.value = style2;\n    };\n    var updateStatus = function updateStatus(activeIndex) {\n      if (activeIndex > index.value) {\n        internalStatus.value = parent.props.finishStatus;\n      } else if (activeIndex === index.value && prevStatus.value !== \"error\") {\n        internalStatus.value = parent.props.processStatus;\n      } else {\n        internalStatus.value = \"wait\";\n      }\n      var prevChild = parent.steps.value[index.value - 1];\n      if (prevChild) prevChild.calcProgress(internalStatus.value);\n    };\n    var stepItemState = reactive({\n      uid: currentInstance.uid,\n      currentStatus: currentStatus,\n      setIndex: setIndex,\n      calcProgress: calcProgress\n    });\n    parent.addStep(stepItemState);\n    return function (_ctx, _cache) {\n      return openBlock(), createElementBlock(\"div\", {\n        style: normalizeStyle(unref(style)),\n        \"class\": normalizeClass(unref(containerKls))\n      }, [createCommentVNode(\" icon & line \"), createElementVNode(\"div\", {\n        \"class\": normalizeClass([unref(ns).e(\"head\"), unref(ns).is(unref(currentStatus))])\n      }, [!unref(isSimple) ? (openBlock(), createElementBlock(\"div\", {\n        key: 0,\n        \"class\": normalizeClass(unref(ns).e(\"line\"))\n      }, [createElementVNode(\"i\", {\n        \"class\": normalizeClass(unref(ns).e(\"line-inner\")),\n        style: normalizeStyle(lineStyle.value)\n      }, null, 6)], 2)) : createCommentVNode(\"v-if\", true), createElementVNode(\"div\", {\n        \"class\": normalizeClass([unref(ns).e(\"icon\"), unref(ns).is(_ctx.icon || _ctx.$slots.icon ? \"icon\" : \"text\")])\n      }, [renderSlot(_ctx.$slots, \"icon\", {}, function () {\n        return [_ctx.icon ? (openBlock(), createBlock(unref(ElIcon), {\n          key: 0,\n          \"class\": normalizeClass(unref(ns).e(\"icon-inner\"))\n        }, {\n          \"default\": withCtx(function () {\n            return [(openBlock(), createBlock(resolveDynamicComponent(_ctx.icon)))];\n          }),\n          _: 1\n        }, 8, [\"class\"])) : unref(currentStatus) === \"success\" ? (openBlock(), createBlock(unref(ElIcon), {\n          key: 1,\n          \"class\": normalizeClass([unref(ns).e(\"icon-inner\"), unref(ns).is(\"status\")])\n        }, {\n          \"default\": withCtx(function () {\n            return [createVNode(unref(Check))];\n          }),\n          _: 1\n        }, 8, [\"class\"])) : unref(currentStatus) === \"error\" ? (openBlock(), createBlock(unref(ElIcon), {\n          key: 2,\n          \"class\": normalizeClass([unref(ns).e(\"icon-inner\"), unref(ns).is(\"status\")])\n        }, {\n          \"default\": withCtx(function () {\n            return [createVNode(unref(Close))];\n          }),\n          _: 1\n        }, 8, [\"class\"])) : !unref(isSimple) ? (openBlock(), createElementBlock(\"div\", {\n          key: 3,\n          \"class\": normalizeClass(unref(ns).e(\"icon-inner\"))\n        }, toDisplayString(index.value + 1), 3)) : createCommentVNode(\"v-if\", true)];\n      })], 2)], 2), createCommentVNode(\" title & description \"), createElementVNode(\"div\", {\n        \"class\": normalizeClass(unref(ns).e(\"main\"))\n      }, [createElementVNode(\"div\", {\n        \"class\": normalizeClass([unref(ns).e(\"title\"), unref(ns).is(unref(currentStatus))])\n      }, [renderSlot(_ctx.$slots, \"title\", {}, function () {\n        return [createTextVNode(toDisplayString(_ctx.title), 1)];\n      })], 2), unref(isSimple) ? (openBlock(), createElementBlock(\"div\", {\n        key: 0,\n        \"class\": normalizeClass(unref(ns).e(\"arrow\"))\n      }, null, 2)) : (openBlock(), createElementBlock(\"div\", {\n        key: 1,\n        \"class\": normalizeClass([unref(ns).e(\"description\"), unref(ns).is(unref(currentStatus))])\n      }, [renderSlot(_ctx.$slots, \"description\", {}, function () {\n        return [createTextVNode(toDisplayString(_ctx.description), 1)];\n      })], 2))], 2)], 6);\n    };\n  }\n}));\nvar Step = /* @__PURE__ */_export_sfc(_sfc_main, [[\"__file\", \"item.vue\"]]);\nexport { Step as default };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}