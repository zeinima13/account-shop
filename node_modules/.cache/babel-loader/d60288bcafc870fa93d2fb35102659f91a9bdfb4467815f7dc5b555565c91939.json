{"ast":null,"code":"import _objectSpread from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { defineComponent, inject, watch, onBeforeUnmount, openBlock, createElementBlock, normalizeClass, unref, normalizeStyle } from 'vue';\nimport { POPPER_CONTENT_INJECTION_KEY } from './constants.mjs';\nimport { popperArrowProps } from './arrow.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nvar __default__ = defineComponent({\n  name: \"ElPopperArrow\",\n  inheritAttrs: false\n});\nvar _sfc_main = /* @__PURE__ */defineComponent(_objectSpread(_objectSpread({}, __default__), {}, {\n  props: popperArrowProps,\n  setup: function setup(__props, _ref) {\n    var expose = _ref.expose;\n    var props = __props;\n    var ns = useNamespace(\"popper\");\n    var _inject = inject(POPPER_CONTENT_INJECTION_KEY, void 0),\n      arrowOffset = _inject.arrowOffset,\n      arrowRef = _inject.arrowRef,\n      arrowStyle = _inject.arrowStyle;\n    watch(function () {\n      return props.arrowOffset;\n    }, function (val) {\n      arrowOffset.value = val;\n    });\n    onBeforeUnmount(function () {\n      arrowRef.value = void 0;\n    });\n    expose({\n      arrowRef: arrowRef\n    });\n    return function (_ctx, _cache) {\n      return openBlock(), createElementBlock(\"span\", {\n        ref_key: \"arrowRef\",\n        ref: arrowRef,\n        \"class\": normalizeClass(unref(ns).e(\"arrow\")),\n        style: normalizeStyle(unref(arrowStyle)),\n        \"data-popper-arrow\": \"\"\n      }, null, 6);\n    };\n  }\n}));\nvar ElPopperArrow = /* @__PURE__ */_export_sfc(_sfc_main, [[\"__file\", \"arrow.vue\"]]);\nexport { ElPopperArrow as default };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}