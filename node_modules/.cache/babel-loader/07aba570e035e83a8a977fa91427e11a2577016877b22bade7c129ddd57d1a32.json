{"ast":null,"code":"import \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.number.parse-int.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.string.pad-start.js\";\nvar parseTime = function parseTime(time) {\n  var values = (time || \"\").split(\":\");\n  if (values.length >= 2) {\n    var hours = Number.parseInt(values[0], 10);\n    var minutes = Number.parseInt(values[1], 10);\n    var timeUpper = time.toUpperCase();\n    if (timeUpper.includes(\"AM\") && hours === 12) {\n      hours = 0;\n    } else if (timeUpper.includes(\"PM\") && hours !== 12) {\n      hours += 12;\n    }\n    return {\n      hours: hours,\n      minutes: minutes\n    };\n  }\n  return null;\n};\nvar compareTime = function compareTime(time1, time2) {\n  var value1 = parseTime(time1);\n  if (!value1) return -1;\n  var value2 = parseTime(time2);\n  if (!value2) return -1;\n  var minutes1 = value1.minutes + value1.hours * 60;\n  var minutes2 = value2.minutes + value2.hours * 60;\n  if (minutes1 === minutes2) {\n    return 0;\n  }\n  return minutes1 > minutes2 ? 1 : -1;\n};\nvar padTime = function padTime(time) {\n  return \"\".concat(time).padStart(2, \"0\");\n};\nvar formatTime = function formatTime(time) {\n  return \"\".concat(padTime(time.hours), \":\").concat(padTime(time.minutes));\n};\nvar nextTime = function nextTime(time, step) {\n  var timeValue = parseTime(time);\n  if (!timeValue) return \"\";\n  var stepValue = parseTime(step);\n  if (!stepValue) return \"\";\n  var next = {\n    hours: timeValue.hours,\n    minutes: timeValue.minutes\n  };\n  next.minutes += stepValue.minutes;\n  next.hours += stepValue.hours;\n  next.hours += Math.floor(next.minutes / 60);\n  next.minutes = next.minutes % 60;\n  return formatTime(next);\n};\nexport { compareTime, formatTime, nextTime, padTime, parseTime };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}