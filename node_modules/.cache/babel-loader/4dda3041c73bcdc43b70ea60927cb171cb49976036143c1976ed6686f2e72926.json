{"ast":null,"code":"import \"core-js/modules/es.reflect.apply.js\";\nimport normalizeWheel from 'normalize-wheel-es';\nvar mousewheel = function mousewheel(element, callback) {\n  if (element && element.addEventListener) {\n    var fn = function fn(event) {\n      var normalized = normalizeWheel(event);\n      callback && Reflect.apply(callback, this, [event, normalized]);\n    };\n    element.addEventListener(\"wheel\", fn, {\n      passive: true\n    });\n  }\n};\nvar Mousewheel = {\n  beforeMount: function beforeMount(el, binding) {\n    mousewheel(el, binding.value);\n  }\n};\nexport { Mousewheel as default };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}