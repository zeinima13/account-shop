{"ast":null,"code":"import _slicedToArray from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport \"core-js/modules/es.array.reduce.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.constructor.js\";\nimport \"core-js/modules/es.regexp.dot-all.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.sticky.js\";\nimport \"core-js/modules/es.regexp.test.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.string.pad-start.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport { isNumber } from '../../../utils/types.mjs';\nvar timeUnits = [[\"Y\", 1e3 * 60 * 60 * 24 * 365], [\"M\", 1e3 * 60 * 60 * 24 * 30], [\"D\", 1e3 * 60 * 60 * 24], [\"H\", 1e3 * 60 * 60], [\"m\", 1e3 * 60], [\"s\", 1e3], [\"S\", 1]];\nvar getTime = function getTime(value) {\n  return isNumber(value) ? new Date(value).getTime() : value.valueOf();\n};\nvar formatTime = function formatTime(timestamp, format) {\n  var timeLeft = timestamp;\n  var escapeRegex = /\\[([^\\]]*)]/g;\n  var replacedText = timeUnits.reduce(function (current, _ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n      name = _ref2[0],\n      unit = _ref2[1];\n    var replaceRegex = new RegExp(\"\".concat(name, \"+(?![^\\\\[\\\\]]*\\\\])\"), \"g\");\n    if (replaceRegex.test(current)) {\n      var value = Math.floor(timeLeft / unit);\n      timeLeft -= value * unit;\n      return current.replace(replaceRegex, function (match) {\n        return String(value).padStart(match.length, \"0\");\n      });\n    }\n    return current;\n  }, format);\n  return replacedText.replace(escapeRegex, \"$1\");\n};\nexport { formatTime, getTime };","map":{"version":3,"names":["timeUnits","getTime","value","isNumber","Date","valueOf","formatTime","timestamp","format","timeLeft","escapeRegex","replacedText","reduce","current","_ref","_ref2","_slicedToArray","name","unit","replaceRegex","RegExp","concat","test","Math","floor","replace","match","String","padStart","length"],"sources":["../../../../../../packages/components/countdown/src/utils.ts"],"sourcesContent":["import { isNumber } from '@element-plus/utils'\n\nimport type { Dayjs } from 'dayjs'\n\nconst timeUnits = [\n  ['Y', 1000 * 60 * 60 * 24 * 365], // years\n  ['M', 1000 * 60 * 60 * 24 * 30], // months\n  ['D', 1000 * 60 * 60 * 24], // days\n  ['H', 1000 * 60 * 60], // hours\n  ['m', 1000 * 60], // minutes\n  ['s', 1000], // seconds\n  ['S', 1], // million seconds\n] as const\n\nexport const getTime = (value: number | Dayjs) => {\n  return isNumber(value) ? new Date(value).getTime() : value.valueOf()\n}\n\nexport const formatTime = (timestamp: number, format: string) => {\n  let timeLeft = timestamp\n  const escapeRegex = /\\[([^\\]]*)]/g\n\n  const replacedText = timeUnits.reduce((current, [name, unit]) => {\n    const replaceRegex = new RegExp(`${name}+(?![^\\\\[\\\\]]*\\\\])`, 'g')\n    if (replaceRegex.test(current)) {\n      const value = Math.floor(timeLeft / unit)\n      timeLeft -= value * unit\n      return current.replace(replaceRegex, (match) =>\n        String(value).padStart(match.length, '0')\n      )\n    }\n    return current\n  }, format)\n\n  return replacedText.replace(escapeRegex, '$1')\n}\n"],"mappings":";;;;;;;;;;;;;AACA,IAAMA,SAAS,GAAG,CAChB,CAAC,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,GAAG,CAAC,EAC/B,CAAC,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAC9B,CAAC,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EACzB,CAAC,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,EAAE,CAAC,EACpB,CAAC,GAAG,EAAE,GAAG,GAAG,EAAE,CAAC,EACf,CAAC,GAAG,EAAE,GAAG,CAAC,EACV,CAAC,GAAG,EAAE,CAAC,CAAC,CACT;AACW,IAACC,OAAO,GAAG,SAAVA,OAAOA,CAAIC,KAAK,EAAK;EAChC,OAAOC,QAAQ,CAACD,KAAK,CAAC,GAAG,IAAIE,IAAI,CAACF,KAAK,CAAC,CAACD,OAAO,EAAE,GAAGC,KAAK,CAACG,OAAO,EAAE;AACtE;AACY,IAACC,UAAU,GAAG,SAAbA,UAAUA,CAAIC,SAAS,EAAEC,MAAM,EAAK;EAC/C,IAAIC,QAAQ,GAAGF,SAAS;EACxB,IAAMG,WAAW,GAAG,cAAc;EAClC,IAAMC,YAAY,GAAGX,SAAS,CAACY,MAAM,CAAC,UAACC,OAAO,EAAAC,IAAA,EAAmB;IAAA,IAAAC,KAAA,GAAAC,cAAA,CAAAF,IAAA;MAAhBG,IAAI,GAAAF,KAAA;MAAEG,IAAI,GAAAH,KAAA;IACzD,IAAMI,YAAY,GAAG,IAAIC,MAAM,IAAAC,MAAA,CAAIJ,IAAI,yBAAsB,GAAG,CAAC;IACjE,IAAIE,YAAY,CAACG,IAAI,CAACT,OAAO,CAAC,EAAE;MAC9B,IAAMX,KAAK,GAAGqB,IAAI,CAACC,KAAK,CAACf,QAAQ,GAAGS,IAAI,CAAC;MACzCT,QAAQ,IAAIP,KAAK,GAAGgB,IAAI;MACxB,OAAOL,OAAO,CAACY,OAAO,CAACN,YAAY,EAAE,UAACO,KAAK;QAAA,OAAKC,MAAM,CAACzB,KAAK,CAAC,CAAC0B,QAAQ,CAACF,KAAK,CAACG,MAAM,EAAE,GAAG,CAAC;MAAA,EAAC;IAChG;IACI,OAAOhB,OAAO;EAClB,CAAG,EAAEL,MAAM,CAAC;EACV,OAAOG,YAAY,CAACc,OAAO,CAACf,WAAW,EAAE,IAAI,CAAC;AAChD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}