{"ast":null,"code":"import \"core-js/modules/es.array.every.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.number.is-nan.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.every.js\";\nimport { watch } from 'vue';\nimport { isArray } from '@vue/shared';\nimport { throwError, debugWarn } from '../../../../utils/error.mjs';\nimport { isNumber } from '../../../../utils/types.mjs';\nimport { UPDATE_MODEL_EVENT, INPUT_EVENT } from '../../../../constants/event.mjs';\nvar useWatch = function useWatch(props, initData, minValue, maxValue, emit, elFormItem) {\n  var _emit = function _emit(val) {\n    emit(UPDATE_MODEL_EVENT, val);\n    emit(INPUT_EVENT, val);\n  };\n  var valueChanged = function valueChanged() {\n    if (props.range) {\n      return ![minValue.value, maxValue.value].every(function (item, index) {\n        return item === initData.oldValue[index];\n      });\n    } else {\n      return props.modelValue !== initData.oldValue;\n    }\n  };\n  var setValues = function setValues() {\n    var _a, _b;\n    if (props.min > props.max) {\n      throwError(\"Slider\", \"min should not be greater than max.\");\n    }\n    var val = props.modelValue;\n    if (props.range && isArray(val)) {\n      if (val[1] < props.min) {\n        _emit([props.min, props.min]);\n      } else if (val[0] > props.max) {\n        _emit([props.max, props.max]);\n      } else if (val[0] < props.min) {\n        _emit([props.min, val[1]]);\n      } else if (val[1] > props.max) {\n        _emit([val[0], props.max]);\n      } else {\n        initData.firstValue = val[0];\n        initData.secondValue = val[1];\n        if (valueChanged()) {\n          if (props.validateEvent) {\n            (_a = elFormItem == null ? void 0 : elFormItem.validate) == null ? void 0 : _a.call(elFormItem, \"change\")[\"catch\"](function (err) {\n              return debugWarn(err);\n            });\n          }\n          initData.oldValue = val.slice();\n        }\n      }\n    } else if (!props.range && isNumber(val) && !Number.isNaN(val)) {\n      if (val < props.min) {\n        _emit(props.min);\n      } else if (val > props.max) {\n        _emit(props.max);\n      } else {\n        initData.firstValue = val;\n        if (valueChanged()) {\n          if (props.validateEvent) {\n            (_b = elFormItem == null ? void 0 : elFormItem.validate) == null ? void 0 : _b.call(elFormItem, \"change\")[\"catch\"](function (err) {\n              return debugWarn(err);\n            });\n          }\n          initData.oldValue = val;\n        }\n      }\n    }\n  };\n  setValues();\n  watch(function () {\n    return initData.dragging;\n  }, function (val) {\n    if (!val) {\n      setValues();\n    }\n  });\n  watch(function () {\n    return props.modelValue;\n  }, function (val, oldVal) {\n    if (initData.dragging || isArray(val) && isArray(oldVal) && val.every(function (item, index) {\n      return item === oldVal[index];\n    }) && initData.firstValue === val[0] && initData.secondValue === val[1]) {\n      return;\n    }\n    setValues();\n  }, {\n    deep: true\n  });\n  watch(function () {\n    return [props.min, props.max];\n  }, function () {\n    setValues();\n  });\n};\nexport { useWatch };","map":{"version":3,"names":["useWatch","props","initData","minValue","maxValue","emit","elFormItem","_emit","val","UPDATE_MODEL_EVENT","INPUT_EVENT","valueChanged","range","value","every","item","index","oldValue","modelValue","setValues","_a","_b","min","max","throwError","isArray","firstValue","secondValue","validateEvent","validate","call","err","debugWarn","slice","isNumber","Number","isNaN","watch","dragging","oldVal","deep"],"sources":["../../../../../../../packages/components/slider/src/composables/use-watch.ts"],"sourcesContent":["import { watch } from 'vue'\nimport { INPUT_EVENT, UPDATE_MODEL_EVENT } from '@element-plus/constants'\nimport { debugWarn, isArray, isNumber, throwError } from '@element-plus/utils'\nimport type { ComputedRef, SetupContext } from 'vue'\nimport type { Arrayable } from '@element-plus/utils'\nimport type { FormItemContext } from '@element-plus/components/form'\nimport type { SliderEmits, SliderInitData, SliderProps } from '../slider'\n\nexport const useWatch = (\n  props: SliderProps,\n  initData: SliderInitData,\n  minValue: ComputedRef<number>,\n  maxValue: ComputedRef<number>,\n  emit: SetupContext<SliderEmits>['emit'],\n  elFormItem: FormItemContext\n) => {\n  const _emit = (val: Arrayable<number>) => {\n    emit(UPDATE_MODEL_EVENT, val)\n    emit(INPUT_EVENT, val)\n  }\n\n  const valueChanged = () => {\n    if (props.range) {\n      return ![minValue.value, maxValue.value].every(\n        (item, index) => item === (initData.oldValue as number[])[index]\n      )\n    } else {\n      return props.modelValue !== initData.oldValue\n    }\n  }\n\n  const setValues = () => {\n    if (props.min > props.max) {\n      throwError('Slider', 'min should not be greater than max.')\n    }\n    const val = props.modelValue\n    if (props.range && isArray(val)) {\n      if (val[1] < props.min) {\n        _emit([props.min, props.min])\n      } else if (val[0] > props.max) {\n        _emit([props.max, props.max])\n      } else if (val[0] < props.min) {\n        _emit([props.min, val[1]])\n      } else if (val[1] > props.max) {\n        _emit([val[0], props.max])\n      } else {\n        initData.firstValue = val[0]\n        initData.secondValue = val[1]\n        if (valueChanged()) {\n          if (props.validateEvent) {\n            elFormItem?.validate?.('change').catch((err) => debugWarn(err))\n          }\n          initData.oldValue = val.slice()\n        }\n      }\n    } else if (!props.range && isNumber(val) && !Number.isNaN(val)) {\n      if (val < props.min) {\n        _emit(props.min)\n      } else if (val > props.max) {\n        _emit(props.max)\n      } else {\n        initData.firstValue = val\n        if (valueChanged()) {\n          if (props.validateEvent) {\n            elFormItem?.validate?.('change').catch((err) => debugWarn(err))\n          }\n          initData.oldValue = val\n        }\n      }\n    }\n  }\n\n  setValues()\n\n  watch(\n    () => initData.dragging,\n    (val) => {\n      if (!val) {\n        setValues()\n      }\n    }\n  )\n\n  watch(\n    () => props.modelValue,\n    (val, oldVal) => {\n      if (\n        initData.dragging ||\n        (isArray(val) &&\n          isArray(oldVal) &&\n          val.every((item, index) => item === oldVal[index]) &&\n          initData.firstValue === val[0] &&\n          initData.secondValue === val[1])\n      ) {\n        return\n      }\n      setValues()\n    },\n    {\n      deep: true,\n    }\n  )\n\n  watch(\n    () => [props.min, props.max],\n    () => {\n      setValues()\n    }\n  )\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}