{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _defineProperty from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.some.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.some.js\";\nimport { defineComponent, computed, getCurrentInstance, ref, watch, nextTick, provide, createVNode, renderSlot } from 'vue';\nimport { ElIcon } from '../../icon/index.mjs';\nimport { Plus } from '@element-plus/icons-vue';\nimport { tabsRootContextKey } from './constants.mjs';\nimport TabNav from './tab-nav.mjs';\nimport { buildProps, definePropType } from '../../../utils/vue/props/runtime.mjs';\nimport { UPDATE_MODEL_EVENT } from '../../../constants/event.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { useOrderedChildren } from '../../../hooks/use-ordered-children/index.mjs';\nimport { EVENT_CODE } from '../../../constants/aria.mjs';\nimport { isString } from '@vue/shared';\nimport { isNumber, isUndefined } from '../../../utils/types.mjs';\nvar tabsProps = buildProps({\n  type: {\n    type: String,\n    values: [\"card\", \"border-card\", \"\"],\n    \"default\": \"\"\n  },\n  closable: Boolean,\n  addable: Boolean,\n  modelValue: {\n    type: [String, Number]\n  },\n  editable: Boolean,\n  tabPosition: {\n    type: String,\n    values: [\"top\", \"right\", \"bottom\", \"left\"],\n    \"default\": \"top\"\n  },\n  beforeLeave: {\n    type: definePropType(Function),\n    \"default\": function _default() {\n      return true;\n    }\n  },\n  stretch: Boolean\n});\nvar isPaneName = function isPaneName(value) {\n  return isString(value) || isNumber(value);\n};\nvar tabsEmits = _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty({}, UPDATE_MODEL_EVENT, function (name) {\n  return isPaneName(name);\n}), \"tabClick\", function tabClick(pane, ev) {\n  return ev instanceof Event;\n}), \"tabChange\", function tabChange(name) {\n  return isPaneName(name);\n}), \"edit\", function edit(paneName, action) {\n  return [\"remove\", \"add\"].includes(action);\n}), \"tabRemove\", function tabRemove(name) {\n  return isPaneName(name);\n}), \"tabAdd\", function tabAdd() {\n  return true;\n});\nvar Tabs = defineComponent({\n  name: \"ElTabs\",\n  props: tabsProps,\n  emits: tabsEmits,\n  setup: function setup(props, _ref) {\n    var emit = _ref.emit,\n      slots = _ref.slots,\n      expose = _ref.expose;\n    var _a;\n    var ns = useNamespace(\"tabs\");\n    var isVertical = computed(function () {\n      return [\"left\", \"right\"].includes(props.tabPosition);\n    });\n    var _useOrderedChildren = useOrderedChildren(getCurrentInstance(), \"ElTabPane\"),\n      panes = _useOrderedChildren.children,\n      sortPane = _useOrderedChildren.addChild,\n      unregisterPane = _useOrderedChildren.removeChild;\n    var nav$ = ref();\n    var currentName = ref((_a = props.modelValue) != null ? _a : \"0\");\n    var setCurrentName = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(value) {\n        var trigger,\n          _a2,\n          _b,\n          canLeave,\n          result,\n          _args = arguments;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              trigger = _args.length > 1 && _args[1] !== undefined ? _args[1] : false;\n              if (!(currentName.value === value || isUndefined(value))) {\n                _context.next = 3;\n                break;\n              }\n              return _context.abrupt(\"return\");\n            case 3:\n              _context.prev = 3;\n              if (!props.beforeLeave) {\n                _context.next = 16;\n                break;\n              }\n              result = props.beforeLeave(value, currentName.value);\n              if (!(result instanceof Promise)) {\n                _context.next = 12;\n                break;\n              }\n              _context.next = 9;\n              return result;\n            case 9:\n              _context.t0 = _context.sent;\n              _context.next = 13;\n              break;\n            case 12:\n              _context.t0 = result;\n            case 13:\n              canLeave = _context.t0;\n              _context.next = 17;\n              break;\n            case 16:\n              canLeave = true;\n            case 17:\n              if (canLeave !== false) {\n                currentName.value = value;\n                if (trigger) {\n                  emit(UPDATE_MODEL_EVENT, value);\n                  emit(\"tabChange\", value);\n                }\n                (_b = (_a2 = nav$.value) == null ? void 0 : _a2.removeFocus) == null ? void 0 : _b.call(_a2);\n              }\n              _context.next = 22;\n              break;\n            case 20:\n              _context.prev = 20;\n              _context.t1 = _context[\"catch\"](3);\n            case 22:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[3, 20]]);\n      }));\n      return function setCurrentName(_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    var handleTabClick = function handleTabClick(tab, tabName, event) {\n      if (tab.props.disabled) return;\n      setCurrentName(tabName, true);\n      emit(\"tabClick\", tab, event);\n    };\n    var handleTabRemove = function handleTabRemove(pane, ev) {\n      if (pane.props.disabled || isUndefined(pane.props.name)) return;\n      ev.stopPropagation();\n      emit(\"edit\", pane.props.name, \"remove\");\n      emit(\"tabRemove\", pane.props.name);\n    };\n    var handleTabAdd = function handleTabAdd() {\n      emit(\"edit\", void 0, \"add\");\n      emit(\"tabAdd\");\n    };\n    watch(function () {\n      return props.modelValue;\n    }, function (modelValue) {\n      return setCurrentName(modelValue);\n    });\n    watch(currentName, /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n      var _a2;\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return nextTick();\n          case 2:\n            (_a2 = nav$.value) == null ? void 0 : _a2.scrollToActiveTab();\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2);\n    })));\n    provide(tabsRootContextKey, {\n      props: props,\n      currentName: currentName,\n      registerPane: function registerPane(pane) {\n        panes.value.push(pane);\n      },\n      sortPane: sortPane,\n      unregisterPane: unregisterPane\n    });\n    expose({\n      currentName: currentName\n    });\n    var TabNavRenderer = function TabNavRenderer(_ref4) {\n      var render = _ref4.render;\n      return render();\n    };\n    return function () {\n      var addSlot = slots[\"add-icon\"];\n      var newButton = props.editable || props.addable ? createVNode(\"div\", {\n        \"class\": [ns.e(\"new-tab\"), isVertical.value && ns.e(\"new-tab-vertical\")],\n        \"tabindex\": \"0\",\n        \"onClick\": handleTabAdd,\n        \"onKeydown\": function onKeydown(ev) {\n          if ([EVENT_CODE.enter, EVENT_CODE.numpadEnter].includes(ev.code)) handleTabAdd();\n        }\n      }, [addSlot ? renderSlot(slots, \"add-icon\") : createVNode(ElIcon, {\n        \"class\": ns.is(\"icon-plus\")\n      }, {\n        \"default\": function _default() {\n          return [createVNode(Plus, null, null)];\n        }\n      })]) : null;\n      var header = createVNode(\"div\", {\n        \"class\": [ns.e(\"header\"), isVertical.value && ns.e(\"header-vertical\"), ns.is(props.tabPosition)]\n      }, [createVNode(TabNavRenderer, {\n        \"render\": function render() {\n          var hasLabelSlot = panes.value.some(function (pane) {\n            return pane.slots.label;\n          });\n          return createVNode(TabNav, {\n            ref: nav$,\n            currentName: currentName.value,\n            editable: props.editable,\n            type: props.type,\n            panes: panes.value,\n            stretch: props.stretch,\n            onTabClick: handleTabClick,\n            onTabRemove: handleTabRemove\n          }, {\n            $stable: !hasLabelSlot\n          });\n        }\n      }, null), newButton]);\n      var panels = createVNode(\"div\", {\n        \"class\": ns.e(\"content\")\n      }, [renderSlot(slots, \"default\")]);\n      return createVNode(\"div\", {\n        \"class\": [ns.b(), ns.m(props.tabPosition), _defineProperty(_defineProperty({}, ns.m(\"card\"), props.type === \"card\"), ns.m(\"border-card\"), props.type === \"border-card\")]\n      }, [panels, header]);\n    };\n  }\n});\nvar Tabs$1 = Tabs;\nexport { Tabs$1 as default, tabsEmits, tabsProps };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}