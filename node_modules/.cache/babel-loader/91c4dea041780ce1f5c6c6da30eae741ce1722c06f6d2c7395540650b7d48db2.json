{"ast":null,"code":"import \"core-js/modules/es.array.concat.js\";\nimport { computed, onBeforeMount } from 'vue';\nimport { useGetDerivedNamespace } from '../use-namespace/index.mjs';\nimport { useIdInjection } from '../use-id/index.mjs';\nimport { isClient } from '@vueuse/core';\nvar usePopperContainerId = function usePopperContainerId() {\n  var namespace = useGetDerivedNamespace();\n  var idInjection = useIdInjection();\n  var id = computed(function () {\n    return \"\".concat(namespace.value, \"-popper-container-\").concat(idInjection.prefix);\n  });\n  var selector = computed(function () {\n    return \"#\".concat(id.value);\n  });\n  return {\n    id: id,\n    selector: selector\n  };\n};\nvar createContainer = function createContainer(id) {\n  var container = document.createElement(\"div\");\n  container.id = id;\n  document.body.appendChild(container);\n  return container;\n};\nvar usePopperContainer = function usePopperContainer() {\n  var _usePopperContainerId = usePopperContainerId(),\n    id = _usePopperContainerId.id,\n    selector = _usePopperContainerId.selector;\n  onBeforeMount(function () {\n    if (!isClient) return;\n    if (process.env.NODE_ENV === \"test\" || !document.body.querySelector(selector.value)) {\n      createContainer(id.value);\n    }\n  });\n  return {\n    id: id,\n    selector: selector\n  };\n};\nexport { usePopperContainer, usePopperContainerId };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}