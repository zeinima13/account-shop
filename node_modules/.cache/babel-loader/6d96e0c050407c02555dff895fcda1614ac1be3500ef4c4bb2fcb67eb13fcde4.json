{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _objectWithoutProperties from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _createForOfIteratorHelper from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _slicedToArray from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _toConsumableArray from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _defineProperty from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _excluded = [\"trigger\"];\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.some.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport \"core-js/modules/esnext.iterator.some.js\";\nimport { defineComponent, useSlots, inject, ref, computed, watch, reactive, toRefs, provide, onMounted, onBeforeUnmount, openBlock, createElementBlock, normalizeClass, unref, createVNode, withCtx, createBlock, resolveDynamicComponent, normalizeStyle, renderSlot, createTextVNode, toDisplayString, createCommentVNode, createElementVNode, TransitionGroup, nextTick } from 'vue';\nimport AsyncValidator from 'async-validator';\nimport { castArray, clone } from 'lodash-unified';\nimport { refDebounced } from '@vueuse/core';\nimport { formItemProps } from './form-item.mjs';\nimport FormLabelWrap from './form-label-wrap.mjs';\nimport { formContextKey, formItemContextKey } from './constants.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { getProp } from '../../../utils/objects.mjs';\nimport { useFormSize } from './hooks/use-form-common-props.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { useId } from '../../../hooks/use-id/index.mjs';\nimport { addUnit } from '../../../utils/dom/style.mjs';\nimport { isBoolean } from '../../../utils/types.mjs';\nimport { isString, isFunction, isArray } from '@vue/shared';\nvar __default__ = defineComponent({\n  name: \"ElFormItem\"\n});\nvar _sfc_main = /* @__PURE__ */defineComponent(_objectSpread(_objectSpread({}, __default__), {}, {\n  props: formItemProps,\n  setup: function setup(__props, _ref) {\n    var expose = _ref.expose;\n    var props = __props;\n    var slots = useSlots();\n    var formContext = inject(formContextKey, void 0);\n    var parentFormItemContext = inject(formItemContextKey, void 0);\n    var _size = useFormSize(void 0, {\n      formItem: false\n    });\n    var ns = useNamespace(\"form-item\");\n    var labelId = useId().value;\n    var inputIds = ref([]);\n    var validateState = ref(\"\");\n    var validateStateDebounced = refDebounced(validateState, 100);\n    var validateMessage = ref(\"\");\n    var formItemRef = ref();\n    var initialValue = void 0;\n    var isResettingField = false;\n    var labelPosition = computed(function () {\n      return props.labelPosition || (formContext == null ? void 0 : formContext.labelPosition);\n    });\n    var labelStyle = computed(function () {\n      if (labelPosition.value === \"top\") {\n        return {};\n      }\n      var labelWidth = addUnit(props.labelWidth || (formContext == null ? void 0 : formContext.labelWidth) || \"\");\n      if (labelWidth) return {\n        width: labelWidth\n      };\n      return {};\n    });\n    var contentStyle = computed(function () {\n      if (labelPosition.value === \"top\" || (formContext == null ? void 0 : formContext.inline)) {\n        return {};\n      }\n      if (!props.label && !props.labelWidth && isNested) {\n        return {};\n      }\n      var labelWidth = addUnit(props.labelWidth || (formContext == null ? void 0 : formContext.labelWidth) || \"\");\n      if (!props.label && !slots.label) {\n        return {\n          marginLeft: labelWidth\n        };\n      }\n      return {};\n    });\n    var formItemClasses = computed(function () {\n      return [ns.b(), ns.m(_size.value), ns.is(\"error\", validateState.value === \"error\"), ns.is(\"validating\", validateState.value === \"validating\"), ns.is(\"success\", validateState.value === \"success\"), ns.is(\"required\", isRequired.value || props.required), ns.is(\"no-asterisk\", formContext == null ? void 0 : formContext.hideRequiredAsterisk), (formContext == null ? void 0 : formContext.requireAsteriskPosition) === \"right\" ? \"asterisk-right\" : \"asterisk-left\", _defineProperty(_defineProperty({}, ns.m(\"feedback\"), formContext == null ? void 0 : formContext.statusIcon), ns.m(\"label-\".concat(labelPosition.value)), labelPosition.value)];\n    });\n    var _inlineMessage = computed(function () {\n      return isBoolean(props.inlineMessage) ? props.inlineMessage : (formContext == null ? void 0 : formContext.inlineMessage) || false;\n    });\n    var validateClasses = computed(function () {\n      return [ns.e(\"error\"), _defineProperty({}, ns.em(\"error\", \"inline\"), _inlineMessage.value)];\n    });\n    var propString = computed(function () {\n      if (!props.prop) return \"\";\n      return isString(props.prop) ? props.prop : props.prop.join(\".\");\n    });\n    var hasLabel = computed(function () {\n      return !!(props.label || slots.label);\n    });\n    var labelFor = computed(function () {\n      return props[\"for\"] || (inputIds.value.length === 1 ? inputIds.value[0] : void 0);\n    });\n    var isGroup = computed(function () {\n      return !labelFor.value && hasLabel.value;\n    });\n    var isNested = !!parentFormItemContext;\n    var fieldValue = computed(function () {\n      var model = formContext == null ? void 0 : formContext.model;\n      if (!model || !props.prop) {\n        return;\n      }\n      return getProp(model, props.prop).value;\n    });\n    var normalizedRules = computed(function () {\n      var required = props.required;\n      var rules = [];\n      if (props.rules) {\n        rules.push.apply(rules, _toConsumableArray(castArray(props.rules)));\n      }\n      var formRules = formContext == null ? void 0 : formContext.rules;\n      if (formRules && props.prop) {\n        var _rules = getProp(formRules, props.prop).value;\n        if (_rules) {\n          rules.push.apply(rules, _toConsumableArray(castArray(_rules)));\n        }\n      }\n      if (required !== void 0) {\n        var requiredRules = rules.map(function (rule, i) {\n          return [rule, i];\n        }).filter(function (_ref4) {\n          var _ref5 = _slicedToArray(_ref4, 1),\n            rule = _ref5[0];\n          return Object.keys(rule).includes(\"required\");\n        });\n        if (requiredRules.length > 0) {\n          var _iterator = _createForOfIteratorHelper(requiredRules),\n            _step;\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var _step$value = _slicedToArray(_step.value, 2),\n                rule = _step$value[0],\n                i = _step$value[1];\n              if (rule.required === required) continue;\n              rules[i] = _objectSpread(_objectSpread({}, rule), {}, {\n                required: required\n              });\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n        } else {\n          rules.push({\n            required: required\n          });\n        }\n      }\n      return rules;\n    });\n    var validateEnabled = computed(function () {\n      return normalizedRules.value.length > 0;\n    });\n    var getFilteredRule = function getFilteredRule(trigger) {\n      var rules = normalizedRules.value;\n      return rules.filter(function (rule) {\n        if (!rule.trigger || !trigger) return true;\n        if (isArray(rule.trigger)) {\n          return rule.trigger.includes(trigger);\n        } else {\n          return rule.trigger === trigger;\n        }\n      }).map(function (_ref6) {\n        var trigger2 = _ref6.trigger,\n          rule = _objectWithoutProperties(_ref6, _excluded);\n        return rule;\n      });\n    };\n    var isRequired = computed(function () {\n      return normalizedRules.value.some(function (rule) {\n        return rule.required;\n      });\n    });\n    var shouldShowError = computed(function () {\n      var _a;\n      return validateStateDebounced.value === \"error\" && props.showMessage && ((_a = formContext == null ? void 0 : formContext.showMessage) != null ? _a : true);\n    });\n    var currentLabel = computed(function () {\n      return \"\".concat(props.label || \"\").concat((formContext == null ? void 0 : formContext.labelSuffix) || \"\");\n    });\n    var setValidationState = function setValidationState(state) {\n      validateState.value = state;\n    };\n    var onValidationFailed = function onValidationFailed(error) {\n      var _a, _b;\n      var errors = error.errors,\n        fields = error.fields;\n      if (!errors || !fields) {\n        console.error(error);\n      }\n      setValidationState(\"error\");\n      validateMessage.value = errors ? (_b = (_a = errors == null ? void 0 : errors[0]) == null ? void 0 : _a.message) != null ? _b : \"\".concat(props.prop, \" is required\") : \"\";\n      formContext == null ? void 0 : formContext.emit(\"validate\", props.prop, false, validateMessage.value);\n    };\n    var onValidationSucceeded = function onValidationSucceeded() {\n      setValidationState(\"success\");\n      formContext == null ? void 0 : formContext.emit(\"validate\", props.prop, true, \"\");\n    };\n    var doValidate = /*#__PURE__*/function () {\n      var _ref7 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(rules) {\n        var modelName, validator;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              modelName = propString.value;\n              validator = new AsyncValidator(_defineProperty({}, modelName, rules));\n              return _context.abrupt(\"return\", validator.validate(_defineProperty({}, modelName, fieldValue.value), {\n                firstFields: true\n              }).then(function () {\n                onValidationSucceeded();\n                return true;\n              })[\"catch\"](function (err) {\n                onValidationFailed(err);\n                return Promise.reject(err);\n              }));\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n      return function doValidate(_x) {\n        return _ref7.apply(this, arguments);\n      };\n    }();\n    var validate = /*#__PURE__*/function () {\n      var _ref8 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(trigger, callback) {\n        var hasCallback, rules;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!(isResettingField || !props.prop)) {\n                _context2.next = 2;\n                break;\n              }\n              return _context2.abrupt(\"return\", false);\n            case 2:\n              hasCallback = isFunction(callback);\n              if (validateEnabled.value) {\n                _context2.next = 6;\n                break;\n              }\n              callback == null ? void 0 : callback(false);\n              return _context2.abrupt(\"return\", false);\n            case 6:\n              rules = getFilteredRule(trigger);\n              if (!(rules.length === 0)) {\n                _context2.next = 10;\n                break;\n              }\n              callback == null ? void 0 : callback(true);\n              return _context2.abrupt(\"return\", true);\n            case 10:\n              setValidationState(\"validating\");\n              return _context2.abrupt(\"return\", doValidate(rules).then(function () {\n                callback == null ? void 0 : callback(true);\n                return true;\n              })[\"catch\"](function (err) {\n                var fields = err.fields;\n                callback == null ? void 0 : callback(false, fields);\n                return hasCallback ? false : Promise.reject(fields);\n              }));\n            case 12:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2);\n      }));\n      return function validate(_x2, _x3) {\n        return _ref8.apply(this, arguments);\n      };\n    }();\n    var clearValidate = function clearValidate() {\n      setValidationState(\"\");\n      validateMessage.value = \"\";\n      isResettingField = false;\n    };\n    var resetField = /*#__PURE__*/function () {\n      var _ref9 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var model, computedValue;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              model = formContext == null ? void 0 : formContext.model;\n              if (!(!model || !props.prop)) {\n                _context3.next = 3;\n                break;\n              }\n              return _context3.abrupt(\"return\");\n            case 3:\n              computedValue = getProp(model, props.prop);\n              isResettingField = true;\n              computedValue.value = clone(initialValue);\n              _context3.next = 8;\n              return nextTick();\n            case 8:\n              clearValidate();\n              isResettingField = false;\n            case 10:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3);\n      }));\n      return function resetField() {\n        return _ref9.apply(this, arguments);\n      };\n    }();\n    var addInputId = function addInputId(id) {\n      if (!inputIds.value.includes(id)) {\n        inputIds.value.push(id);\n      }\n    };\n    var removeInputId = function removeInputId(id) {\n      inputIds.value = inputIds.value.filter(function (listId) {\n        return listId !== id;\n      });\n    };\n    watch(function () {\n      return props.error;\n    }, function (val) {\n      validateMessage.value = val || \"\";\n      setValidationState(val ? \"error\" : \"\");\n    }, {\n      immediate: true\n    });\n    watch(function () {\n      return props.validateStatus;\n    }, function (val) {\n      return setValidationState(val || \"\");\n    });\n    var context = reactive(_objectSpread(_objectSpread({}, toRefs(props)), {}, {\n      $el: formItemRef,\n      size: _size,\n      validateState: validateState,\n      labelId: labelId,\n      inputIds: inputIds,\n      isGroup: isGroup,\n      hasLabel: hasLabel,\n      fieldValue: fieldValue,\n      addInputId: addInputId,\n      removeInputId: removeInputId,\n      resetField: resetField,\n      clearValidate: clearValidate,\n      validate: validate\n    }));\n    provide(formItemContextKey, context);\n    onMounted(function () {\n      if (props.prop) {\n        formContext == null ? void 0 : formContext.addField(context);\n        initialValue = clone(fieldValue.value);\n      }\n    });\n    onBeforeUnmount(function () {\n      formContext == null ? void 0 : formContext.removeField(context);\n    });\n    expose({\n      size: _size,\n      validateMessage: validateMessage,\n      validateState: validateState,\n      validate: validate,\n      clearValidate: clearValidate,\n      resetField: resetField\n    });\n    return function (_ctx, _cache) {\n      var _a;\n      return openBlock(), createElementBlock(\"div\", {\n        ref_key: \"formItemRef\",\n        ref: formItemRef,\n        \"class\": normalizeClass(unref(formItemClasses)),\n        role: unref(isGroup) ? \"group\" : void 0,\n        \"aria-labelledby\": unref(isGroup) ? unref(labelId) : void 0\n      }, [createVNode(unref(FormLabelWrap), {\n        \"is-auto-width\": unref(labelStyle).width === \"auto\",\n        \"update-all\": ((_a = unref(formContext)) == null ? void 0 : _a.labelWidth) === \"auto\"\n      }, {\n        \"default\": withCtx(function () {\n          return [unref(hasLabel) ? (openBlock(), createBlock(resolveDynamicComponent(unref(labelFor) ? \"label\" : \"div\"), {\n            key: 0,\n            id: unref(labelId),\n            \"for\": unref(labelFor),\n            \"class\": normalizeClass(unref(ns).e(\"label\")),\n            style: normalizeStyle(unref(labelStyle))\n          }, {\n            \"default\": withCtx(function () {\n              return [renderSlot(_ctx.$slots, \"label\", {\n                label: unref(currentLabel)\n              }, function () {\n                return [createTextVNode(toDisplayString(unref(currentLabel)), 1)];\n              })];\n            }),\n            _: 3\n          }, 8, [\"id\", \"for\", \"class\", \"style\"])) : createCommentVNode(\"v-if\", true)];\n        }),\n        _: 3\n      }, 8, [\"is-auto-width\", \"update-all\"]), createElementVNode(\"div\", {\n        \"class\": normalizeClass(unref(ns).e(\"content\")),\n        style: normalizeStyle(unref(contentStyle))\n      }, [renderSlot(_ctx.$slots, \"default\"), createVNode(TransitionGroup, {\n        name: \"\".concat(unref(ns).namespace.value, \"-zoom-in-top\")\n      }, {\n        \"default\": withCtx(function () {\n          return [unref(shouldShowError) ? renderSlot(_ctx.$slots, \"error\", {\n            key: 0,\n            error: validateMessage.value\n          }, function () {\n            return [createElementVNode(\"div\", {\n              \"class\": normalizeClass(unref(validateClasses))\n            }, toDisplayString(validateMessage.value), 3)];\n          }) : createCommentVNode(\"v-if\", true)];\n        }),\n        _: 3\n      }, 8, [\"name\"])], 6)], 10, [\"role\", \"aria-labelledby\"]);\n    };\n  }\n}));\nvar FormItem = /* @__PURE__ */_export_sfc(_sfc_main, [[\"__file\", \"form-item.vue\"]]);\nexport { FormItem as default };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}