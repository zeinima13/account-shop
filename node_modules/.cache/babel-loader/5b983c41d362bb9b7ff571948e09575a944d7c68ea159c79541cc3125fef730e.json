{"ast":null,"code":"import _objectSpread from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.number.is-nan.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport { defineComponent, ref, computed, watchEffect, openBlock, createElementBlock, normalizeClass, unref, withKeys, createCommentVNode, createBlock, Fragment, renderList, toDisplayString } from 'vue';\nimport { DArrowLeft, MoreFilled, DArrowRight } from '@element-plus/icons-vue';\nimport { paginationPagerProps } from './pager2.mjs';\nimport _export_sfc from '../../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useNamespace } from '../../../../hooks/use-namespace/index.mjs';\nimport { useLocale } from '../../../../hooks/use-locale/index.mjs';\nvar __default__ = defineComponent({\n  name: \"ElPaginationPager\"\n});\nvar _sfc_main = /* @__PURE__ */defineComponent(_objectSpread(_objectSpread({}, __default__), {}, {\n  props: paginationPagerProps,\n  emits: [\"change\"],\n  setup: function setup(__props, _ref) {\n    var emit = _ref.emit;\n    var props = __props;\n    var nsPager = useNamespace(\"pager\");\n    var nsIcon = useNamespace(\"icon\");\n    var _useLocale = useLocale(),\n      t = _useLocale.t;\n    var showPrevMore = ref(false);\n    var showNextMore = ref(false);\n    var quickPrevHover = ref(false);\n    var quickNextHover = ref(false);\n    var quickPrevFocus = ref(false);\n    var quickNextFocus = ref(false);\n    var pagers = computed(function () {\n      var pagerCount = props.pagerCount;\n      var halfPagerCount = (pagerCount - 1) / 2;\n      var currentPage = Number(props.currentPage);\n      var pageCount = Number(props.pageCount);\n      var showPrevMore2 = false;\n      var showNextMore2 = false;\n      if (pageCount > pagerCount) {\n        if (currentPage > pagerCount - halfPagerCount) {\n          showPrevMore2 = true;\n        }\n        if (currentPage < pageCount - halfPagerCount) {\n          showNextMore2 = true;\n        }\n      }\n      var array = [];\n      if (showPrevMore2 && !showNextMore2) {\n        var startPage = pageCount - (pagerCount - 2);\n        for (var i = startPage; i < pageCount; i++) {\n          array.push(i);\n        }\n      } else if (!showPrevMore2 && showNextMore2) {\n        for (var _i = 2; _i < pagerCount; _i++) {\n          array.push(_i);\n        }\n      } else if (showPrevMore2 && showNextMore2) {\n        var offset = Math.floor(pagerCount / 2) - 1;\n        for (var _i2 = currentPage - offset; _i2 <= currentPage + offset; _i2++) {\n          array.push(_i2);\n        }\n      } else {\n        for (var _i3 = 2; _i3 < pageCount; _i3++) {\n          array.push(_i3);\n        }\n      }\n      return array;\n    });\n    var prevMoreKls = computed(function () {\n      return [\"more\", \"btn-quickprev\", nsIcon.b(), nsPager.is(\"disabled\", props.disabled)];\n    });\n    var nextMoreKls = computed(function () {\n      return [\"more\", \"btn-quicknext\", nsIcon.b(), nsPager.is(\"disabled\", props.disabled)];\n    });\n    var tabindex = computed(function () {\n      return props.disabled ? -1 : 0;\n    });\n    watchEffect(function () {\n      var halfPagerCount = (props.pagerCount - 1) / 2;\n      showPrevMore.value = false;\n      showNextMore.value = false;\n      if (props.pageCount > props.pagerCount) {\n        if (props.currentPage > props.pagerCount - halfPagerCount) {\n          showPrevMore.value = true;\n        }\n        if (props.currentPage < props.pageCount - halfPagerCount) {\n          showNextMore.value = true;\n        }\n      }\n    });\n    function onMouseEnter() {\n      var forward = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      if (props.disabled) return;\n      if (forward) {\n        quickPrevHover.value = true;\n      } else {\n        quickNextHover.value = true;\n      }\n    }\n    function _onFocus() {\n      var forward = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      if (forward) {\n        quickPrevFocus.value = true;\n      } else {\n        quickNextFocus.value = true;\n      }\n    }\n    function onEnter(e) {\n      var target = e.target;\n      if (target.tagName.toLowerCase() === \"li\" && Array.from(target.classList).includes(\"number\")) {\n        var newPage = Number(target.textContent);\n        if (newPage !== props.currentPage) {\n          emit(\"change\", newPage);\n        }\n      } else if (target.tagName.toLowerCase() === \"li\" && Array.from(target.classList).includes(\"more\")) {\n        onPagerClick(e);\n      }\n    }\n    function onPagerClick(event) {\n      var target = event.target;\n      if (target.tagName.toLowerCase() === \"ul\" || props.disabled) {\n        return;\n      }\n      var newPage = Number(target.textContent);\n      var pageCount = props.pageCount;\n      var currentPage = props.currentPage;\n      var pagerCountOffset = props.pagerCount - 2;\n      if (target.className.includes(\"more\")) {\n        if (target.className.includes(\"quickprev\")) {\n          newPage = currentPage - pagerCountOffset;\n        } else if (target.className.includes(\"quicknext\")) {\n          newPage = currentPage + pagerCountOffset;\n        }\n      }\n      if (!Number.isNaN(+newPage)) {\n        if (newPage < 1) {\n          newPage = 1;\n        }\n        if (newPage > pageCount) {\n          newPage = pageCount;\n        }\n      }\n      if (newPage !== currentPage) {\n        emit(\"change\", newPage);\n      }\n    }\n    return function (_ctx, _cache) {\n      return openBlock(), createElementBlock(\"ul\", {\n        \"class\": normalizeClass(unref(nsPager).b()),\n        onClick: onPagerClick,\n        onKeyup: withKeys(onEnter, [\"enter\"])\n      }, [_ctx.pageCount > 0 ? (openBlock(), createElementBlock(\"li\", {\n        key: 0,\n        \"class\": normalizeClass([[unref(nsPager).is(\"active\", _ctx.currentPage === 1), unref(nsPager).is(\"disabled\", _ctx.disabled)], \"number\"]),\n        \"aria-current\": _ctx.currentPage === 1,\n        \"aria-label\": unref(t)(\"el.pagination.currentPage\", {\n          pager: 1\n        }),\n        tabindex: unref(tabindex)\n      }, \" 1 \", 10, [\"aria-current\", \"aria-label\", \"tabindex\"])) : createCommentVNode(\"v-if\", true), showPrevMore.value ? (openBlock(), createElementBlock(\"li\", {\n        key: 1,\n        \"class\": normalizeClass(unref(prevMoreKls)),\n        tabindex: unref(tabindex),\n        \"aria-label\": unref(t)(\"el.pagination.prevPages\", {\n          pager: _ctx.pagerCount - 2\n        }),\n        onMouseenter: function onMouseenter($event) {\n          return onMouseEnter(true);\n        },\n        onMouseleave: function onMouseleave($event) {\n          return quickPrevHover.value = false;\n        },\n        onFocus: function onFocus($event) {\n          return _onFocus(true);\n        },\n        onBlur: function onBlur($event) {\n          return quickPrevFocus.value = false;\n        }\n      }, [(quickPrevHover.value || quickPrevFocus.value) && !_ctx.disabled ? (openBlock(), createBlock(unref(DArrowLeft), {\n        key: 0\n      })) : (openBlock(), createBlock(unref(MoreFilled), {\n        key: 1\n      }))], 42, [\"tabindex\", \"aria-label\", \"onMouseenter\", \"onMouseleave\", \"onFocus\", \"onBlur\"])) : createCommentVNode(\"v-if\", true), (openBlock(true), createElementBlock(Fragment, null, renderList(unref(pagers), function (pager) {\n        return openBlock(), createElementBlock(\"li\", {\n          key: pager,\n          \"class\": normalizeClass([[unref(nsPager).is(\"active\", _ctx.currentPage === pager), unref(nsPager).is(\"disabled\", _ctx.disabled)], \"number\"]),\n          \"aria-current\": _ctx.currentPage === pager,\n          \"aria-label\": unref(t)(\"el.pagination.currentPage\", {\n            pager: pager\n          }),\n          tabindex: unref(tabindex)\n        }, toDisplayString(pager), 11, [\"aria-current\", \"aria-label\", \"tabindex\"]);\n      }), 128)), showNextMore.value ? (openBlock(), createElementBlock(\"li\", {\n        key: 2,\n        \"class\": normalizeClass(unref(nextMoreKls)),\n        tabindex: unref(tabindex),\n        \"aria-label\": unref(t)(\"el.pagination.nextPages\", {\n          pager: _ctx.pagerCount - 2\n        }),\n        onMouseenter: function onMouseenter($event) {\n          return onMouseEnter();\n        },\n        onMouseleave: function onMouseleave($event) {\n          return quickNextHover.value = false;\n        },\n        onFocus: function onFocus($event) {\n          return _onFocus();\n        },\n        onBlur: function onBlur($event) {\n          return quickNextFocus.value = false;\n        }\n      }, [(quickNextHover.value || quickNextFocus.value) && !_ctx.disabled ? (openBlock(), createBlock(unref(DArrowRight), {\n        key: 0\n      })) : (openBlock(), createBlock(unref(MoreFilled), {\n        key: 1\n      }))], 42, [\"tabindex\", \"aria-label\", \"onMouseenter\", \"onMouseleave\", \"onFocus\", \"onBlur\"])) : createCommentVNode(\"v-if\", true), _ctx.pageCount > 1 ? (openBlock(), createElementBlock(\"li\", {\n        key: 3,\n        \"class\": normalizeClass([[unref(nsPager).is(\"active\", _ctx.currentPage === _ctx.pageCount), unref(nsPager).is(\"disabled\", _ctx.disabled)], \"number\"]),\n        \"aria-current\": _ctx.currentPage === _ctx.pageCount,\n        \"aria-label\": unref(t)(\"el.pagination.currentPage\", {\n          pager: _ctx.pageCount\n        }),\n        tabindex: unref(tabindex)\n      }, toDisplayString(_ctx.pageCount), 11, [\"aria-current\", \"aria-label\", \"tabindex\"])) : createCommentVNode(\"v-if\", true)], 42, [\"onKeyup\"]);\n    };\n  }\n}));\nvar Pager = /* @__PURE__ */_export_sfc(_sfc_main, [[\"__file\", \"pager.vue\"]]);\nexport { Pager as default };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}