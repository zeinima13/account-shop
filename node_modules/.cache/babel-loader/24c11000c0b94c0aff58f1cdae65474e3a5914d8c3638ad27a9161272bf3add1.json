{"ast":null,"code":"import _objectSpread from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { defineComponent, useSlots, computed, openBlock, createElementBlock, normalizeClass, unref, normalizeStyle, renderSlot, createCommentVNode, createElementVNode, Fragment, renderList, createBlock, withModifiers, withCtx, createTextVNode, toDisplayString, withDirectives, mergeProps, isRef, vModelText, vShow, createVNode, resolveDynamicComponent } from 'vue';\nimport { CircleClose } from '@element-plus/icons-vue';\nimport { ElIcon } from '../../icon/index.mjs';\nimport { ElTag } from '../../tag/index.mjs';\nimport { inputTagProps, inputTagEmits } from './input-tag.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useInputTag } from './composables/use-input-tag.mjs';\nimport { useHovering } from './composables/use-hovering.mjs';\nimport { useCalcInputWidth } from '../../../hooks/use-calc-input-width/index.mjs';\nimport { useDragTag } from './composables/use-drag-tag.mjs';\nimport { useInputTagDom } from './composables/use-input-tag-dom.mjs';\nimport { useAttrs } from '../../../hooks/use-attrs/index.mjs';\nimport { useFormItem, useFormItemInputId } from '../../form/src/hooks/use-form-item.mjs';\nimport { ValidateComponentsMap } from '../../../utils/vue/icon.mjs';\nimport { NOOP } from '@vue/shared';\nvar __default__ = defineComponent({\n  name: \"ElInputTag\",\n  inheritAttrs: false\n});\nvar _sfc_main = /* @__PURE__ */defineComponent(_objectSpread(_objectSpread({}, __default__), {}, {\n  props: inputTagProps,\n  emits: inputTagEmits,\n  setup: function setup(__props, _ref) {\n    var expose = _ref.expose,\n      emit = _ref.emit;\n    var props = __props;\n    var attrs = useAttrs();\n    var slots = useSlots();\n    var _useFormItem = useFormItem(),\n      form = _useFormItem.form,\n      formItem = _useFormItem.formItem;\n    var _useFormItemInputId = useFormItemInputId(props, {\n        formItemContext: formItem\n      }),\n      inputId = _useFormItemInputId.inputId;\n    var needStatusIcon = computed(function () {\n      var _a;\n      return (_a = form == null ? void 0 : form.statusIcon) != null ? _a : false;\n    });\n    var validateState = computed(function () {\n      return (formItem == null ? void 0 : formItem.validateState) || \"\";\n    });\n    var validateIcon = computed(function () {\n      return validateState.value && ValidateComponentsMap[validateState.value];\n    });\n    var _useInputTag = useInputTag({\n        props: props,\n        emit: emit,\n        formItem: formItem\n      }),\n      inputRef = _useInputTag.inputRef,\n      wrapperRef = _useInputTag.wrapperRef,\n      isFocused = _useInputTag.isFocused,\n      inputValue = _useInputTag.inputValue,\n      size = _useInputTag.size,\n      tagSize = _useInputTag.tagSize,\n      placeholder = _useInputTag.placeholder,\n      closable = _useInputTag.closable,\n      disabled = _useInputTag.disabled,\n      handleDragged = _useInputTag.handleDragged,\n      handleInput = _useInputTag.handleInput,\n      handleKeydown = _useInputTag.handleKeydown,\n      handleRemoveTag = _useInputTag.handleRemoveTag,\n      handleClear = _useInputTag.handleClear,\n      handleCompositionStart = _useInputTag.handleCompositionStart,\n      handleCompositionUpdate = _useInputTag.handleCompositionUpdate,\n      handleCompositionEnd = _useInputTag.handleCompositionEnd,\n      focus = _useInputTag.focus,\n      blur = _useInputTag.blur;\n    var _useHovering = useHovering(),\n      hovering = _useHovering.hovering,\n      handleMouseEnter = _useHovering.handleMouseEnter,\n      handleMouseLeave = _useHovering.handleMouseLeave;\n    var _useCalcInputWidth = useCalcInputWidth(),\n      calculatorRef = _useCalcInputWidth.calculatorRef,\n      inputStyle = _useCalcInputWidth.inputStyle;\n    var _useDragTag = useDragTag({\n        wrapperRef: wrapperRef,\n        handleDragged: handleDragged,\n        afterDragged: focus\n      }),\n      dropIndicatorRef = _useDragTag.dropIndicatorRef,\n      showDropIndicator = _useDragTag.showDropIndicator,\n      handleDragStart = _useDragTag.handleDragStart,\n      handleDragOver = _useDragTag.handleDragOver,\n      handleDragEnd = _useDragTag.handleDragEnd;\n    var _useInputTagDom = useInputTagDom({\n        props: props,\n        hovering: hovering,\n        isFocused: isFocused,\n        inputValue: inputValue,\n        disabled: disabled,\n        size: size,\n        validateState: validateState,\n        validateIcon: validateIcon,\n        needStatusIcon: needStatusIcon\n      }),\n      ns = _useInputTagDom.ns,\n      nsInput = _useInputTagDom.nsInput,\n      containerKls = _useInputTagDom.containerKls,\n      containerStyle = _useInputTagDom.containerStyle,\n      innerKls = _useInputTagDom.innerKls,\n      showClear = _useInputTagDom.showClear,\n      showSuffix = _useInputTagDom.showSuffix;\n    expose({\n      focus: focus,\n      blur: blur\n    });\n    return function (_ctx, _cache) {\n      return openBlock(), createElementBlock(\"div\", {\n        ref_key: \"wrapperRef\",\n        ref: wrapperRef,\n        \"class\": normalizeClass(unref(containerKls)),\n        style: normalizeStyle(unref(containerStyle)),\n        onMouseenter: unref(handleMouseEnter),\n        onMouseleave: unref(handleMouseLeave)\n      }, [unref(slots).prefix ? (openBlock(), createElementBlock(\"div\", {\n        key: 0,\n        \"class\": normalizeClass(unref(ns).e(\"prefix\"))\n      }, [renderSlot(_ctx.$slots, \"prefix\")], 2)) : createCommentVNode(\"v-if\", true), createElementVNode(\"div\", {\n        \"class\": normalizeClass(unref(innerKls))\n      }, [(openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.modelValue, function (item, index) {\n        return openBlock(), createBlock(unref(ElTag), {\n          key: index,\n          size: unref(tagSize),\n          closable: unref(closable),\n          type: _ctx.tagType,\n          effect: _ctx.tagEffect,\n          draggable: unref(closable) && _ctx.draggable,\n          \"disable-transitions\": \"\",\n          onClose: function onClose($event) {\n            return unref(handleRemoveTag)(index);\n          },\n          onDragstart: function onDragstart(event) {\n            return unref(handleDragStart)(event, index);\n          },\n          onDragover: function onDragover(event) {\n            return unref(handleDragOver)(event, index);\n          },\n          onDragend: unref(handleDragEnd),\n          onDrop: withModifiers(function () {}, [\"stop\"])\n        }, {\n          \"default\": withCtx(function () {\n            return [renderSlot(_ctx.$slots, \"tag\", {\n              value: item,\n              index: index\n            }, function () {\n              return [createTextVNode(toDisplayString(item), 1)];\n            })];\n          }),\n          _: 2\n        }, 1032, [\"size\", \"closable\", \"type\", \"effect\", \"draggable\", \"onClose\", \"onDragstart\", \"onDragover\", \"onDragend\", \"onDrop\"]);\n      }), 128)), createElementVNode(\"div\", {\n        \"class\": normalizeClass(unref(ns).e(\"input-wrapper\"))\n      }, [withDirectives(createElementVNode(\"input\", mergeProps({\n        id: unref(inputId),\n        ref_key: \"inputRef\",\n        ref: inputRef,\n        \"onUpdate:modelValue\": function onUpdateModelValue($event) {\n          return isRef(inputValue) ? inputValue.value = $event : null;\n        }\n      }, unref(attrs), {\n        type: \"text\",\n        minlength: _ctx.minlength,\n        maxlength: _ctx.maxlength,\n        disabled: unref(disabled),\n        readonly: _ctx.readonly,\n        autocomplete: _ctx.autocomplete,\n        tabindex: _ctx.tabindex,\n        placeholder: unref(placeholder),\n        autofocus: _ctx.autofocus,\n        ariaLabel: _ctx.ariaLabel,\n        \"class\": unref(ns).e(\"input\"),\n        style: unref(inputStyle),\n        onCompositionstart: unref(handleCompositionStart),\n        onCompositionupdate: unref(handleCompositionUpdate),\n        onCompositionend: unref(handleCompositionEnd),\n        onInput: unref(handleInput),\n        onKeydown: unref(handleKeydown)\n      }), null, 16, [\"id\", \"onUpdate:modelValue\", \"minlength\", \"maxlength\", \"disabled\", \"readonly\", \"autocomplete\", \"tabindex\", \"placeholder\", \"autofocus\", \"ariaLabel\", \"onCompositionstart\", \"onCompositionupdate\", \"onCompositionend\", \"onInput\", \"onKeydown\"]), [[vModelText, unref(inputValue)]]), createElementVNode(\"span\", {\n        ref_key: \"calculatorRef\",\n        ref: calculatorRef,\n        \"aria-hidden\": \"true\",\n        \"class\": normalizeClass(unref(ns).e(\"input-calculator\")),\n        textContent: toDisplayString(unref(inputValue))\n      }, null, 10, [\"textContent\"])], 2), withDirectives(createElementVNode(\"div\", {\n        ref_key: \"dropIndicatorRef\",\n        ref: dropIndicatorRef,\n        \"class\": normalizeClass(unref(ns).e(\"drop-indicator\"))\n      }, null, 2), [[vShow, unref(showDropIndicator)]])], 2), unref(showSuffix) ? (openBlock(), createElementBlock(\"div\", {\n        key: 1,\n        \"class\": normalizeClass(unref(ns).e(\"suffix\"))\n      }, [renderSlot(_ctx.$slots, \"suffix\"), unref(showClear) ? (openBlock(), createBlock(unref(ElIcon), {\n        key: 0,\n        \"class\": normalizeClass([unref(ns).e(\"icon\"), unref(ns).e(\"clear\")]),\n        onMousedown: withModifiers(unref(NOOP), [\"prevent\"]),\n        onClick: unref(handleClear)\n      }, {\n        \"default\": withCtx(function () {\n          return [createVNode(unref(CircleClose))];\n        }),\n        _: 1\n      }, 8, [\"class\", \"onMousedown\", \"onClick\"])) : createCommentVNode(\"v-if\", true), unref(validateState) && unref(validateIcon) && unref(needStatusIcon) ? (openBlock(), createBlock(unref(ElIcon), {\n        key: 1,\n        \"class\": normalizeClass([unref(nsInput).e(\"icon\"), unref(nsInput).e(\"validateIcon\"), unref(nsInput).is(\"loading\", unref(validateState) === \"validating\")])\n      }, {\n        \"default\": withCtx(function () {\n          return [(openBlock(), createBlock(resolveDynamicComponent(unref(validateIcon))))];\n        }),\n        _: 1\n      }, 8, [\"class\"])) : createCommentVNode(\"v-if\", true)], 2)) : createCommentVNode(\"v-if\", true)], 46, [\"onMouseenter\", \"onMouseleave\"]);\n    };\n  }\n}));\nvar InputTag = /* @__PURE__ */_export_sfc(_sfc_main, [[\"__file\", \"input-tag.vue\"]]);\nexport { InputTag as default };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}