{"ast":null,"code":"import \"core-js/modules/es.number.constructor.js\";\nimport { defineComponent, createVNode, renderSlot, h } from 'vue';\nimport { useSameTarget } from '../../../hooks/use-same-target/index.mjs';\nimport { PatchFlags } from '../../../utils/vue/vnode.mjs';\nimport { buildProps, definePropType } from '../../../utils/vue/props/runtime.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nvar overlayProps = buildProps({\n  mask: {\n    type: Boolean,\n    \"default\": true\n  },\n  customMaskEvent: Boolean,\n  overlayClass: {\n    type: definePropType([String, Array, Object])\n  },\n  zIndex: {\n    type: definePropType([String, Number])\n  }\n});\nvar overlayEmits = {\n  click: function click(evt) {\n    return evt instanceof MouseEvent;\n  }\n};\nvar BLOCK = \"overlay\";\nvar Overlay = defineComponent({\n  name: \"ElOverlay\",\n  props: overlayProps,\n  emits: overlayEmits,\n  setup: function setup(props, _ref) {\n    var slots = _ref.slots,\n      emit = _ref.emit;\n    var ns = useNamespace(BLOCK);\n    var onMaskClick = function onMaskClick(e) {\n      emit(\"click\", e);\n    };\n    var _useSameTarget = useSameTarget(props.customMaskEvent ? void 0 : onMaskClick),\n      onClick = _useSameTarget.onClick,\n      onMousedown = _useSameTarget.onMousedown,\n      onMouseup = _useSameTarget.onMouseup;\n    return function () {\n      return props.mask ? createVNode(\"div\", {\n        \"class\": [ns.b(), props.overlayClass],\n        style: {\n          zIndex: props.zIndex\n        },\n        onClick: onClick,\n        onMousedown: onMousedown,\n        onMouseup: onMouseup\n      }, [renderSlot(slots, \"default\")], PatchFlags.STYLE | PatchFlags.CLASS | PatchFlags.PROPS, [\"onClick\", \"onMouseup\", \"onMousedown\"]) : h(\"div\", {\n        \"class\": props.overlayClass,\n        style: {\n          zIndex: props.zIndex,\n          position: \"fixed\",\n          top: \"0px\",\n          right: \"0px\",\n          bottom: \"0px\",\n          left: \"0px\"\n        }\n      }, [renderSlot(slots, \"default\")]);\n    };\n  }\n});\nexport { Overlay as default, overlayEmits, overlayProps };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}