{"ast":null,"code":"import _objectSpread from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport { defineComponent, ref, computed, openBlock, createBlock, TransitionGroup, normalizeClass, unref, withCtx, createElementBlock, Fragment, renderList, withKeys, renderSlot, createCommentVNode, createElementVNode, withModifiers, createVNode, toDisplayString, normalizeStyle } from 'vue';\nimport { ElIcon } from '../../icon/index.mjs';\nimport { Document, CircleCheck, Check, Close, ZoomIn, Delete } from '@element-plus/icons-vue';\nimport { ElProgress } from '../../progress/index.mjs';\nimport { uploadListProps, uploadListEmits } from './upload-list.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useLocale } from '../../../hooks/use-locale/index.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { useFormDisabled } from '../../form/src/hooks/use-form-common-props.mjs';\nvar __default__ = defineComponent({\n  name: \"ElUploadList\"\n});\nvar _sfc_main = /* @__PURE__ */defineComponent(_objectSpread(_objectSpread({}, __default__), {}, {\n  props: uploadListProps,\n  emits: uploadListEmits,\n  setup: function setup(__props, _ref) {\n    var emit = _ref.emit;\n    var props = __props;\n    var _useLocale = useLocale(),\n      t = _useLocale.t;\n    var nsUpload = useNamespace(\"upload\");\n    var nsIcon = useNamespace(\"icon\");\n    var nsList = useNamespace(\"list\");\n    var disabled = useFormDisabled();\n    var focusing = ref(false);\n    var containerKls = computed(function () {\n      return [nsUpload.b(\"list\"), nsUpload.bm(\"list\", props.listType), nsUpload.is(\"disabled\", props.disabled)];\n    });\n    var handleRemove = function handleRemove(file) {\n      emit(\"remove\", file);\n    };\n    return function (_ctx, _cache) {\n      return openBlock(), createBlock(TransitionGroup, {\n        tag: \"ul\",\n        \"class\": normalizeClass(unref(containerKls)),\n        name: unref(nsList).b()\n      }, {\n        \"default\": withCtx(function () {\n          return [(openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.files, function (file, index) {\n            return openBlock(), createElementBlock(\"li\", {\n              key: file.uid || file.name,\n              \"class\": normalizeClass([unref(nsUpload).be(\"list\", \"item\"), unref(nsUpload).is(file.status), {\n                focusing: focusing.value\n              }]),\n              tabindex: \"0\",\n              onKeydown: withKeys(function ($event) {\n                return !unref(disabled) && handleRemove(file);\n              }, [\"delete\"]),\n              onFocus: function onFocus($event) {\n                return focusing.value = true;\n              },\n              onBlur: function onBlur($event) {\n                return focusing.value = false;\n              },\n              onClick: function onClick($event) {\n                return focusing.value = false;\n              }\n            }, [renderSlot(_ctx.$slots, \"default\", {\n              file: file,\n              index: index\n            }, function () {\n              return [_ctx.listType === \"picture\" || file.status !== \"uploading\" && _ctx.listType === \"picture-card\" ? (openBlock(), createElementBlock(\"img\", {\n                key: 0,\n                \"class\": normalizeClass(unref(nsUpload).be(\"list\", \"item-thumbnail\")),\n                src: file.url,\n                crossorigin: _ctx.crossorigin,\n                alt: \"\"\n              }, null, 10, [\"src\", \"crossorigin\"])) : createCommentVNode(\"v-if\", true), file.status === \"uploading\" || _ctx.listType !== \"picture-card\" ? (openBlock(), createElementBlock(\"div\", {\n                key: 1,\n                \"class\": normalizeClass(unref(nsUpload).be(\"list\", \"item-info\"))\n              }, [createElementVNode(\"a\", {\n                \"class\": normalizeClass(unref(nsUpload).be(\"list\", \"item-name\")),\n                onClick: withModifiers(function ($event) {\n                  return _ctx.handlePreview(file);\n                }, [\"prevent\"])\n              }, [createVNode(unref(ElIcon), {\n                \"class\": normalizeClass(unref(nsIcon).m(\"document\"))\n              }, {\n                \"default\": withCtx(function () {\n                  return [createVNode(unref(Document))];\n                }),\n                _: 1\n              }, 8, [\"class\"]), createElementVNode(\"span\", {\n                \"class\": normalizeClass(unref(nsUpload).be(\"list\", \"item-file-name\")),\n                title: file.name\n              }, toDisplayString(file.name), 11, [\"title\"])], 10, [\"onClick\"]), file.status === \"uploading\" ? (openBlock(), createBlock(unref(ElProgress), {\n                key: 0,\n                type: _ctx.listType === \"picture-card\" ? \"circle\" : \"line\",\n                \"stroke-width\": _ctx.listType === \"picture-card\" ? 6 : 2,\n                percentage: Number(file.percentage),\n                style: normalizeStyle(_ctx.listType === \"picture-card\" ? \"\" : \"margin-top: 0.5rem\")\n              }, null, 8, [\"type\", \"stroke-width\", \"percentage\", \"style\"])) : createCommentVNode(\"v-if\", true)], 2)) : createCommentVNode(\"v-if\", true), createElementVNode(\"label\", {\n                \"class\": normalizeClass(unref(nsUpload).be(\"list\", \"item-status-label\"))\n              }, [_ctx.listType === \"text\" ? (openBlock(), createBlock(unref(ElIcon), {\n                key: 0,\n                \"class\": normalizeClass([unref(nsIcon).m(\"upload-success\"), unref(nsIcon).m(\"circle-check\")])\n              }, {\n                \"default\": withCtx(function () {\n                  return [createVNode(unref(CircleCheck))];\n                }),\n                _: 1\n              }, 8, [\"class\"])) : [\"picture-card\", \"picture\"].includes(_ctx.listType) ? (openBlock(), createBlock(unref(ElIcon), {\n                key: 1,\n                \"class\": normalizeClass([unref(nsIcon).m(\"upload-success\"), unref(nsIcon).m(\"check\")])\n              }, {\n                \"default\": withCtx(function () {\n                  return [createVNode(unref(Check))];\n                }),\n                _: 1\n              }, 8, [\"class\"])) : createCommentVNode(\"v-if\", true)], 2), !unref(disabled) ? (openBlock(), createBlock(unref(ElIcon), {\n                key: 2,\n                \"class\": normalizeClass(unref(nsIcon).m(\"close\")),\n                onClick: function onClick($event) {\n                  return handleRemove(file);\n                }\n              }, {\n                \"default\": withCtx(function () {\n                  return [createVNode(unref(Close))];\n                }),\n                _: 2\n              }, 1032, [\"class\", \"onClick\"])) : createCommentVNode(\"v-if\", true), createCommentVNode(\" Due to close btn only appears when li gets focused disappears after li gets blurred, thus keyboard navigation can never reach close btn\"), createCommentVNode(\" This is a bug which needs to be fixed \"), createCommentVNode(\" TODO: Fix the incorrect navigation interaction \"), !unref(disabled) ? (openBlock(), createElementBlock(\"i\", {\n                key: 3,\n                \"class\": normalizeClass(unref(nsIcon).m(\"close-tip\"))\n              }, toDisplayString(unref(t)(\"el.upload.deleteTip\")), 3)) : createCommentVNode(\"v-if\", true), _ctx.listType === \"picture-card\" ? (openBlock(), createElementBlock(\"span\", {\n                key: 4,\n                \"class\": normalizeClass(unref(nsUpload).be(\"list\", \"item-actions\"))\n              }, [createElementVNode(\"span\", {\n                \"class\": normalizeClass(unref(nsUpload).be(\"list\", \"item-preview\")),\n                onClick: function onClick($event) {\n                  return _ctx.handlePreview(file);\n                }\n              }, [createVNode(unref(ElIcon), {\n                \"class\": normalizeClass(unref(nsIcon).m(\"zoom-in\"))\n              }, {\n                \"default\": withCtx(function () {\n                  return [createVNode(unref(ZoomIn))];\n                }),\n                _: 1\n              }, 8, [\"class\"])], 10, [\"onClick\"]), !unref(disabled) ? (openBlock(), createElementBlock(\"span\", {\n                key: 0,\n                \"class\": normalizeClass(unref(nsUpload).be(\"list\", \"item-delete\")),\n                onClick: function onClick($event) {\n                  return handleRemove(file);\n                }\n              }, [createVNode(unref(ElIcon), {\n                \"class\": normalizeClass(unref(nsIcon).m(\"delete\"))\n              }, {\n                \"default\": withCtx(function () {\n                  return [createVNode(unref(Delete))];\n                }),\n                _: 1\n              }, 8, [\"class\"])], 10, [\"onClick\"])) : createCommentVNode(\"v-if\", true)], 2)) : createCommentVNode(\"v-if\", true)];\n            })], 42, [\"onKeydown\", \"onFocus\", \"onBlur\", \"onClick\"]);\n          }), 128)), renderSlot(_ctx.$slots, \"append\")];\n        }),\n        _: 3\n      }, 8, [\"class\", \"name\"]);\n    };\n  }\n}));\nvar UploadList = /* @__PURE__ */_export_sfc(_sfc_main, [[\"__file\", \"upload-list.vue\"]]);\nexport { UploadList as default };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}