{"ast":null,"code":"import { buildProps, definePropType } from '../../../../utils/vue/props/runtime.mjs';\nimport { datePickTypes } from '../../../../constants/date.mjs';\nimport { isArray } from '@vue/shared';\nvar selectionModes = [\"date\", \"dates\", \"year\", \"years\", \"month\", \"months\", \"week\", \"range\"];\nvar datePickerSharedProps = buildProps({\n  disabledDate: {\n    type: definePropType(Function)\n  },\n  date: {\n    type: definePropType(Object),\n    required: true\n  },\n  minDate: {\n    type: definePropType(Object)\n  },\n  maxDate: {\n    type: definePropType(Object)\n  },\n  parsedValue: {\n    type: definePropType([Object, Array])\n  },\n  rangeState: {\n    type: definePropType(Object),\n    \"default\": function _default() {\n      return {\n        endDate: null,\n        selecting: false\n      };\n    }\n  }\n});\nvar panelSharedProps = buildProps({\n  type: {\n    type: definePropType(String),\n    required: true,\n    values: datePickTypes\n  },\n  dateFormat: String,\n  timeFormat: String,\n  showNow: {\n    type: Boolean,\n    \"default\": true\n  }\n});\nvar panelRangeSharedProps = buildProps({\n  unlinkPanels: Boolean,\n  parsedValue: {\n    type: definePropType(Array)\n  }\n});\nvar selectionModeWithDefault = function selectionModeWithDefault(mode) {\n  return {\n    type: String,\n    values: selectionModes,\n    \"default\": mode\n  };\n};\nvar rangePickerSharedEmits = {\n  pick: function pick(range) {\n    return isArray(range);\n  }\n};\nexport { datePickerSharedProps, panelRangeSharedProps, panelSharedProps, rangePickerSharedEmits, selectionModeWithDefault };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}