{"ast":null,"code":"import \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.string.fixed.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport { defineComponent, inject, ref, computed, unref, onUpdated, createVNode, nextTick } from 'vue';\nimport { tableV2HeaderProps } from '../header.mjs';\nimport { enforceUnit } from '../utils.mjs';\nimport { useNamespace } from '../../../../hooks/use-namespace/index.mjs';\nimport { castArray } from 'lodash-unified';\nvar COMPONENT_NAME = \"ElTableV2Header\";\nvar TableV2Header = defineComponent({\n  name: COMPONENT_NAME,\n  props: tableV2HeaderProps,\n  setup: function setup(props, _ref) {\n    var slots = _ref.slots,\n      expose = _ref.expose;\n    var ns = useNamespace(\"table-v2\");\n    var scrollLeftInfo = inject(\"tableV2GridScrollLeft\");\n    var headerRef = ref();\n    var headerStyle = computed(function () {\n      return enforceUnit({\n        width: props.width,\n        height: props.height\n      });\n    });\n    var rowStyle = computed(function () {\n      return enforceUnit({\n        width: props.rowWidth,\n        height: props.height\n      });\n    });\n    var headerHeights = computed(function () {\n      return castArray(unref(props.headerHeight));\n    });\n    var scrollToLeft = function scrollToLeft(left) {\n      var headerEl = unref(headerRef);\n      nextTick(function () {\n        (headerEl == null ? void 0 : headerEl.scroll) && headerEl.scroll({\n          left: left\n        });\n      });\n    };\n    var renderFixedRows = function renderFixedRows() {\n      var fixedRowClassName = ns.e(\"fixed-header-row\");\n      var columns = props.columns,\n        fixedHeaderData = props.fixedHeaderData,\n        rowHeight = props.rowHeight;\n      return fixedHeaderData == null ? void 0 : fixedHeaderData.map(function (fixedRowData, fixedRowIndex) {\n        var _a;\n        var style = enforceUnit({\n          height: rowHeight,\n          width: \"100%\"\n        });\n        return (_a = slots.fixed) == null ? void 0 : _a.call(slots, {\n          \"class\": fixedRowClassName,\n          columns: columns,\n          rowData: fixedRowData,\n          rowIndex: -(fixedRowIndex + 1),\n          style: style\n        });\n      });\n    };\n    var renderDynamicRows = function renderDynamicRows() {\n      var dynamicRowClassName = ns.e(\"dynamic-header-row\");\n      var columns = props.columns;\n      return unref(headerHeights).map(function (rowHeight, rowIndex) {\n        var _a;\n        var style = enforceUnit({\n          width: \"100%\",\n          height: rowHeight\n        });\n        return (_a = slots.dynamic) == null ? void 0 : _a.call(slots, {\n          \"class\": dynamicRowClassName,\n          columns: columns,\n          headerIndex: rowIndex,\n          style: style\n        });\n      });\n    };\n    onUpdated(function () {\n      if (scrollLeftInfo == null ? void 0 : scrollLeftInfo.value) {\n        scrollToLeft(scrollLeftInfo.value);\n      }\n    });\n    expose({\n      scrollToLeft: scrollToLeft\n    });\n    return function () {\n      if (props.height <= 0) return;\n      return createVNode(\"div\", {\n        \"ref\": headerRef,\n        \"class\": props[\"class\"],\n        \"style\": unref(headerStyle),\n        \"role\": \"rowgroup\"\n      }, [createVNode(\"div\", {\n        \"style\": unref(rowStyle),\n        \"class\": ns.e(\"header\")\n      }, [renderDynamicRows(), renderFixedRows()])]);\n    };\n  }\n});\nvar Header = TableV2Header;\nexport { Header as default };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}