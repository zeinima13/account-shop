{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\nimport { ref } from 'vue';\nimport { isNumber } from '../../../../utils/types.mjs';\nvar useScrollbar = function useScrollbar() {\n  var scrollBarRef = ref();\n  var scrollTo = function scrollTo(options, yCoord) {\n    var scrollbar = scrollBarRef.value;\n    if (scrollbar) {\n      scrollbar.scrollTo(options, yCoord);\n    }\n  };\n  var setScrollPosition = function setScrollPosition(position, offset) {\n    var scrollbar = scrollBarRef.value;\n    if (scrollbar && isNumber(offset) && [\"Top\", \"Left\"].includes(position)) {\n      scrollbar[\"setScroll\".concat(position)](offset);\n    }\n  };\n  var setScrollTop = function setScrollTop(top) {\n    return setScrollPosition(\"Top\", top);\n  };\n  var setScrollLeft = function setScrollLeft(left) {\n    return setScrollPosition(\"Left\", left);\n  };\n  return {\n    scrollBarRef: scrollBarRef,\n    scrollTo: scrollTo,\n    setScrollTop: setScrollTop,\n    setScrollLeft: setScrollLeft\n  };\n};\nexport { useScrollbar };","map":{"version":3,"names":["useScrollbar","scrollBarRef","ref","scrollTo","options","yCoord","scrollbar","value","setScrollPosition","position","offset","isNumber","includes","concat","setScrollTop","top","setScrollLeft","left"],"sources":["../../../../../../../packages/components/table/src/composables/use-scrollbar.ts"],"sourcesContent":["import { ref } from 'vue'\nimport { isNumber } from '@element-plus/utils'\n\nexport const useScrollbar = () => {\n  const scrollBarRef = ref()\n\n  const scrollTo = (options: ScrollToOptions | number, yCoord?: number) => {\n    const scrollbar = scrollBarRef.value\n    if (scrollbar) {\n      scrollbar.scrollTo(options, yCoord)\n    }\n  }\n\n  const setScrollPosition = (position: 'Top' | 'Left', offset?: number) => {\n    const scrollbar = scrollBarRef.value\n    if (scrollbar && isNumber(offset) && ['Top', 'Left'].includes(position)) {\n      scrollbar[`setScroll${position}`](offset)\n    }\n  }\n\n  const setScrollTop = (top?: number) => setScrollPosition('Top', top)\n  const setScrollLeft = (left?: number) => setScrollPosition('Left', left)\n\n  return {\n    scrollBarRef,\n    scrollTo,\n    setScrollTop,\n    setScrollLeft,\n  }\n}\n"],"mappings":";;;AAEY,IAACA,YAAY,GAAG,SAAfA,YAAYA,CAAA,EAAS;EAChC,IAAMC,YAAY,GAAGC,GAAG,EAAE;EAC1B,IAAMC,QAAQ,GAAG,SAAXA,QAAQA,CAAIC,OAAO,EAAEC,MAAM,EAAK;IACpC,IAAMC,SAAS,GAAGL,YAAY,CAACM,KAAK;IACpC,IAAID,SAAS,EAAE;MACbA,SAAS,CAACH,QAAQ,CAACC,OAAO,EAAEC,MAAM,CAAC;IACzC;EACA,CAAG;EACD,IAAMG,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAIC,QAAQ,EAAEC,MAAM,EAAK;IAC9C,IAAMJ,SAAS,GAAGL,YAAY,CAACM,KAAK;IACpC,IAAID,SAAS,IAAIK,QAAQ,CAACD,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,MAAM,CAAC,CAACE,QAAQ,CAACH,QAAQ,CAAC,EAAE;MACvEH,SAAS,aAAAO,MAAA,CAAaJ,QAAQ,EAAG,CAACC,MAAM,CAAC;IAC/C;EACA,CAAG;EACD,IAAMI,YAAY,GAAG,SAAfA,YAAYA,CAAIC,GAAG;IAAA,OAAKP,iBAAiB,CAAC,KAAK,EAAEO,GAAG,CAAC;EAAA;EAC3D,IAAMC,aAAa,GAAG,SAAhBA,aAAaA,CAAIC,IAAI;IAAA,OAAKT,iBAAiB,CAAC,MAAM,EAAES,IAAI,CAAC;EAAA;EAC/D,OAAO;IACLhB,YAAY,EAAZA,YAAY;IACZE,QAAQ,EAARA,QAAQ;IACRW,YAAY,EAAZA,YAAY;IACZE,aAAa,EAAbA;EACJ,CAAG;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}