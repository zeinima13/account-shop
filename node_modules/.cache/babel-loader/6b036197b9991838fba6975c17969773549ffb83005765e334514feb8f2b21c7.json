{"ast":null,"code":"import _defineProperty from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.string.ends-with.js\";\nimport \"core-js/modules/es.string.starts-with.js\";\nimport { defineComponent, ref, computed, onMounted, openBlock, createBlock, Transition, unref, withCtx, withDirectives, createElementVNode, normalizeClass, normalizeStyle, resolveDynamicComponent, createCommentVNode, toDisplayString, renderSlot, createElementBlock, Fragment, vShow, withModifiers, createVNode } from 'vue';\nimport { useEventListener, useTimeoutFn } from '@vueuse/core';\nimport { ElIcon } from '../../icon/index.mjs';\nimport { notificationProps, notificationEmits } from './notification.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useGlobalComponentSettings } from '../../config-provider/src/hooks/use-global-config.mjs';\nimport { TypeComponentsMap, CloseComponents } from '../../../utils/vue/icon.mjs';\nimport { EVENT_CODE } from '../../../constants/aria.mjs';\nvar __default__ = defineComponent({\n  name: \"ElNotification\"\n});\nvar _sfc_main = /* @__PURE__ */defineComponent(_objectSpread(_objectSpread({}, __default__), {}, {\n  props: notificationProps,\n  emits: notificationEmits,\n  setup: function setup(__props, _ref) {\n    var expose = _ref.expose;\n    var props = __props;\n    var _useGlobalComponentSe = useGlobalComponentSettings(\"notification\"),\n      ns = _useGlobalComponentSe.ns,\n      zIndex = _useGlobalComponentSe.zIndex;\n    var nextZIndex = zIndex.nextZIndex,\n      currentZIndex = zIndex.currentZIndex;\n    var Close = CloseComponents.Close;\n    var visible = ref(false);\n    var timer = void 0;\n    var typeClass = computed(function () {\n      var type = props.type;\n      return type && TypeComponentsMap[props.type] ? ns.m(type) : \"\";\n    });\n    var iconComponent = computed(function () {\n      if (!props.type) return props.icon;\n      return TypeComponentsMap[props.type] || props.icon;\n    });\n    var horizontalClass = computed(function () {\n      return props.position.endsWith(\"right\") ? \"right\" : \"left\";\n    });\n    var verticalProperty = computed(function () {\n      return props.position.startsWith(\"top\") ? \"top\" : \"bottom\";\n    });\n    var positionStyle = computed(function () {\n      var _a;\n      return _defineProperty(_defineProperty({}, verticalProperty.value, \"\".concat(props.offset, \"px\")), \"zIndex\", (_a = props.zIndex) != null ? _a : currentZIndex.value);\n    });\n    function startTimer() {\n      if (props.duration > 0) {\n        var _useTimeoutFn = useTimeoutFn(function () {\n          if (visible.value) close();\n        }, props.duration);\n        timer = _useTimeoutFn.stop;\n      }\n    }\n    function clearTimer() {\n      timer == null ? void 0 : timer();\n    }\n    function close() {\n      visible.value = false;\n    }\n    function onKeydown(_ref3) {\n      var code = _ref3.code;\n      if (code === EVENT_CODE[\"delete\"] || code === EVENT_CODE.backspace) {\n        clearTimer();\n      } else if (code === EVENT_CODE.esc) {\n        if (visible.value) {\n          close();\n        }\n      } else {\n        startTimer();\n      }\n    }\n    onMounted(function () {\n      startTimer();\n      nextZIndex();\n      visible.value = true;\n    });\n    useEventListener(document, \"keydown\", onKeydown);\n    expose({\n      visible: visible,\n      close: close\n    });\n    return function (_ctx, _cache) {\n      return openBlock(), createBlock(Transition, {\n        name: unref(ns).b(\"fade\"),\n        onBeforeLeave: _ctx.onClose,\n        onAfterLeave: function onAfterLeave($event) {\n          return _ctx.$emit(\"destroy\");\n        },\n        persisted: \"\"\n      }, {\n        \"default\": withCtx(function () {\n          return [withDirectives(createElementVNode(\"div\", {\n            id: _ctx.id,\n            \"class\": normalizeClass([unref(ns).b(), _ctx.customClass, unref(horizontalClass)]),\n            style: normalizeStyle(unref(positionStyle)),\n            role: \"alert\",\n            onMouseenter: clearTimer,\n            onMouseleave: startTimer,\n            onClick: _ctx.onClick\n          }, [unref(iconComponent) ? (openBlock(), createBlock(unref(ElIcon), {\n            key: 0,\n            \"class\": normalizeClass([unref(ns).e(\"icon\"), unref(typeClass)])\n          }, {\n            \"default\": withCtx(function () {\n              return [(openBlock(), createBlock(resolveDynamicComponent(unref(iconComponent))))];\n            }),\n            _: 1\n          }, 8, [\"class\"])) : createCommentVNode(\"v-if\", true), createElementVNode(\"div\", {\n            \"class\": normalizeClass(unref(ns).e(\"group\"))\n          }, [createElementVNode(\"h2\", {\n            \"class\": normalizeClass(unref(ns).e(\"title\")),\n            textContent: toDisplayString(_ctx.title)\n          }, null, 10, [\"textContent\"]), withDirectives(createElementVNode(\"div\", {\n            \"class\": normalizeClass(unref(ns).e(\"content\")),\n            style: normalizeStyle(!!_ctx.title ? void 0 : {\n              margin: 0\n            })\n          }, [renderSlot(_ctx.$slots, \"default\", {}, function () {\n            return [!_ctx.dangerouslyUseHTMLString ? (openBlock(), createElementBlock(\"p\", {\n              key: 0\n            }, toDisplayString(_ctx.message), 1)) : (openBlock(), createElementBlock(Fragment, {\n              key: 1\n            }, [createCommentVNode(\" Caution here, message could've been compromised, never use user's input as message \"), createElementVNode(\"p\", {\n              innerHTML: _ctx.message\n            }, null, 8, [\"innerHTML\"])], 2112))];\n          })], 6), [[vShow, _ctx.message]]), _ctx.showClose ? (openBlock(), createBlock(unref(ElIcon), {\n            key: 0,\n            \"class\": normalizeClass(unref(ns).e(\"closeBtn\")),\n            onClick: withModifiers(close, [\"stop\"])\n          }, {\n            \"default\": withCtx(function () {\n              return [createVNode(unref(Close))];\n            }),\n            _: 1\n          }, 8, [\"class\", \"onClick\"])) : createCommentVNode(\"v-if\", true)], 2)], 46, [\"id\", \"onClick\"]), [[vShow, visible.value]])];\n        }),\n        _: 3\n      }, 8, [\"name\", \"onBeforeLeave\", \"onAfterLeave\"]);\n    };\n  }\n}));\nvar NotificationConstructor = /* @__PURE__ */_export_sfc(_sfc_main, [[\"__file\", \"notification.vue\"]]);\nexport { NotificationConstructor as default };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}