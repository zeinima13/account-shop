{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _slicedToArray from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _asyncToGenerator from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _objectSpread from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.number.parse-int.js\";\nimport \"core-js/modules/es.object.entries.js\";\nimport { nextTick } from 'vue';\nimport { createLoadingComponent } from './loading.mjs';\nimport { isClient } from '@vueuse/core';\nimport { isString } from '@vue/shared';\nimport { getStyle, addClass, removeClass } from '../../../utils/dom/style.mjs';\nvar fullscreenInstance = void 0;\nvar Loading = function Loading() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  if (!isClient) return void 0;\n  var resolved = resolveOptions(options);\n  if (resolved.fullscreen && fullscreenInstance) {\n    return fullscreenInstance;\n  }\n  var instance = createLoadingComponent(_objectSpread(_objectSpread({}, resolved), {}, {\n    closed: function closed() {\n      var _a;\n      (_a = resolved.closed) == null ? void 0 : _a.call(resolved);\n      if (resolved.fullscreen) fullscreenInstance = void 0;\n    }\n  }));\n  addStyle(resolved, resolved.parent, instance);\n  addClassList(resolved, resolved.parent, instance);\n  resolved.parent.vLoadingAddClassList = function () {\n    return addClassList(resolved, resolved.parent, instance);\n  };\n  var loadingNumber = resolved.parent.getAttribute(\"loading-number\");\n  if (!loadingNumber) {\n    loadingNumber = \"1\";\n  } else {\n    loadingNumber = \"\".concat(Number.parseInt(loadingNumber) + 1);\n  }\n  resolved.parent.setAttribute(\"loading-number\", loadingNumber);\n  resolved.parent.appendChild(instance.$el);\n  nextTick(function () {\n    return instance.visible.value = resolved.visible;\n  });\n  if (resolved.fullscreen) {\n    fullscreenInstance = instance;\n  }\n  return instance;\n};\nvar resolveOptions = function resolveOptions(options) {\n  var _a, _b, _c, _d;\n  var target;\n  if (isString(options.target)) {\n    target = (_a = document.querySelector(options.target)) != null ? _a : document.body;\n  } else {\n    target = options.target || document.body;\n  }\n  return {\n    parent: target === document.body || options.body ? document.body : target,\n    background: options.background || \"\",\n    svg: options.svg || \"\",\n    svgViewBox: options.svgViewBox || \"\",\n    spinner: options.spinner || false,\n    text: options.text || \"\",\n    fullscreen: target === document.body && ((_b = options.fullscreen) != null ? _b : true),\n    lock: (_c = options.lock) != null ? _c : false,\n    customClass: options.customClass || \"\",\n    visible: (_d = options.visible) != null ? _d : true,\n    beforeClose: options.beforeClose,\n    closed: options.closed,\n    target: target\n  };\n};\nvar addStyle = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(options, parent, instance) {\n    var _ref2, nextZIndex, maskStyle, _i, _arr, property, scroll, _i2, _arr2, _property, _i3, _Object$entries, _Object$entries$_i, key, value;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          _ref2 = instance.vm.zIndex || instance.vm._.exposed.zIndex, nextZIndex = _ref2.nextZIndex;\n          maskStyle = {};\n          if (!options.fullscreen) {\n            _context.next = 8;\n            break;\n          }\n          instance.originalPosition.value = getStyle(document.body, \"position\");\n          instance.originalOverflow.value = getStyle(document.body, \"overflow\");\n          maskStyle.zIndex = nextZIndex();\n          _context.next = 17;\n          break;\n        case 8:\n          if (!(options.parent === document.body)) {\n            _context.next = 16;\n            break;\n          }\n          instance.originalPosition.value = getStyle(document.body, \"position\");\n          _context.next = 12;\n          return nextTick();\n        case 12:\n          for (_i = 0, _arr = [\"top\", \"left\"]; _i < _arr.length; _i++) {\n            property = _arr[_i];\n            scroll = property === \"top\" ? \"scrollTop\" : \"scrollLeft\";\n            maskStyle[property] = \"\".concat(options.target.getBoundingClientRect()[property] + document.body[scroll] + document.documentElement[scroll] - Number.parseInt(getStyle(document.body, \"margin-\".concat(property)), 10), \"px\");\n          }\n          for (_i2 = 0, _arr2 = [\"height\", \"width\"]; _i2 < _arr2.length; _i2++) {\n            _property = _arr2[_i2];\n            maskStyle[_property] = \"\".concat(options.target.getBoundingClientRect()[_property], \"px\");\n          }\n          _context.next = 17;\n          break;\n        case 16:\n          instance.originalPosition.value = getStyle(parent, \"position\");\n        case 17:\n          for (_i3 = 0, _Object$entries = Object.entries(maskStyle); _i3 < _Object$entries.length; _i3++) {\n            _Object$entries$_i = _slicedToArray(_Object$entries[_i3], 2), key = _Object$entries$_i[0], value = _Object$entries$_i[1];\n            instance.$el.style[key] = value;\n          }\n        case 18:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return function addStyle(_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}();\nvar addClassList = function addClassList(options, parent, instance) {\n  var ns = instance.vm.ns || instance.vm._.exposed.ns;\n  if (![\"absolute\", \"fixed\", \"sticky\"].includes(instance.originalPosition.value)) {\n    addClass(parent, ns.bm(\"parent\", \"relative\"));\n  } else {\n    removeClass(parent, ns.bm(\"parent\", \"relative\"));\n  }\n  if (options.fullscreen && options.lock) {\n    addClass(parent, ns.bm(\"parent\", \"hidden\"));\n  } else {\n    removeClass(parent, ns.bm(\"parent\", \"hidden\"));\n  }\n};\nexport { Loading };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}