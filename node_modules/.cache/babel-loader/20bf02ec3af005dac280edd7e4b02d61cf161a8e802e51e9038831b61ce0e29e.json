{"ast":null,"code":"import _slicedToArray from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport \"core-js/modules/es.array.fill.js\";\nimport { computed, ref, watchEffect } from 'vue';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { isArray } from '@vue/shared';\nimport { isNumber } from '../../../utils/types.mjs';\nvar SIZE_MAP = {\n  small: 8,\n  \"default\": 12,\n  large: 16\n};\nfunction useSpace(props) {\n  var ns = useNamespace(\"space\");\n  var classes = computed(function () {\n    return [ns.b(), ns.m(props.direction), props[\"class\"]];\n  });\n  var horizontalSize = ref(0);\n  var verticalSize = ref(0);\n  var containerStyle = computed(function () {\n    var wrapKls = props.wrap || props.fill ? {\n      flexWrap: \"wrap\"\n    } : {};\n    var alignment = {\n      alignItems: props.alignment\n    };\n    var gap = {\n      rowGap: \"\".concat(verticalSize.value, \"px\"),\n      columnGap: \"\".concat(horizontalSize.value, \"px\")\n    };\n    return [wrapKls, alignment, gap, props.style];\n  });\n  var itemStyle = computed(function () {\n    return props.fill ? {\n      flexGrow: 1,\n      minWidth: \"\".concat(props.fillRatio, \"%\")\n    } : {};\n  });\n  watchEffect(function () {\n    var _props$size = props.size,\n      size = _props$size === void 0 ? \"small\" : _props$size,\n      wrap = props.wrap,\n      dir = props.direction,\n      fill = props.fill;\n    if (isArray(size)) {\n      var _size = _slicedToArray(size, 2),\n        _size$ = _size[0],\n        h = _size$ === void 0 ? 0 : _size$,\n        _size$2 = _size[1],\n        v = _size$2 === void 0 ? 0 : _size$2;\n      horizontalSize.value = h;\n      verticalSize.value = v;\n    } else {\n      var val;\n      if (isNumber(size)) {\n        val = size;\n      } else {\n        val = SIZE_MAP[size || \"small\"] || SIZE_MAP.small;\n      }\n      if ((wrap || fill) && dir === \"horizontal\") {\n        horizontalSize.value = verticalSize.value = val;\n      } else {\n        if (dir === \"horizontal\") {\n          horizontalSize.value = val;\n          verticalSize.value = 0;\n        } else {\n          verticalSize.value = val;\n          horizontalSize.value = 0;\n        }\n      }\n    }\n  });\n  return {\n    classes: classes,\n    containerStyle: containerStyle,\n    itemStyle: itemStyle\n  };\n}\nexport { useSpace };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}