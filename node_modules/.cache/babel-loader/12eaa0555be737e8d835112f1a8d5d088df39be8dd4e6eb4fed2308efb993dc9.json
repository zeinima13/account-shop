{"ast":null,"code":"import \"core-js/modules/es.function.name.js\";\nimport { defineComponent, getCurrentInstance, inject, toRef, computed, reactive, onMounted, onBeforeUnmount, resolveComponent, openBlock, createElementBlock, normalizeClass, createBlock, withCtx, renderSlot, createElementVNode, Fragment } from 'vue';\nimport { ElTooltip } from '../../tooltip/index.mjs';\nimport useMenu from './use-menu.mjs';\nimport { menuItemProps, menuItemEmits } from './menu-item.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { throwError } from '../../../utils/error.mjs';\nvar COMPONENT_NAME = \"ElMenuItem\";\nvar _sfc_main = defineComponent({\n  name: COMPONENT_NAME,\n  components: {\n    ElTooltip: ElTooltip\n  },\n  props: menuItemProps,\n  emits: menuItemEmits,\n  setup: function setup(props, _ref) {\n    var emit = _ref.emit;\n    var instance = getCurrentInstance();\n    var rootMenu = inject(\"rootMenu\");\n    var nsMenu = useNamespace(\"menu\");\n    var nsMenuItem = useNamespace(\"menu-item\");\n    if (!rootMenu) throwError(COMPONENT_NAME, \"can not inject root menu\");\n    var _useMenu = useMenu(instance, toRef(props, \"index\")),\n      parentMenu = _useMenu.parentMenu,\n      indexPath = _useMenu.indexPath;\n    var subMenu = inject(\"subMenu:\".concat(parentMenu.value.uid));\n    if (!subMenu) throwError(COMPONENT_NAME, \"can not inject sub menu\");\n    var active = computed(function () {\n      return props.index === rootMenu.activeIndex;\n    });\n    var item = reactive({\n      index: props.index,\n      indexPath: indexPath,\n      active: active\n    });\n    var handleClick = function handleClick() {\n      if (!props.disabled) {\n        rootMenu.handleMenuItemClick({\n          index: props.index,\n          indexPath: indexPath.value,\n          route: props.route\n        });\n        emit(\"click\", item);\n      }\n    };\n    onMounted(function () {\n      subMenu.addSubMenu(item);\n      rootMenu.addMenuItem(item);\n    });\n    onBeforeUnmount(function () {\n      subMenu.removeSubMenu(item);\n      rootMenu.removeMenuItem(item);\n    });\n    return {\n      parentMenu: parentMenu,\n      rootMenu: rootMenu,\n      active: active,\n      nsMenu: nsMenu,\n      nsMenuItem: nsMenuItem,\n      handleClick: handleClick\n    };\n  }\n});\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_el_tooltip = resolveComponent(\"el-tooltip\");\n  return openBlock(), createElementBlock(\"li\", {\n    \"class\": normalizeClass([_ctx.nsMenuItem.b(), _ctx.nsMenuItem.is(\"active\", _ctx.active), _ctx.nsMenuItem.is(\"disabled\", _ctx.disabled)]),\n    role: \"menuitem\",\n    tabindex: \"-1\",\n    onClick: _ctx.handleClick\n  }, [_ctx.parentMenu.type.name === \"ElMenu\" && _ctx.rootMenu.props.collapse && _ctx.$slots.title ? (openBlock(), createBlock(_component_el_tooltip, {\n    key: 0,\n    effect: _ctx.rootMenu.props.popperEffect,\n    placement: \"right\",\n    \"fallback-placements\": [\"left\"],\n    persistent: \"\"\n  }, {\n    content: withCtx(function () {\n      return [renderSlot(_ctx.$slots, \"title\")];\n    }),\n    \"default\": withCtx(function () {\n      return [createElementVNode(\"div\", {\n        \"class\": normalizeClass(_ctx.nsMenu.be(\"tooltip\", \"trigger\"))\n      }, [renderSlot(_ctx.$slots, \"default\")], 2)];\n    }),\n    _: 3\n  }, 8, [\"effect\"])) : (openBlock(), createElementBlock(Fragment, {\n    key: 1\n  }, [renderSlot(_ctx.$slots, \"default\"), renderSlot(_ctx.$slots, \"title\")], 64))], 10, [\"onClick\"]);\n}\nvar MenuItem = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render], [\"__file\", \"menu-item.vue\"]]);\nexport { MenuItem as default };","map":{"version":3,"names":["COMPONENT_NAME","_sfc_main","defineComponent","name","components","ElTooltip","props","menuItemProps","emits","menuItemEmits","setup","_ref","emit","instance","getCurrentInstance","rootMenu","inject","nsMenu","useNamespace","nsMenuItem","throwError","_useMenu","useMenu","toRef","parentMenu","indexPath","subMenu","concat","value","uid","active","computed","index","activeIndex","item","reactive","handleClick","disabled","handleMenuItemClick","route","onMounted","addSubMenu","addMenuItem","onBeforeUnmount","removeSubMenu","removeMenuItem","_cache","$props","$setup","$data","$options","_component_el_tooltip","resolveComponent","openBlock","createElementBlock","normalizeClass","_ctx","b","is","role","tabindex","onClick","type","collapse","$slots","title","createBlock","key","effect","popperEffect","placement","persistent","content","withCtx","createElementVNode","be","MenuItem","_export_sfc","_sfc_render"],"sources":["../../../../../../packages/components/menu/src/menu-item.vue"],"sourcesContent":["<template>\n  <li\n    :class=\"[\n      nsMenuItem.b(),\n      nsMenuItem.is('active', active),\n      nsMenuItem.is('disabled', disabled),\n    ]\"\n    role=\"menuitem\"\n    tabindex=\"-1\"\n    @click=\"handleClick\"\n  >\n    <el-tooltip\n      v-if=\"\n        parentMenu.type.name === 'ElMenu' &&\n        rootMenu.props.collapse &&\n        $slots.title\n      \"\n      :effect=\"rootMenu.props.popperEffect\"\n      placement=\"right\"\n      :fallback-placements=\"['left']\"\n      persistent\n    >\n      <template #content>\n        <slot name=\"title\" />\n      </template>\n      <div :class=\"nsMenu.be('tooltip', 'trigger')\">\n        <slot />\n      </div>\n    </el-tooltip>\n    <template v-else>\n      <slot />\n      <slot name=\"title\" />\n    </template>\n  </li>\n</template>\n\n<script lang=\"ts\">\n// @ts-nocheck\nimport {\n  computed,\n  defineComponent,\n  getCurrentInstance,\n  inject,\n  onBeforeUnmount,\n  onMounted,\n  reactive,\n  toRef,\n} from 'vue'\nimport ElTooltip from '@element-plus/components/tooltip'\nimport { throwError } from '@element-plus/utils'\nimport { useNamespace } from '@element-plus/hooks'\nimport useMenu from './use-menu'\nimport { menuItemEmits, menuItemProps } from './menu-item'\n\nimport type { MenuItemRegistered, MenuProvider, SubMenuProvider } from './types'\n\nconst COMPONENT_NAME = 'ElMenuItem'\nexport default defineComponent({\n  name: COMPONENT_NAME,\n  components: {\n    ElTooltip,\n  },\n\n  props: menuItemProps,\n  emits: menuItemEmits,\n\n  setup(props, { emit }) {\n    const instance = getCurrentInstance()!\n    const rootMenu = inject<MenuProvider>('rootMenu')\n    const nsMenu = useNamespace('menu')\n    const nsMenuItem = useNamespace('menu-item')\n    if (!rootMenu) throwError(COMPONENT_NAME, 'can not inject root menu')\n\n    const { parentMenu, indexPath } = useMenu(instance, toRef(props, 'index'))\n\n    const subMenu = inject<SubMenuProvider>(`subMenu:${parentMenu.value.uid}`)\n    if (!subMenu) throwError(COMPONENT_NAME, 'can not inject sub menu')\n\n    const active = computed(() => props.index === rootMenu.activeIndex)\n    const item: MenuItemRegistered = reactive({\n      index: props.index,\n      indexPath,\n      active,\n    })\n\n    const handleClick = () => {\n      if (!props.disabled) {\n        rootMenu.handleMenuItemClick({\n          index: props.index,\n          indexPath: indexPath.value,\n          route: props.route,\n        })\n        emit('click', item)\n      }\n    }\n\n    onMounted(() => {\n      subMenu.addSubMenu(item)\n      rootMenu.addMenuItem(item)\n    })\n\n    onBeforeUnmount(() => {\n      subMenu.removeSubMenu(item)\n      rootMenu.removeMenuItem(item)\n    })\n\n    return {\n      parentMenu,\n      rootMenu,\n      active,\n      nsMenu,\n      nsMenuItem,\n      handleClick,\n    }\n  },\n})\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}