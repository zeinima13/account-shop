{"ast":null,"code":"import _slicedToArray from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _objectSpread from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.number.is-nan.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.pad-end.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport { defineComponent, computed, openBlock, createElementBlock, normalizeClass, unref, renderSlot, createTextVNode, toDisplayString, createCommentVNode, createElementVNode, normalizeStyle } from 'vue';\nimport { statisticProps } from './statistic.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { isFunction } from '@vue/shared';\nimport { isNumber } from '../../../utils/types.mjs';\nvar __default__ = defineComponent({\n  name: \"ElStatistic\"\n});\nvar _sfc_main = /* @__PURE__ */defineComponent(_objectSpread(_objectSpread({}, __default__), {}, {\n  props: statisticProps,\n  setup: function setup(__props, _ref) {\n    var expose = _ref.expose;\n    var props = __props;\n    var ns = useNamespace(\"statistic\");\n    var displayValue = computed(function () {\n      var value = props.value,\n        formatter = props.formatter,\n        precision = props.precision,\n        decimalSeparator = props.decimalSeparator,\n        groupSeparator = props.groupSeparator;\n      if (isFunction(formatter)) return formatter(value);\n      if (!isNumber(value) || Number.isNaN(value)) return value;\n      var _String$split = String(value).split(\".\"),\n        _String$split2 = _slicedToArray(_String$split, 2),\n        integer = _String$split2[0],\n        _String$split2$ = _String$split2[1],\n        decimal = _String$split2$ === void 0 ? \"\" : _String$split2$;\n      decimal = decimal.padEnd(precision, \"0\").slice(0, precision > 0 ? precision : 0);\n      integer = integer.replace(/\\B(?=(\\d{3})+(?!\\d))/g, groupSeparator);\n      return [integer, decimal].join(decimal ? decimalSeparator : \"\");\n    });\n    expose({\n      displayValue: displayValue\n    });\n    return function (_ctx, _cache) {\n      return openBlock(), createElementBlock(\"div\", {\n        \"class\": normalizeClass(unref(ns).b())\n      }, [_ctx.$slots.title || _ctx.title ? (openBlock(), createElementBlock(\"div\", {\n        key: 0,\n        \"class\": normalizeClass(unref(ns).e(\"head\"))\n      }, [renderSlot(_ctx.$slots, \"title\", {}, function () {\n        return [createTextVNode(toDisplayString(_ctx.title), 1)];\n      })], 2)) : createCommentVNode(\"v-if\", true), createElementVNode(\"div\", {\n        \"class\": normalizeClass(unref(ns).e(\"content\"))\n      }, [_ctx.$slots.prefix || _ctx.prefix ? (openBlock(), createElementBlock(\"div\", {\n        key: 0,\n        \"class\": normalizeClass(unref(ns).e(\"prefix\"))\n      }, [renderSlot(_ctx.$slots, \"prefix\", {}, function () {\n        return [createElementVNode(\"span\", null, toDisplayString(_ctx.prefix), 1)];\n      })], 2)) : createCommentVNode(\"v-if\", true), createElementVNode(\"span\", {\n        \"class\": normalizeClass(unref(ns).e(\"number\")),\n        style: normalizeStyle(_ctx.valueStyle)\n      }, toDisplayString(unref(displayValue)), 7), _ctx.$slots.suffix || _ctx.suffix ? (openBlock(), createElementBlock(\"div\", {\n        key: 1,\n        \"class\": normalizeClass(unref(ns).e(\"suffix\"))\n      }, [renderSlot(_ctx.$slots, \"suffix\", {}, function () {\n        return [createElementVNode(\"span\", null, toDisplayString(_ctx.suffix), 1)];\n      })], 2)) : createCommentVNode(\"v-if\", true)], 2)], 2);\n    };\n  }\n}));\nvar Statistic = /* @__PURE__ */_export_sfc(_sfc_main, [[\"__file\", \"statistic.vue\"]]);\nexport { Statistic as default };","map":{"version":3,"names":["name","ns","useNamespace","displayValue","computed","value","props","formatter","precision","decimalSeparator","groupSeparator","isFunction","isNumber","Number","isNaN","_String$split","String","split","_String$split2","_slicedToArray","integer","_String$split2$","decimal","padEnd","slice","replace","join","expose","_ctx","_cache"],"sources":["../../../../../../packages/components/statistic/src/statistic.vue"],"sourcesContent":["<template>\n  <div :class=\"ns.b()\">\n    <div v-if=\"$slots.title || title\" :class=\"ns.e('head')\">\n      <slot name=\"title\">\n        {{ title }}\n      </slot>\n    </div>\n    <div :class=\"ns.e('content')\">\n      <div v-if=\"$slots.prefix || prefix\" :class=\"ns.e('prefix')\">\n        <slot name=\"prefix\">\n          <span>{{ prefix }}</span>\n        </slot>\n      </div>\n      <span :class=\"ns.e('number')\" :style=\"valueStyle\">\n        {{ displayValue }}\n      </span>\n      <div v-if=\"$slots.suffix || suffix\" :class=\"ns.e('suffix')\">\n        <slot name=\"suffix\">\n          <span>{{ suffix }}</span>\n        </slot>\n      </div>\n    </div>\n  </div>\n</template>\n<script lang=\"ts\" setup>\nimport { computed } from 'vue'\nimport { useNamespace } from '@element-plus/hooks'\nimport { isFunction, isNumber } from '@element-plus/utils'\nimport { statisticProps } from './statistic'\n\ndefineOptions({\n  name: 'ElStatistic',\n})\n\nconst props = defineProps(statisticProps)\nconst ns = useNamespace('statistic')\n\nconst displayValue = computed(() => {\n  const { value, formatter, precision, decimalSeparator, groupSeparator } =\n    props\n\n  if (isFunction(formatter)) return formatter(value)\n\n  // https://github.com/element-plus/element-plus/issues/17784\n  if (!isNumber(value) || Number.isNaN(value)) return value\n\n  let [integer, decimal = ''] = String(value).split('.')\n  decimal = decimal\n    .padEnd(precision, '0')\n    .slice(0, precision > 0 ? precision : 0)\n  integer = integer.replace(/\\B(?=(\\d{3})+(?!\\d))/g, groupSeparator)\n  return [integer, decimal].join(decimal ? decimalSeparator : '')\n})\n\ndefineExpose({\n  /**\n   * @description current display value\n   */\n  displayValue,\n})\n</script>\n"],"mappings":";;;;;;;;;;;;;;iCA8Bc;EACZA,IAAM;AACR;;;;;;IAGM,IAAAC,EAAA,GAAKC,YAAA,CAAa,WAAW;IAE7B,IAAAC,YAAA,GAAeC,QAAA,CAAS,YAAM;MAClC,IAAQC,KAAO,GACbC,KAAA,CADMD,KAAO;QAAAE,SAAA,GACbD,KAAA,CADaC,SAAA;QAAWC,SAAW,GACnCF,KAAA,CADwBE,SAAW;QAAAC,gBAAA,GACnCH,KAAA,CADmCG,gBAAA;QAAkBC,cAAA,GACrDJ,KAAA,CADqDI,cAAA;MAGvD,IAAIC,UAAW,CAAAJ,SAAS,CAAG,EAGvB,OAAAA,SAAe,CAAAF,KAAK;MAEpB,KAACO,QAAA,CAASP,KAAU,KAAAQ,MAAM,CAAOC,KAAA,CAAAT,KAAK,CAAE,EAClC,OAAAA,KAAA;MAGA,IAAAU,aAAA,GAAgBC,MAAA,CAAAX,KAAA,EAAAY,KAAA,IAAuC;QAAAC,cAAA,GAAAC,cAAA,CAAAJ,aAAA;QAAvDK,OAAA,GAAAF,cAAA;QAAAG,eAAA,GAAAH,cAAA;QAAAI,OAAgB,GAAAD,eAAA,mBAAAA,eAAA;MAC1BC,OAAO,GAAUA,OAAA,CAAAC,MAAO,CAAAf,SAAO,OAAUgB,KAAA,IAAAhB,SAAA,GAAqB,IAAAA,SAAA;MAC/DY,OAAA,GAAAA,OAAA,CAAAK,OAAA,0BAAAf,cAAA;MAEY,QAAAU,OAAA,EAAAE,OAAA,EAAAI,IAAA,CAAAJ,OAAA,GAAAb,gBAAA;IAAA;IAAAkB,MAAA;MAAAxB,YAAA,EAAAA;IAAA,CAIX;IACF,OAAC,UAAAyB,IAAA,EAAAC,MAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}