{"ast":null,"code":"import _objectSpread from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { defineComponent, computed, openBlock, createElementBlock, normalizeClass, unref, normalizeStyle, createElementVNode, renderSlot, createBlock, withModifiers, withCtx, createVNode, createCommentVNode, Transition } from 'vue';\nimport { ElIcon } from '../../icon/index.mjs';\nimport { Close } from '@element-plus/icons-vue';\nimport { tagProps, tagEmits } from './tag.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useFormSize } from '../../form/src/hooks/use-form-common-props.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nvar __default__ = defineComponent({\n  name: \"ElTag\"\n});\nvar _sfc_main = /* @__PURE__ */defineComponent(_objectSpread(_objectSpread({}, __default__), {}, {\n  props: tagProps,\n  emits: tagEmits,\n  setup: function setup(__props, _ref) {\n    var emit = _ref.emit;\n    var props = __props;\n    var tagSize = useFormSize();\n    var ns = useNamespace(\"tag\");\n    var containerKls = computed(function () {\n      var type = props.type,\n        hit = props.hit,\n        effect = props.effect,\n        closable = props.closable,\n        round = props.round;\n      return [ns.b(), ns.is(\"closable\", closable), ns.m(type || \"primary\"), ns.m(tagSize.value), ns.m(effect), ns.is(\"hit\", hit), ns.is(\"round\", round)];\n    });\n    var handleClose = function handleClose(event) {\n      emit(\"close\", event);\n    };\n    var handleClick = function handleClick(event) {\n      emit(\"click\", event);\n    };\n    var handleVNodeMounted = function handleVNodeMounted(vnode) {\n      var _a, _b, _c;\n      if ((_c = (_b = (_a = vnode == null ? void 0 : vnode.component) == null ? void 0 : _a.subTree) == null ? void 0 : _b.component) == null ? void 0 : _c.bum) {\n        vnode.component.subTree.component.bum = null;\n      }\n    };\n    return function (_ctx, _cache) {\n      return _ctx.disableTransitions ? (openBlock(), createElementBlock(\"span\", {\n        key: 0,\n        \"class\": normalizeClass(unref(containerKls)),\n        style: normalizeStyle({\n          backgroundColor: _ctx.color\n        }),\n        onClick: handleClick\n      }, [createElementVNode(\"span\", {\n        \"class\": normalizeClass(unref(ns).e(\"content\"))\n      }, [renderSlot(_ctx.$slots, \"default\")], 2), _ctx.closable ? (openBlock(), createBlock(unref(ElIcon), {\n        key: 0,\n        \"class\": normalizeClass(unref(ns).e(\"close\")),\n        onClick: withModifiers(handleClose, [\"stop\"])\n      }, {\n        \"default\": withCtx(function () {\n          return [createVNode(unref(Close))];\n        }),\n        _: 1\n      }, 8, [\"class\", \"onClick\"])) : createCommentVNode(\"v-if\", true)], 6)) : (openBlock(), createBlock(Transition, {\n        key: 1,\n        name: \"\".concat(unref(ns).namespace.value, \"-zoom-in-center\"),\n        appear: \"\",\n        onVnodeMounted: handleVNodeMounted\n      }, {\n        \"default\": withCtx(function () {\n          return [createElementVNode(\"span\", {\n            \"class\": normalizeClass(unref(containerKls)),\n            style: normalizeStyle({\n              backgroundColor: _ctx.color\n            }),\n            onClick: handleClick\n          }, [createElementVNode(\"span\", {\n            \"class\": normalizeClass(unref(ns).e(\"content\"))\n          }, [renderSlot(_ctx.$slots, \"default\")], 2), _ctx.closable ? (openBlock(), createBlock(unref(ElIcon), {\n            key: 0,\n            \"class\": normalizeClass(unref(ns).e(\"close\")),\n            onClick: withModifiers(handleClose, [\"stop\"])\n          }, {\n            \"default\": withCtx(function () {\n              return [createVNode(unref(Close))];\n            }),\n            _: 1\n          }, 8, [\"class\", \"onClick\"])) : createCommentVNode(\"v-if\", true)], 6)];\n        }),\n        _: 3\n      }, 8, [\"name\"]));\n    };\n  }\n}));\nvar Tag = /* @__PURE__ */_export_sfc(_sfc_main, [[\"__file\", \"tag.vue\"]]);\nexport { Tag as default };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}