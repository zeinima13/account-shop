{"ast":null,"code":"import \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport { onMounted, onBeforeUnmount } from 'vue';\nimport { isClient } from '@vueuse/core';\nimport { EVENT_CODE } from '../../constants/aria.mjs';\nvar registeredEscapeHandlers = [];\nvar cachedHandler = function cachedHandler(event) {\n  if (event.code === EVENT_CODE.esc) {\n    registeredEscapeHandlers.forEach(function (registeredHandler) {\n      return registeredHandler(event);\n    });\n  }\n};\nvar useEscapeKeydown = function useEscapeKeydown(handler) {\n  onMounted(function () {\n    if (registeredEscapeHandlers.length === 0) {\n      document.addEventListener(\"keydown\", cachedHandler);\n    }\n    if (isClient) registeredEscapeHandlers.push(handler);\n  });\n  onBeforeUnmount(function () {\n    registeredEscapeHandlers = registeredEscapeHandlers.filter(function (registeredHandler) {\n      return registeredHandler !== handler;\n    });\n    if (registeredEscapeHandlers.length === 0) {\n      if (isClient) document.removeEventListener(\"keydown\", cachedHandler);\n    }\n  });\n};\nexport { useEscapeKeydown };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}