{"ast":null,"code":"import \"core-js/modules/es.array.find-index.js\";\nimport { shallowReactive } from 'vue';\nvar instances = shallowReactive([]);\nvar getInstance = function getInstance(id) {\n  var idx = instances.findIndex(function (instance) {\n    return instance.id === id;\n  });\n  var current = instances[idx];\n  var prev;\n  if (idx > 0) {\n    prev = instances[idx - 1];\n  }\n  return {\n    current: current,\n    prev: prev\n  };\n};\nvar getLastOffset = function getLastOffset(id) {\n  var _getInstance = getInstance(id),\n    prev = _getInstance.prev;\n  if (!prev) return 0;\n  return prev.vm.exposed.bottom.value;\n};\nvar getOffsetOrSpace = function getOffsetOrSpace(id, offset) {\n  var idx = instances.findIndex(function (instance) {\n    return instance.id === id;\n  });\n  return idx > 0 ? 16 : offset;\n};\nexport { getInstance, getLastOffset, getOffsetOrSpace, instances };","map":{"version":3,"names":["instances","shallowReactive","getInstance","id","idx","findIndex","instance","current","prev","getLastOffset","_getInstance","vm","exposed","bottom","value","getOffsetOrSpace","offset"],"sources":["../../../../../../packages/components/message/src/instance.ts"],"sourcesContent":["import { shallowReactive } from 'vue'\nimport type { ComponentInternalInstance, VNode } from 'vue'\nimport type { Mutable } from '@element-plus/utils'\nimport type { MessageHandler, MessageProps } from './message'\n\nexport type MessageContext = {\n  id: string\n  vnode: VNode\n  handler: MessageHandler\n  vm: ComponentInternalInstance\n  props: Mutable<MessageProps>\n}\n\nexport const instances: MessageContext[] = shallowReactive([])\n\nexport const getInstance = (id: string) => {\n  const idx = instances.findIndex((instance) => instance.id === id)\n  const current = instances[idx]\n  let prev: MessageContext | undefined\n  if (idx > 0) {\n    prev = instances[idx - 1]\n  }\n  return { current, prev }\n}\n\nexport const getLastOffset = (id: string): number => {\n  const { prev } = getInstance(id)\n  if (!prev) return 0\n  return prev.vm.exposed!.bottom.value\n}\n\nexport const getOffsetOrSpace = (id: string, offset: number) => {\n  const idx = instances.findIndex((instance) => instance.id === id)\n  return idx > 0 ? 16 : offset\n}\n"],"mappings":";;AACY,IAACA,SAAS,GAAGC,eAAe,CAAC,EAAE;AAC/B,IAACC,WAAW,GAAG,SAAdA,WAAWA,CAAIC,EAAE,EAAK;EACjC,IAAMC,GAAG,GAAGJ,SAAS,CAACK,SAAS,CAAC,UAACC,QAAQ;IAAA,OAAKA,QAAQ,CAACH,EAAE,KAAKA,EAAE;EAAA,EAAC;EACjE,IAAMI,OAAO,GAAGP,SAAS,CAACI,GAAG,CAAC;EAC9B,IAAII,IAAI;EACR,IAAIJ,GAAG,GAAG,CAAC,EAAE;IACXI,IAAI,GAAGR,SAAS,CAACI,GAAG,GAAG,CAAC,CAAC;EAC7B;EACE,OAAO;IAAEG,OAAO,EAAPA,OAAO;IAAEC,IAAI,EAAJA;EAAI,CAAE;AAC1B;AACY,IAACC,aAAa,GAAG,SAAhBA,aAAaA,CAAIN,EAAE,EAAK;EACnC,IAAAO,YAAA,GAAiBR,WAAW,CAACC,EAAE,CAAC;IAAxBK,IAAI,GAAAE,YAAA,CAAJF,IAAI;EACZ,IAAI,CAACA,IAAI,EACP,OAAO,CAAC;EACV,OAAOA,IAAI,CAACG,EAAE,CAACC,OAAO,CAACC,MAAM,CAACC,KAAK;AACrC;AACY,IAACC,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAIZ,EAAE,EAAEa,MAAM,EAAK;EAC9C,IAAMZ,GAAG,GAAGJ,SAAS,CAACK,SAAS,CAAC,UAACC,QAAQ;IAAA,OAAKA,QAAQ,CAACH,EAAE,KAAKA,EAAE;EAAA,EAAC;EACjE,OAAOC,GAAG,GAAG,CAAC,GAAG,EAAE,GAAGY,MAAM;AAC9B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}