{"ast":null,"code":"import _toConsumableArray from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _objectSpread from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport { isClient, unrefElement } from '@vueuse/core';\nvar buildPopperOptions = function buildPopperOptions(props) {\n  var modifiers = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var placement = props.placement,\n    strategy = props.strategy,\n    popperOptions = props.popperOptions;\n  var options = _objectSpread(_objectSpread({\n    placement: placement,\n    strategy: strategy\n  }, popperOptions), {}, {\n    modifiers: [].concat(_toConsumableArray(genModifiers(props)), _toConsumableArray(modifiers))\n  });\n  deriveExtraModifiers(options, popperOptions == null ? void 0 : popperOptions.modifiers);\n  return options;\n};\nvar unwrapMeasurableEl = function unwrapMeasurableEl($el) {\n  if (!isClient) return;\n  return unrefElement($el);\n};\nfunction genModifiers(options) {\n  var offset = options.offset,\n    gpuAcceleration = options.gpuAcceleration,\n    fallbackPlacements = options.fallbackPlacements;\n  return [{\n    name: \"offset\",\n    options: {\n      offset: [0, offset != null ? offset : 12]\n    }\n  }, {\n    name: \"preventOverflow\",\n    options: {\n      padding: {\n        top: 2,\n        bottom: 2,\n        left: 5,\n        right: 5\n      }\n    }\n  }, {\n    name: \"flip\",\n    options: {\n      padding: 5,\n      fallbackPlacements: fallbackPlacements\n    }\n  }, {\n    name: \"computeStyles\",\n    options: {\n      gpuAcceleration: gpuAcceleration\n    }\n  }];\n}\nfunction deriveExtraModifiers(options, modifiers) {\n  if (modifiers) {\n    options.modifiers = [].concat(_toConsumableArray(options.modifiers), _toConsumableArray(modifiers != null ? modifiers : []));\n  }\n}\nexport { buildPopperOptions, unwrapMeasurableEl };","map":{"version":3,"names":["buildPopperOptions","props","modifiers","arguments","length","undefined","placement","strategy","popperOptions","options","_objectSpread","concat","_toConsumableArray","genModifiers","deriveExtraModifiers","unwrapMeasurableEl","$el","isClient","unrefElement","offset","gpuAcceleration","fallbackPlacements","name","padding","top","bottom","left","right"],"sources":["../../../../../../packages/components/popper/src/utils.ts"],"sourcesContent":["import { unrefElement } from '@vueuse/core'\nimport { isClient } from '@element-plus/utils'\n\nimport type { ComponentPublicInstance } from 'vue'\nimport type { MaybeRef } from '@vueuse/core'\nimport type { Modifier } from '@popperjs/core'\nimport type { Measurable } from './constants'\nimport type { PopperCoreConfigProps } from './content'\n\nexport const buildPopperOptions = (\n  props: PopperCoreConfigProps,\n  modifiers: Modifier<any, any>[] = []\n) => {\n  const { placement, strategy, popperOptions } = props\n  const options = {\n    placement,\n    strategy,\n    ...popperOptions,\n    modifiers: [...genModifiers(props), ...modifiers],\n  }\n\n  deriveExtraModifiers(options, popperOptions?.modifiers)\n  return options\n}\n\nexport const unwrapMeasurableEl = (\n  $el: MaybeRef<Measurable | undefined | ComponentPublicInstance>\n) => {\n  if (!isClient) return\n  return unrefElement($el as HTMLElement)\n}\n\nfunction genModifiers(options: PopperCoreConfigProps) {\n  const { offset, gpuAcceleration, fallbackPlacements } = options\n  return [\n    {\n      name: 'offset',\n      options: {\n        offset: [0, offset ?? 12],\n      },\n    },\n    {\n      name: 'preventOverflow',\n      options: {\n        padding: {\n          top: 2,\n          bottom: 2,\n          left: 5,\n          right: 5,\n        },\n      },\n    },\n    {\n      name: 'flip',\n      options: {\n        padding: 5,\n        fallbackPlacements,\n      },\n    },\n    {\n      name: 'computeStyles',\n      options: {\n        gpuAcceleration,\n      },\n    },\n  ]\n}\n\nfunction deriveExtraModifiers(\n  options: any,\n  modifiers: PopperCoreConfigProps['popperOptions']['modifiers']\n) {\n  if (modifiers) {\n    options.modifiers = [...options.modifiers, ...(modifiers ?? [])]\n  }\n}\n"],"mappings":";;;;AAEY,IAACA,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAIC,KAAK,EAAqB;EAAA,IAAnBC,SAAS,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAE;EACtD,IAAQG,SAAS,GAA8BL,KAAK,CAA5CK,SAAS;IAAEC,QAAQ,GAAoBN,KAAK,CAAjCM,QAAQ;IAAEC,aAAa,GAAKP,KAAK,CAAvBO,aAAa;EAC1C,IAAMC,OAAO,GAAAC,aAAA,CAAAA,aAAA;IACXJ,SAAS,EAATA,SAAS;IACTC,QAAQ,EAARA;EAAQ,GACLC,aAAa;IAChBN,SAAS,KAAAS,MAAA,CAAAC,kBAAA,CAAMC,YAAY,CAACZ,KAAK,CAAC,GAAAW,kBAAA,CAAKV,SAAS;EAAC,EAClD;EACDY,oBAAoB,CAACL,OAAO,EAAED,aAAa,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,aAAa,CAACN,SAAS,CAAC;EACvF,OAAOO,OAAO;AAChB;AACY,IAACM,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAIC,GAAG,EAAK;EACzC,IAAI,CAACC,QAAQ,EACX;EACF,OAAOC,YAAY,CAACF,GAAG,CAAC;AAC1B;AACA,SAASH,YAAYA,CAACJ,OAAO,EAAE;EAC7B,IAAQU,MAAM,GAA0CV,OAAO,CAAvDU,MAAM;IAAEC,eAAe,GAAyBX,OAAO,CAA/CW,eAAe;IAAEC,kBAAkB,GAAKZ,OAAO,CAA9BY,kBAAkB;EACnD,OAAO,CACL;IACEC,IAAI,EAAE,QAAQ;IACdb,OAAO,EAAE;MACPU,MAAM,EAAE,CAAC,CAAC,EAAEA,MAAM,IAAI,IAAI,GAAGA,MAAM,GAAG,EAAE;IAChD;EACA,CAAK,EACD;IACEG,IAAI,EAAE,iBAAiB;IACvBb,OAAO,EAAE;MACPc,OAAO,EAAE;QACPC,GAAG,EAAE,CAAC;QACNC,MAAM,EAAE,CAAC;QACTC,IAAI,EAAE,CAAC;QACPC,KAAK,EAAE;MACjB;IACA;EACA,CAAK,EACD;IACEL,IAAI,EAAE,MAAM;IACZb,OAAO,EAAE;MACPc,OAAO,EAAE,CAAC;MACVF,kBAAkB,EAAlBA;IACR;EACA,CAAK,EACD;IACEC,IAAI,EAAE,eAAe;IACrBb,OAAO,EAAE;MACPW,eAAe,EAAfA;IACR;EACA,CAAK,CACF;AACH;AACA,SAASN,oBAAoBA,CAACL,OAAO,EAAEP,SAAS,EAAE;EAChD,IAAIA,SAAS,EAAE;IACbO,OAAO,CAACP,SAAS,MAAAS,MAAA,CAAAC,kBAAA,CAAOH,OAAO,CAACP,SAAS,GAAAU,kBAAA,CAAKV,SAAS,IAAI,IAAI,GAAGA,SAAS,GAAG,EAAE,EAAC;EACrF;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}