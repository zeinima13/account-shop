{"ast":null,"code":"import _objectSpread from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.every.js\";\nimport \"core-js/modules/es.array.find-index.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.every.js\";\nimport { defineComponent, ref, computed, watch, openBlock, createElementBlock, normalizeClass, unref, renderSlot, createCommentVNode, withDirectives, createVNode, withCtx, Fragment, renderList, withModifiers, createElementVNode, toDisplayString, vShow, createTextVNode, nextTick } from 'vue';\nimport { ElScrollbar } from '../../scrollbar/index.mjs';\nimport { mentionDropdownProps, mentionDropdownEmits } from './mention-dropdown.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { useLocale } from '../../../hooks/use-locale/index.mjs';\nimport { scrollIntoView } from '../../../utils/dom/scroll.mjs';\nvar __default__ = defineComponent({\n  name: \"ElMentionDropdown\"\n});\nvar _sfc_main = /* @__PURE__ */defineComponent(_objectSpread(_objectSpread({}, __default__), {}, {\n  props: mentionDropdownProps,\n  emits: mentionDropdownEmits,\n  setup: function setup(__props, _ref) {\n    var expose = _ref.expose,\n      emit = _ref.emit;\n    var props = __props;\n    var ns = useNamespace(\"mention\");\n    var _useLocale = useLocale(),\n      t = _useLocale.t;\n    var hoveringIndex = ref(-1);\n    var scrollbarRef = ref();\n    var optionRefs = ref();\n    var dropdownRef = ref();\n    var optionkls = function optionkls(item, index) {\n      return [ns.be(\"dropdown\", \"item\"), ns.is(\"hovering\", hoveringIndex.value === index), ns.is(\"disabled\", item.disabled || props.disabled)];\n    };\n    var handleSelect = function handleSelect(item) {\n      if (item.disabled || props.disabled) return;\n      emit(\"select\", item);\n    };\n    var handleMouseEnter = function handleMouseEnter(index) {\n      hoveringIndex.value = index;\n    };\n    var filteredAllDisabled = computed(function () {\n      return props.disabled || props.options.every(function (item) {\n        return item.disabled;\n      });\n    });\n    var hoverOption = computed(function () {\n      return props.options[hoveringIndex.value];\n    });\n    var selectHoverOption = function selectHoverOption() {\n      if (!hoverOption.value) return;\n      emit(\"select\", hoverOption.value);\n    };\n    var _navigateOptions = function navigateOptions(direction) {\n      var options = props.options;\n      if (options.length === 0 || filteredAllDisabled.value) return;\n      if (direction === \"next\") {\n        hoveringIndex.value++;\n        if (hoveringIndex.value === options.length) {\n          hoveringIndex.value = 0;\n        }\n      } else if (direction === \"prev\") {\n        hoveringIndex.value--;\n        if (hoveringIndex.value < 0) {\n          hoveringIndex.value = options.length - 1;\n        }\n      }\n      var option = options[hoveringIndex.value];\n      if (option.disabled) {\n        _navigateOptions(direction);\n        return;\n      }\n      nextTick(function () {\n        return scrollToOption(option);\n      });\n    };\n    var scrollToOption = function scrollToOption(option) {\n      var _a, _b, _c, _d;\n      var options = props.options;\n      var index = options.findIndex(function (item) {\n        return item.value === option.value;\n      });\n      var target = (_a = optionRefs.value) == null ? void 0 : _a[index];\n      if (target) {\n        var menu = (_c = (_b = dropdownRef.value) == null ? void 0 : _b.querySelector) == null ? void 0 : _c.call(_b, \".\".concat(ns.be(\"dropdown\", \"wrap\")));\n        if (menu) {\n          scrollIntoView(menu, target);\n        }\n      }\n      (_d = scrollbarRef.value) == null ? void 0 : _d.handleScroll();\n    };\n    var resetHoveringIndex = function resetHoveringIndex() {\n      if (filteredAllDisabled.value || props.options.length === 0) {\n        hoveringIndex.value = -1;\n      } else {\n        hoveringIndex.value = 0;\n      }\n    };\n    watch(function () {\n      return props.options;\n    }, resetHoveringIndex, {\n      immediate: true\n    });\n    expose({\n      hoveringIndex: hoveringIndex,\n      navigateOptions: _navigateOptions,\n      selectHoverOption: selectHoverOption,\n      hoverOption: hoverOption\n    });\n    return function (_ctx, _cache) {\n      return openBlock(), createElementBlock(\"div\", {\n        ref_key: \"dropdownRef\",\n        ref: dropdownRef,\n        \"class\": normalizeClass(unref(ns).b(\"dropdown\"))\n      }, [_ctx.$slots.header ? (openBlock(), createElementBlock(\"div\", {\n        key: 0,\n        \"class\": normalizeClass(unref(ns).be(\"dropdown\", \"header\"))\n      }, [renderSlot(_ctx.$slots, \"header\")], 2)) : createCommentVNode(\"v-if\", true), withDirectives(createVNode(unref(ElScrollbar), {\n        id: _ctx.contentId,\n        ref_key: \"scrollbarRef\",\n        ref: scrollbarRef,\n        tag: \"ul\",\n        \"wrap-class\": unref(ns).be(\"dropdown\", \"wrap\"),\n        \"view-class\": unref(ns).be(\"dropdown\", \"list\"),\n        role: \"listbox\",\n        \"aria-label\": _ctx.ariaLabel,\n        \"aria-orientation\": \"vertical\"\n      }, {\n        \"default\": withCtx(function () {\n          return [(openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.options, function (item, index) {\n            return openBlock(), createElementBlock(\"li\", {\n              id: \"\".concat(_ctx.contentId, \"-\").concat(index),\n              ref_for: true,\n              ref_key: \"optionRefs\",\n              ref: optionRefs,\n              key: index,\n              \"class\": normalizeClass(optionkls(item, index)),\n              role: \"option\",\n              \"aria-disabled\": item.disabled || _ctx.disabled || void 0,\n              \"aria-selected\": hoveringIndex.value === index,\n              onMousemove: function onMousemove($event) {\n                return handleMouseEnter(index);\n              },\n              onClick: withModifiers(function ($event) {\n                return handleSelect(item);\n              }, [\"stop\"])\n            }, [renderSlot(_ctx.$slots, \"label\", {\n              item: item,\n              index: index\n            }, function () {\n              var _a;\n              return [createElementVNode(\"span\", null, toDisplayString((_a = item.label) != null ? _a : item.value), 1)];\n            })], 42, [\"id\", \"aria-disabled\", \"aria-selected\", \"onMousemove\", \"onClick\"]);\n          }), 128))];\n        }),\n        _: 3\n      }, 8, [\"id\", \"wrap-class\", \"view-class\", \"aria-label\"]), [[vShow, _ctx.options.length > 0 && !_ctx.loading]]), _ctx.loading ? (openBlock(), createElementBlock(\"div\", {\n        key: 1,\n        \"class\": normalizeClass(unref(ns).be(\"dropdown\", \"loading\"))\n      }, [renderSlot(_ctx.$slots, \"loading\", {}, function () {\n        return [createTextVNode(toDisplayString(unref(t)(\"el.mention.loading\")), 1)];\n      })], 2)) : createCommentVNode(\"v-if\", true), _ctx.$slots.footer ? (openBlock(), createElementBlock(\"div\", {\n        key: 2,\n        \"class\": normalizeClass(unref(ns).be(\"dropdown\", \"footer\"))\n      }, [renderSlot(_ctx.$slots, \"footer\")], 2)) : createCommentVNode(\"v-if\", true)], 2);\n    };\n  }\n}));\nvar ElMentionDropdown = /* @__PURE__ */_export_sfc(_sfc_main, [[\"__file\", \"mention-dropdown.vue\"]]);\nexport { ElMentionDropdown as default };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}