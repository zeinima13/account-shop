{"ast":null,"code":"import _toConsumableArray from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.array.index-of.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport { ref, computed } from 'vue';\nimport { castArray } from 'lodash-unified';\nimport { debugWarn } from '../../../utils/error.mjs';\nvar SCOPE = \"ElForm\";\nfunction useFormLabelWidth() {\n  var potentialLabelWidthArr = ref([]);\n  var autoLabelWidth = computed(function () {\n    if (!potentialLabelWidthArr.value.length) return \"0\";\n    var max = Math.max.apply(Math, _toConsumableArray(potentialLabelWidthArr.value));\n    return max ? \"\".concat(max, \"px\") : \"\";\n  });\n  function getLabelWidthIndex(width) {\n    var index = potentialLabelWidthArr.value.indexOf(width);\n    if (index === -1 && autoLabelWidth.value === \"0\") {\n      debugWarn(SCOPE, \"unexpected width \".concat(width));\n    }\n    return index;\n  }\n  function registerLabelWidth(val, oldVal) {\n    if (val && oldVal) {\n      var index = getLabelWidthIndex(oldVal);\n      potentialLabelWidthArr.value.splice(index, 1, val);\n    } else if (val) {\n      potentialLabelWidthArr.value.push(val);\n    }\n  }\n  function deregisterLabelWidth(val) {\n    var index = getLabelWidthIndex(val);\n    if (index > -1) {\n      potentialLabelWidthArr.value.splice(index, 1);\n    }\n  }\n  return {\n    autoLabelWidth: autoLabelWidth,\n    registerLabelWidth: registerLabelWidth,\n    deregisterLabelWidth: deregisterLabelWidth\n  };\n}\nvar filterFields = function filterFields(fields, props) {\n  var normalized = castArray(props);\n  return normalized.length > 0 ? fields.filter(function (field) {\n    return field.prop && normalized.includes(field.prop);\n  }) : fields;\n};\nexport { filterFields, useFormLabelWidth };","map":{"version":3,"names":["SCOPE","useFormLabelWidth","potentialLabelWidthArr","ref","autoLabelWidth","computed","value","length","max","Math","apply","_toConsumableArray","concat","getLabelWidthIndex","width","index","indexOf","debugWarn","registerLabelWidth","val","oldVal","splice","push","deregisterLabelWidth","filterFields","fields","props","normalized","castArray","filter","field","prop","includes"],"sources":["../../../../../../packages/components/form/src/utils.ts"],"sourcesContent":["import { computed, ref } from 'vue'\nimport { debugWarn, ensureArray } from '@element-plus/utils'\nimport type { Arrayable } from '@element-plus/utils'\nimport type { FormItemContext } from './types'\nimport type { FormItemProp } from './form-item'\n\nconst SCOPE = 'ElForm'\n\nexport function useFormLabelWidth() {\n  const potentialLabelWidthArr = ref<number[]>([])\n\n  const autoLabelWidth = computed(() => {\n    if (!potentialLabelWidthArr.value.length) return '0'\n    const max = Math.max(...potentialLabelWidthArr.value)\n    return max ? `${max}px` : ''\n  })\n\n  function getLabelWidthIndex(width: number) {\n    const index = potentialLabelWidthArr.value.indexOf(width)\n    if (index === -1 && autoLabelWidth.value === '0') {\n      debugWarn(SCOPE, `unexpected width ${width}`)\n    }\n    return index\n  }\n\n  function registerLabelWidth(val: number, oldVal: number) {\n    if (val && oldVal) {\n      const index = getLabelWidthIndex(oldVal)\n      potentialLabelWidthArr.value.splice(index, 1, val)\n    } else if (val) {\n      potentialLabelWidthArr.value.push(val)\n    }\n  }\n\n  function deregisterLabelWidth(val: number) {\n    const index = getLabelWidthIndex(val)\n    if (index > -1) {\n      potentialLabelWidthArr.value.splice(index, 1)\n    }\n  }\n\n  return {\n    autoLabelWidth,\n    registerLabelWidth,\n    deregisterLabelWidth,\n  }\n}\n\nexport const filterFields = (\n  fields: FormItemContext[],\n  props: Arrayable<FormItemProp>\n) => {\n  const normalized = ensureArray(props)\n  return normalized.length > 0\n    ? fields.filter((field) => field.prop && normalized.includes(field.prop))\n    : fields\n}\n"],"mappings":";;;;;;;;;;;;;AAEA,IAAMA,KAAK,GAAG,QAAQ;AACf,SAASC,iBAAiBA,CAAA,EAAG;EAClC,IAAMC,sBAAsB,GAAGC,GAAG,CAAC,EAAE,CAAC;EACtC,IAAMC,cAAc,GAAGC,QAAQ,CAAC,YAAM;IACpC,IAAI,CAACH,sBAAsB,CAACI,KAAK,CAACC,MAAM,EACtC,OAAO,GAAG;IACZ,IAAMC,GAAG,GAAGC,IAAI,CAACD,GAAG,CAAAE,KAAA,CAARD,IAAI,EAAAE,kBAAA,CAAQT,sBAAsB,CAACI,KAAK,EAAC;IACrD,OAAOE,GAAG,MAAAI,MAAA,CAAMJ,GAAG,UAAO,EAAE;EAChC,CAAG,CAAC;EACF,SAASK,kBAAkBA,CAACC,KAAK,EAAE;IACjC,IAAMC,KAAK,GAAGb,sBAAsB,CAACI,KAAK,CAACU,OAAO,CAACF,KAAK,CAAC;IACzD,IAAIC,KAAK,KAAK,CAAC,CAAC,IAAIX,cAAc,CAACE,KAAK,KAAK,GAAG,EAAE;MAChDW,SAAS,CAACjB,KAAK,sBAAAY,MAAA,CAAsBE,KAAK,CAAE,CAAC;IACnD;IACI,OAAOC,KAAK;EAChB;EACE,SAASG,kBAAkBA,CAACC,GAAG,EAAEC,MAAM,EAAE;IACvC,IAAID,GAAG,IAAIC,MAAM,EAAE;MACjB,IAAML,KAAK,GAAGF,kBAAkB,CAACO,MAAM,CAAC;MACxClB,sBAAsB,CAACI,KAAK,CAACe,MAAM,CAACN,KAAK,EAAE,CAAC,EAAEI,GAAG,CAAC;IACxD,CAAK,MAAM,IAAIA,GAAG,EAAE;MACdjB,sBAAsB,CAACI,KAAK,CAACgB,IAAI,CAACH,GAAG,CAAC;IAC5C;EACA;EACE,SAASI,oBAAoBA,CAACJ,GAAG,EAAE;IACjC,IAAMJ,KAAK,GAAGF,kBAAkB,CAACM,GAAG,CAAC;IACrC,IAAIJ,KAAK,GAAG,CAAC,CAAC,EAAE;MACdb,sBAAsB,CAACI,KAAK,CAACe,MAAM,CAACN,KAAK,EAAE,CAAC,CAAC;IACnD;EACA;EACE,OAAO;IACLX,cAAc,EAAdA,cAAc;IACdc,kBAAkB,EAAlBA,kBAAkB;IAClBK,oBAAoB,EAApBA;EACJ,CAAG;AACH;AACY,IAACC,YAAY,GAAG,SAAfA,YAAYA,CAAIC,MAAM,EAAEC,KAAK,EAAK;EAC7C,IAAMC,UAAU,GAAGC,SAAW,CAACF,KAAK,CAAC;EACrC,OAAOC,UAAU,CAACpB,MAAM,GAAG,CAAC,GAAGkB,MAAM,CAACI,MAAM,CAAC,UAACC,KAAK;IAAA,OAAKA,KAAK,CAACC,IAAI,IAAIJ,UAAU,CAACK,QAAQ,CAACF,KAAK,CAACC,IAAI,CAAC;EAAA,EAAC,GAAGN,MAAM;AACjH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}