{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _objectSpread from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.some.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/es.string.starts-with.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport \"core-js/modules/esnext.iterator.some.js\";\nimport { defineComponent, useAttrs, inject, ref, computed, watch, nextTick, unref, onBeforeUnmount, provide, openBlock, createBlock, mergeProps, withCtx, normalizeClass, normalizeStyle, withModifiers, resolveDynamicComponent, createCommentVNode, renderSlot, createElementVNode, toDisplayString } from 'vue';\nimport { isEqual } from 'lodash-unified';\nimport { onClickOutside, unrefElement } from '@vueuse/core';\nimport { ElInput } from '../../../input/index.mjs';\nimport { ElIcon } from '../../../icon/index.mjs';\nimport { ElTooltip } from '../../../tooltip/index.mjs';\nimport { Clock, Calendar } from '@element-plus/icons-vue';\nimport { valueEquals, parseDate, dayOrDaysToDate, formatter } from '../utils.mjs';\nimport { timePickerDefaultProps } from './props.mjs';\nimport PickerRangeTrigger from './picker-range-trigger.mjs';\nimport _export_sfc from '../../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useEmptyValues } from '../../../../hooks/use-empty-values/index.mjs';\nimport { useLocale } from '../../../../hooks/use-locale/index.mjs';\nimport { useNamespace } from '../../../../hooks/use-namespace/index.mjs';\nimport { useFormItem } from '../../../form/src/hooks/use-form-item.mjs';\nimport { useFocusController } from '../../../../hooks/use-focus-controller/index.mjs';\nimport { debugWarn } from '../../../../utils/error.mjs';\nimport { isArray, NOOP } from '@vue/shared';\nimport { useFormSize } from '../../../form/src/hooks/use-form-common-props.mjs';\nimport { EVENT_CODE } from '../../../../constants/aria.mjs';\nvar __default__ = defineComponent({\n  name: \"Picker\"\n});\nvar _sfc_main = /* @__PURE__ */defineComponent(_objectSpread(_objectSpread({}, __default__), {}, {\n  props: timePickerDefaultProps,\n  emits: [\"update:modelValue\", \"change\", \"focus\", \"blur\", \"clear\", \"calendar-change\", \"panel-change\", \"visible-change\", \"keydown\"],\n  setup: function setup(__props, _ref) {\n    var expose = _ref.expose,\n      emit = _ref.emit;\n    var props = __props;\n    var attrs = useAttrs();\n    var _useLocale = useLocale(),\n      lang = _useLocale.lang;\n    var nsDate = useNamespace(\"date\");\n    var nsInput = useNamespace(\"input\");\n    var nsRange = useNamespace(\"range\");\n    var _useFormItem = useFormItem(),\n      form = _useFormItem.form,\n      formItem = _useFormItem.formItem;\n    var elPopperOptions = inject(\"ElPopperOptions\", {});\n    var _useEmptyValues = useEmptyValues(props, null),\n      valueOnClear = _useEmptyValues.valueOnClear;\n    var refPopper = ref();\n    var inputRef = ref();\n    var pickerVisible = ref(false);\n    var pickerActualVisible = ref(false);\n    var valueOnOpen = ref(null);\n    var hasJustTabExitedInput = false;\n    var _useFocusController = useFocusController(inputRef, {\n        beforeFocus: function beforeFocus() {\n          return props.readonly || pickerDisabled.value;\n        },\n        afterFocus: function afterFocus() {\n          pickerVisible.value = true;\n        },\n        beforeBlur: function beforeBlur(event) {\n          var _a;\n          return !hasJustTabExitedInput && ((_a = refPopper.value) == null ? void 0 : _a.isFocusInsideContent(event));\n        },\n        afterBlur: function afterBlur() {\n          handleChange();\n          pickerVisible.value = false;\n          hasJustTabExitedInput = false;\n          props.validateEvent && (formItem == null ? void 0 : formItem.validate(\"blur\")[\"catch\"](function (err) {\n            return debugWarn(err);\n          }));\n        }\n      }),\n      isFocused = _useFocusController.isFocused,\n      handleFocus = _useFocusController.handleFocus,\n      handleBlur = _useFocusController.handleBlur;\n    var rangeInputKls = computed(function () {\n      return [nsDate.b(\"editor\"), nsDate.bm(\"editor\", props.type), nsInput.e(\"wrapper\"), nsDate.is(\"disabled\", pickerDisabled.value), nsDate.is(\"active\", pickerVisible.value), nsRange.b(\"editor\"), pickerSize ? nsRange.bm(\"editor\", pickerSize.value) : \"\", attrs[\"class\"]];\n    });\n    var clearIconKls = computed(function () {\n      return [nsInput.e(\"icon\"), nsRange.e(\"close-icon\"), !showClose.value ? nsRange.e(\"close-icon--hidden\") : \"\"];\n    });\n    watch(pickerVisible, function (val) {\n      if (!val) {\n        userInput.value = null;\n        nextTick(function () {\n          emitChange(props.modelValue);\n        });\n      } else {\n        nextTick(function () {\n          if (val) {\n            valueOnOpen.value = props.modelValue;\n          }\n        });\n      }\n    });\n    var emitChange = function emitChange(val, isClear) {\n      if (isClear || !valueEquals(val, valueOnOpen.value)) {\n        emit(\"change\", val);\n        props.validateEvent && (formItem == null ? void 0 : formItem.validate(\"change\")[\"catch\"](function (err) {\n          return debugWarn(err);\n        }));\n      }\n    };\n    var emitInput = function emitInput(input) {\n      if (!valueEquals(props.modelValue, input)) {\n        var formatted;\n        if (isArray(input)) {\n          formatted = input.map(function (item) {\n            return formatter(item, props.valueFormat, lang.value);\n          });\n        } else if (input) {\n          formatted = formatter(input, props.valueFormat, lang.value);\n        }\n        emit(\"update:modelValue\", input ? formatted : input, lang.value);\n      }\n    };\n    var emitKeydown = function emitKeydown(e) {\n      emit(\"keydown\", e);\n    };\n    var refInput = computed(function () {\n      if (inputRef.value) {\n        return Array.from(inputRef.value.$el.querySelectorAll(\"input\"));\n      }\n      return [];\n    });\n    var setSelectionRange = function setSelectionRange(start, end, pos) {\n      var _inputs = refInput.value;\n      if (!_inputs.length) return;\n      if (!pos || pos === \"min\") {\n        _inputs[0].setSelectionRange(start, end);\n        _inputs[0].focus();\n      } else if (pos === \"max\") {\n        _inputs[1].setSelectionRange(start, end);\n        _inputs[1].focus();\n      }\n    };\n    var onPick = function onPick() {\n      var date = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n      var visible = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      pickerVisible.value = visible;\n      var result;\n      if (isArray(date)) {\n        result = date.map(function (_) {\n          return _.toDate();\n        });\n      } else {\n        result = date ? date.toDate() : date;\n      }\n      userInput.value = null;\n      emitInput(result);\n    };\n    var onBeforeShow = function onBeforeShow() {\n      pickerActualVisible.value = true;\n    };\n    var onShow = function onShow() {\n      emit(\"visible-change\", true);\n    };\n    var onHide = function onHide() {\n      pickerActualVisible.value = false;\n      pickerVisible.value = false;\n      emit(\"visible-change\", false);\n    };\n    var handleOpen = function handleOpen() {\n      pickerVisible.value = true;\n    };\n    var handleClose = function handleClose() {\n      pickerVisible.value = false;\n    };\n    var pickerDisabled = computed(function () {\n      return props.disabled || (form == null ? void 0 : form.disabled);\n    });\n    var parsedValue = computed(function () {\n      var dayOrDays;\n      if (valueIsEmpty.value) {\n        if (pickerOptions.value.getDefaultValue) {\n          dayOrDays = pickerOptions.value.getDefaultValue();\n        }\n      } else {\n        if (isArray(props.modelValue)) {\n          dayOrDays = props.modelValue.map(function (d) {\n            return parseDate(d, props.valueFormat, lang.value);\n          });\n        } else {\n          dayOrDays = parseDate(props.modelValue, props.valueFormat, lang.value);\n        }\n      }\n      if (pickerOptions.value.getRangeAvailableTime) {\n        var availableResult = pickerOptions.value.getRangeAvailableTime(dayOrDays);\n        if (!isEqual(availableResult, dayOrDays)) {\n          dayOrDays = availableResult;\n          if (!valueIsEmpty.value) {\n            emitInput(dayOrDaysToDate(dayOrDays));\n          }\n        }\n      }\n      if (isArray(dayOrDays) && dayOrDays.some(function (day) {\n        return !day;\n      })) {\n        dayOrDays = [];\n      }\n      return dayOrDays;\n    });\n    var displayValue = computed(function () {\n      if (!pickerOptions.value.panelReady) return \"\";\n      var formattedValue = formatDayjsToString(parsedValue.value);\n      if (isArray(userInput.value)) {\n        return [userInput.value[0] || formattedValue && formattedValue[0] || \"\", userInput.value[1] || formattedValue && formattedValue[1] || \"\"];\n      } else if (userInput.value !== null) {\n        return userInput.value;\n      }\n      if (!isTimePicker.value && valueIsEmpty.value) return \"\";\n      if (!pickerVisible.value && valueIsEmpty.value) return \"\";\n      if (formattedValue) {\n        return isDatesPicker.value || isMonthsPicker.value || isYearsPicker.value ? formattedValue.join(\", \") : formattedValue;\n      }\n      return \"\";\n    });\n    var isTimeLikePicker = computed(function () {\n      return props.type.includes(\"time\");\n    });\n    var isTimePicker = computed(function () {\n      return props.type.startsWith(\"time\");\n    });\n    var isDatesPicker = computed(function () {\n      return props.type === \"dates\";\n    });\n    var isMonthsPicker = computed(function () {\n      return props.type === \"months\";\n    });\n    var isYearsPicker = computed(function () {\n      return props.type === \"years\";\n    });\n    var triggerIcon = computed(function () {\n      return props.prefixIcon || (isTimeLikePicker.value ? Clock : Calendar);\n    });\n    var showClose = ref(false);\n    var onClearIconClick = function onClearIconClick(event) {\n      if (props.readonly || pickerDisabled.value) return;\n      if (showClose.value) {\n        event.stopPropagation();\n        if (pickerOptions.value.handleClear) {\n          pickerOptions.value.handleClear();\n        } else {\n          emitInput(valueOnClear.value);\n        }\n        emitChange(valueOnClear.value, true);\n        showClose.value = false;\n        onHide();\n      }\n      emit(\"clear\");\n    };\n    var valueIsEmpty = computed(function () {\n      var modelValue = props.modelValue;\n      return !modelValue || isArray(modelValue) && !modelValue.filter(Boolean).length;\n    });\n    var onMouseDownInput = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(event) {\n        var _a;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              if (!(props.readonly || pickerDisabled.value)) {\n                _context.next = 2;\n                break;\n              }\n              return _context.abrupt(\"return\");\n            case 2:\n              if (((_a = event.target) == null ? void 0 : _a.tagName) !== \"INPUT\" || isFocused.value) {\n                pickerVisible.value = true;\n              }\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n      return function onMouseDownInput(_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    var onMouseEnter = function onMouseEnter() {\n      if (props.readonly || pickerDisabled.value) return;\n      if (!valueIsEmpty.value && props.clearable) {\n        showClose.value = true;\n      }\n    };\n    var onMouseLeave = function onMouseLeave() {\n      showClose.value = false;\n    };\n    var onTouchStartInput = function onTouchStartInput(event) {\n      var _a;\n      if (props.readonly || pickerDisabled.value) return;\n      if (((_a = event.touches[0].target) == null ? void 0 : _a.tagName) !== \"INPUT\" || isFocused.value) {\n        pickerVisible.value = true;\n      }\n    };\n    var isRangeInput = computed(function () {\n      return props.type.includes(\"range\");\n    });\n    var pickerSize = useFormSize();\n    var popperEl = computed(function () {\n      var _a, _b;\n      return (_b = (_a = unref(refPopper)) == null ? void 0 : _a.popperRef) == null ? void 0 : _b.contentRef;\n    });\n    var stophandle = onClickOutside(inputRef, function (e) {\n      var unrefedPopperEl = unref(popperEl);\n      var inputEl = unrefElement(inputRef);\n      if (unrefedPopperEl && (e.target === unrefedPopperEl || e.composedPath().includes(unrefedPopperEl)) || e.target === inputEl || inputEl && e.composedPath().includes(inputEl)) return;\n      pickerVisible.value = false;\n    });\n    onBeforeUnmount(function () {\n      stophandle == null ? void 0 : stophandle();\n    });\n    var userInput = ref(null);\n    var handleChange = function handleChange() {\n      if (userInput.value) {\n        var value = parseUserInputToDayjs(displayValue.value);\n        if (value) {\n          if (isValidValue(value)) {\n            emitInput(dayOrDaysToDate(value));\n            userInput.value = null;\n          }\n        }\n      }\n      if (userInput.value === \"\") {\n        emitInput(valueOnClear.value);\n        emitChange(valueOnClear.value);\n        userInput.value = null;\n      }\n    };\n    var parseUserInputToDayjs = function parseUserInputToDayjs(value) {\n      if (!value) return null;\n      return pickerOptions.value.parseUserInput(value);\n    };\n    var formatDayjsToString = function formatDayjsToString(value) {\n      if (!value) return null;\n      return pickerOptions.value.formatToString(value);\n    };\n    var isValidValue = function isValidValue(value) {\n      return pickerOptions.value.isValidValue(value);\n    };\n    var handleKeydownInput = /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(event) {\n        var code;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!(props.readonly || pickerDisabled.value)) {\n                _context2.next = 2;\n                break;\n              }\n              return _context2.abrupt(\"return\");\n            case 2:\n              code = event.code;\n              emitKeydown(event);\n              if (!(code === EVENT_CODE.esc)) {\n                _context2.next = 7;\n                break;\n              }\n              if (pickerVisible.value === true) {\n                pickerVisible.value = false;\n                event.preventDefault();\n                event.stopPropagation();\n              }\n              return _context2.abrupt(\"return\");\n            case 7:\n              if (!(code === EVENT_CODE.down)) {\n                _context2.next = 16;\n                break;\n              }\n              if (pickerOptions.value.handleFocusPicker) {\n                event.preventDefault();\n                event.stopPropagation();\n              }\n              if (!(pickerVisible.value === false)) {\n                _context2.next = 13;\n                break;\n              }\n              pickerVisible.value = true;\n              _context2.next = 13;\n              return nextTick();\n            case 13:\n              if (!pickerOptions.value.handleFocusPicker) {\n                _context2.next = 16;\n                break;\n              }\n              pickerOptions.value.handleFocusPicker();\n              return _context2.abrupt(\"return\");\n            case 16:\n              if (!(code === EVENT_CODE.tab)) {\n                _context2.next = 19;\n                break;\n              }\n              hasJustTabExitedInput = true;\n              return _context2.abrupt(\"return\");\n            case 19:\n              if (!(code === EVENT_CODE.enter || code === EVENT_CODE.numpadEnter)) {\n                _context2.next = 23;\n                break;\n              }\n              if (userInput.value === null || userInput.value === \"\" || isValidValue(parseUserInputToDayjs(displayValue.value))) {\n                handleChange();\n                pickerVisible.value = false;\n              }\n              event.stopPropagation();\n              return _context2.abrupt(\"return\");\n            case 23:\n              if (!userInput.value) {\n                _context2.next = 26;\n                break;\n              }\n              event.stopPropagation();\n              return _context2.abrupt(\"return\");\n            case 26:\n              if (pickerOptions.value.handleKeydownInput) {\n                pickerOptions.value.handleKeydownInput(event);\n              }\n            case 27:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2);\n      }));\n      return function handleKeydownInput(_x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n    var onUserInput = function onUserInput(e) {\n      userInput.value = e;\n      if (!pickerVisible.value) {\n        pickerVisible.value = true;\n      }\n    };\n    var handleStartInput = function handleStartInput(event) {\n      var target = event.target;\n      if (userInput.value) {\n        userInput.value = [target.value, userInput.value[1]];\n      } else {\n        userInput.value = [target.value, null];\n      }\n    };\n    var handleEndInput = function handleEndInput(event) {\n      var target = event.target;\n      if (userInput.value) {\n        userInput.value = [userInput.value[0], target.value];\n      } else {\n        userInput.value = [null, target.value];\n      }\n    };\n    var handleStartChange = function handleStartChange() {\n      var _a;\n      var values = userInput.value;\n      var value = parseUserInputToDayjs(values && values[0]);\n      var parsedVal = unref(parsedValue);\n      if (value && value.isValid()) {\n        userInput.value = [formatDayjsToString(value), ((_a = displayValue.value) == null ? void 0 : _a[1]) || null];\n        var newValue = [value, parsedVal && (parsedVal[1] || null)];\n        if (isValidValue(newValue)) {\n          emitInput(dayOrDaysToDate(newValue));\n          userInput.value = null;\n        }\n      }\n    };\n    var handleEndChange = function handleEndChange() {\n      var _a;\n      var values = unref(userInput);\n      var value = parseUserInputToDayjs(values && values[1]);\n      var parsedVal = unref(parsedValue);\n      if (value && value.isValid()) {\n        userInput.value = [((_a = unref(displayValue)) == null ? void 0 : _a[0]) || null, formatDayjsToString(value)];\n        var newValue = [parsedVal && parsedVal[0], value];\n        if (isValidValue(newValue)) {\n          emitInput(dayOrDaysToDate(newValue));\n          userInput.value = null;\n        }\n      }\n    };\n    var pickerOptions = ref({});\n    var onSetPickerOption = function onSetPickerOption(e) {\n      pickerOptions.value[e[0]] = e[1];\n      pickerOptions.value.panelReady = true;\n    };\n    var onCalendarChange = function onCalendarChange(e) {\n      emit(\"calendar-change\", e);\n    };\n    var onPanelChange = function onPanelChange(value, mode, view) {\n      emit(\"panel-change\", value, mode, view);\n    };\n    var focus = function focus() {\n      var _a;\n      (_a = inputRef.value) == null ? void 0 : _a.focus();\n    };\n    var blur = function blur() {\n      var _a;\n      (_a = inputRef.value) == null ? void 0 : _a.blur();\n    };\n    provide(\"EP_PICKER_BASE\", {\n      props: props\n    });\n    expose({\n      focus: focus,\n      blur: blur,\n      handleOpen: handleOpen,\n      handleClose: handleClose,\n      onPick: onPick\n    });\n    return function (_ctx, _cache) {\n      return openBlock(), createBlock(unref(ElTooltip), mergeProps({\n        ref_key: \"refPopper\",\n        ref: refPopper,\n        visible: pickerVisible.value,\n        effect: \"light\",\n        pure: \"\",\n        trigger: \"click\"\n      }, _ctx.$attrs, {\n        role: \"dialog\",\n        teleported: \"\",\n        transition: \"\".concat(unref(nsDate).namespace.value, \"-zoom-in-top\"),\n        \"popper-class\": [\"\".concat(unref(nsDate).namespace.value, \"-picker__popper\"), _ctx.popperClass],\n        \"popper-options\": unref(elPopperOptions),\n        \"fallback-placements\": _ctx.fallbackPlacements,\n        \"gpu-acceleration\": false,\n        placement: _ctx.placement,\n        \"stop-popper-mouse-event\": false,\n        \"hide-after\": 0,\n        persistent: \"\",\n        onBeforeShow: onBeforeShow,\n        onShow: onShow,\n        onHide: onHide\n      }), {\n        \"default\": withCtx(function () {\n          return [!unref(isRangeInput) ? (openBlock(), createBlock(unref(ElInput), {\n            key: 0,\n            id: _ctx.id,\n            ref_key: \"inputRef\",\n            ref: inputRef,\n            \"container-role\": \"combobox\",\n            \"model-value\": unref(displayValue),\n            name: _ctx.name,\n            size: unref(pickerSize),\n            disabled: unref(pickerDisabled),\n            placeholder: _ctx.placeholder,\n            \"class\": normalizeClass([unref(nsDate).b(\"editor\"), unref(nsDate).bm(\"editor\", _ctx.type), _ctx.$attrs[\"class\"]]),\n            style: normalizeStyle(_ctx.$attrs.style),\n            readonly: !_ctx.editable || _ctx.readonly || unref(isDatesPicker) || unref(isMonthsPicker) || unref(isYearsPicker) || _ctx.type === \"week\",\n            \"aria-label\": _ctx.ariaLabel,\n            tabindex: _ctx.tabindex,\n            \"validate-event\": false,\n            onInput: onUserInput,\n            onFocus: unref(handleFocus),\n            onBlur: unref(handleBlur),\n            onKeydown: handleKeydownInput,\n            onChange: handleChange,\n            onMousedown: onMouseDownInput,\n            onMouseenter: onMouseEnter,\n            onMouseleave: onMouseLeave,\n            onTouchstartPassive: onTouchStartInput,\n            onClick: withModifiers(function () {}, [\"stop\"])\n          }, {\n            prefix: withCtx(function () {\n              return [unref(triggerIcon) ? (openBlock(), createBlock(unref(ElIcon), {\n                key: 0,\n                \"class\": normalizeClass(unref(nsInput).e(\"icon\")),\n                onMousedown: withModifiers(onMouseDownInput, [\"prevent\"]),\n                onTouchstartPassive: onTouchStartInput\n              }, {\n                \"default\": withCtx(function () {\n                  return [(openBlock(), createBlock(resolveDynamicComponent(unref(triggerIcon))))];\n                }),\n                _: 1\n              }, 8, [\"class\", \"onMousedown\"])) : createCommentVNode(\"v-if\", true)];\n            }),\n            suffix: withCtx(function () {\n              return [showClose.value && _ctx.clearIcon ? (openBlock(), createBlock(unref(ElIcon), {\n                key: 0,\n                \"class\": normalizeClass(\"\".concat(unref(nsInput).e(\"icon\"), \" clear-icon\")),\n                onMousedown: withModifiers(unref(NOOP), [\"prevent\"]),\n                onClick: onClearIconClick\n              }, {\n                \"default\": withCtx(function () {\n                  return [(openBlock(), createBlock(resolveDynamicComponent(_ctx.clearIcon)))];\n                }),\n                _: 1\n              }, 8, [\"class\", \"onMousedown\"])) : createCommentVNode(\"v-if\", true)];\n            }),\n            _: 1\n          }, 8, [\"id\", \"model-value\", \"name\", \"size\", \"disabled\", \"placeholder\", \"class\", \"style\", \"readonly\", \"aria-label\", \"tabindex\", \"onFocus\", \"onBlur\", \"onClick\"])) : (openBlock(), createBlock(PickerRangeTrigger, {\n            key: 1,\n            id: _ctx.id,\n            ref_key: \"inputRef\",\n            ref: inputRef,\n            \"model-value\": unref(displayValue),\n            name: _ctx.name,\n            disabled: unref(pickerDisabled),\n            readonly: !_ctx.editable || _ctx.readonly,\n            \"start-placeholder\": _ctx.startPlaceholder,\n            \"end-placeholder\": _ctx.endPlaceholder,\n            \"class\": normalizeClass(unref(rangeInputKls)),\n            style: normalizeStyle(_ctx.$attrs.style),\n            \"aria-label\": _ctx.ariaLabel,\n            tabindex: _ctx.tabindex,\n            autocomplete: \"off\",\n            role: \"combobox\",\n            onClick: onMouseDownInput,\n            onFocus: unref(handleFocus),\n            onBlur: unref(handleBlur),\n            onStartInput: handleStartInput,\n            onStartChange: handleStartChange,\n            onEndInput: handleEndInput,\n            onEndChange: handleEndChange,\n            onMousedown: onMouseDownInput,\n            onMouseenter: onMouseEnter,\n            onMouseleave: onMouseLeave,\n            onTouchstartPassive: onTouchStartInput,\n            onKeydown: handleKeydownInput\n          }, {\n            prefix: withCtx(function () {\n              return [unref(triggerIcon) ? (openBlock(), createBlock(unref(ElIcon), {\n                key: 0,\n                \"class\": normalizeClass([unref(nsInput).e(\"icon\"), unref(nsRange).e(\"icon\")])\n              }, {\n                \"default\": withCtx(function () {\n                  return [(openBlock(), createBlock(resolveDynamicComponent(unref(triggerIcon))))];\n                }),\n                _: 1\n              }, 8, [\"class\"])) : createCommentVNode(\"v-if\", true)];\n            }),\n            \"range-separator\": withCtx(function () {\n              return [renderSlot(_ctx.$slots, \"range-separator\", {}, function () {\n                return [createElementVNode(\"span\", {\n                  \"class\": normalizeClass(unref(nsRange).b(\"separator\"))\n                }, toDisplayString(_ctx.rangeSeparator), 3)];\n              })];\n            }),\n            suffix: withCtx(function () {\n              return [_ctx.clearIcon ? (openBlock(), createBlock(unref(ElIcon), {\n                key: 0,\n                \"class\": normalizeClass(unref(clearIconKls)),\n                onMousedown: withModifiers(unref(NOOP), [\"prevent\"]),\n                onClick: onClearIconClick\n              }, {\n                \"default\": withCtx(function () {\n                  return [(openBlock(), createBlock(resolveDynamicComponent(_ctx.clearIcon)))];\n                }),\n                _: 1\n              }, 8, [\"class\", \"onMousedown\"])) : createCommentVNode(\"v-if\", true)];\n            }),\n            _: 3\n          }, 8, [\"id\", \"model-value\", \"name\", \"disabled\", \"readonly\", \"start-placeholder\", \"end-placeholder\", \"class\", \"style\", \"aria-label\", \"tabindex\", \"onFocus\", \"onBlur\"]))];\n        }),\n        content: withCtx(function () {\n          return [renderSlot(_ctx.$slots, \"default\", {\n            visible: pickerVisible.value,\n            actualVisible: pickerActualVisible.value,\n            parsedValue: unref(parsedValue),\n            format: _ctx.format,\n            dateFormat: _ctx.dateFormat,\n            timeFormat: _ctx.timeFormat,\n            unlinkPanels: _ctx.unlinkPanels,\n            type: _ctx.type,\n            defaultValue: _ctx.defaultValue,\n            showNow: _ctx.showNow,\n            onPick: onPick,\n            onSelectRange: setSelectionRange,\n            onSetPickerOption: onSetPickerOption,\n            onCalendarChange: onCalendarChange,\n            onPanelChange: onPanelChange,\n            onMousedown: withModifiers(function () {}, [\"stop\"])\n          })];\n        }),\n        _: 3\n      }, 16, [\"visible\", \"transition\", \"popper-class\", \"popper-options\", \"fallback-placements\", \"placement\"]);\n    };\n  }\n}));\nvar CommonPicker = /* @__PURE__ */_export_sfc(_sfc_main, [[\"__file\", \"picker.vue\"]]);\nexport { CommonPicker as default };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}