{"ast":null,"code":"import \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport { defineComponent, openBlock, createBlock, Transition, mergeProps, withCtx, renderSlot } from 'vue';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { addClass, removeClass, hasClass } from '../../../utils/dom/style.mjs';\nvar _sfc_main = defineComponent({\n  name: \"ElMenuCollapseTransition\",\n  setup: function setup() {\n    var ns = useNamespace(\"menu\");\n    var listeners = {\n      onBeforeEnter: function onBeforeEnter(el) {\n        return el.style.opacity = \"0.2\";\n      },\n      onEnter: function onEnter(el, done) {\n        addClass(el, \"\".concat(ns.namespace.value, \"-opacity-transition\"));\n        el.style.opacity = \"1\";\n        done();\n      },\n      onAfterEnter: function onAfterEnter(el) {\n        removeClass(el, \"\".concat(ns.namespace.value, \"-opacity-transition\"));\n        el.style.opacity = \"\";\n      },\n      onBeforeLeave: function onBeforeLeave(el) {\n        if (!el.dataset) {\n          el.dataset = {};\n        }\n        if (hasClass(el, ns.m(\"collapse\"))) {\n          removeClass(el, ns.m(\"collapse\"));\n          el.dataset.oldOverflow = el.style.overflow;\n          el.dataset.scrollWidth = el.clientWidth.toString();\n          addClass(el, ns.m(\"collapse\"));\n        } else {\n          addClass(el, ns.m(\"collapse\"));\n          el.dataset.oldOverflow = el.style.overflow;\n          el.dataset.scrollWidth = el.clientWidth.toString();\n          removeClass(el, ns.m(\"collapse\"));\n        }\n        el.style.width = \"\".concat(el.scrollWidth, \"px\");\n        el.style.overflow = \"hidden\";\n      },\n      onLeave: function onLeave(el) {\n        addClass(el, \"horizontal-collapse-transition\");\n        el.style.width = \"\".concat(el.dataset.scrollWidth, \"px\");\n      }\n    };\n    return {\n      listeners: listeners\n    };\n  }\n});\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  return openBlock(), createBlock(Transition, mergeProps({\n    mode: \"out-in\"\n  }, _ctx.listeners), {\n    \"default\": withCtx(function () {\n      return [renderSlot(_ctx.$slots, \"default\")];\n    }),\n    _: 3\n  }, 16);\n}\nvar ElMenuCollapseTransition = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render], [\"__file\", \"menu-collapse-transition.vue\"]]);\nexport { ElMenuCollapseTransition as default };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}