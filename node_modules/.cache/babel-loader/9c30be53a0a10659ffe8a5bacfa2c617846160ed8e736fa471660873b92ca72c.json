{"ast":null,"code":"import _createForOfIteratorHelper from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _objectSpread from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport { defineComponent, getCurrentInstance, ref, computed, onBeforeMount, onMounted, onBeforeUnmount, Fragment, h } from 'vue';\nimport { ElCheckbox } from '../../../checkbox/index.mjs';\nimport { cellStarts } from '../config.mjs';\nimport { mergeOptions, compose } from '../util.mjs';\nimport useWatcher from './watcher-helper.mjs';\nimport useRender from './render-helper.mjs';\nimport defaultProps from './defaults.mjs';\nimport { isUndefined } from '../../../../utils/types.mjs';\nimport { isArray, isString } from '@vue/shared';\nvar columnIdSeed = 1;\nvar ElTableColumn = defineComponent({\n  name: \"ElTableColumn\",\n  components: {\n    ElCheckbox: ElCheckbox\n  },\n  props: defaultProps,\n  setup: function setup(props, _ref) {\n    var slots = _ref.slots;\n    var instance = getCurrentInstance();\n    var columnConfig = ref({});\n    var owner = computed(function () {\n      var parent2 = instance.parent;\n      while (parent2 && !parent2.tableId) {\n        parent2 = parent2.parent;\n      }\n      return parent2;\n    });\n    var _useWatcher = useWatcher(owner, props),\n      registerNormalWatchers = _useWatcher.registerNormalWatchers,\n      registerComplexWatchers = _useWatcher.registerComplexWatchers;\n    var _useRender = useRender(props, slots, owner),\n      columnId = _useRender.columnId,\n      isSubColumn = _useRender.isSubColumn,\n      realHeaderAlign = _useRender.realHeaderAlign,\n      columnOrTableParent = _useRender.columnOrTableParent,\n      setColumnWidth = _useRender.setColumnWidth,\n      setColumnForcedProps = _useRender.setColumnForcedProps,\n      setColumnRenders = _useRender.setColumnRenders,\n      getPropsData = _useRender.getPropsData,\n      getColumnElIndex = _useRender.getColumnElIndex,\n      realAlign = _useRender.realAlign,\n      updateColumnOrder = _useRender.updateColumnOrder;\n    var parent = columnOrTableParent.value;\n    columnId.value = \"\".concat(parent.tableId || parent.columnId, \"_column_\").concat(columnIdSeed++);\n    onBeforeMount(function () {\n      isSubColumn.value = owner.value !== parent;\n      var type = props.type || \"default\";\n      var sortable = props.sortable === \"\" ? true : props.sortable;\n      var showOverflowTooltip = isUndefined(props.showOverflowTooltip) ? parent.props.showOverflowTooltip : props.showOverflowTooltip;\n      var defaults = _objectSpread(_objectSpread({}, cellStarts[type]), {}, {\n        id: columnId.value,\n        type: type,\n        property: props.prop || props.property,\n        align: realAlign,\n        headerAlign: realHeaderAlign,\n        showOverflowTooltip: showOverflowTooltip,\n        filterable: props.filters || props.filterMethod,\n        filteredValue: [],\n        filterPlacement: \"\",\n        filterClassName: \"\",\n        isColumnGroup: false,\n        isSubColumn: false,\n        filterOpened: false,\n        sortable: sortable,\n        index: props.index,\n        rawColumnKey: instance.vnode.key\n      });\n      var basicProps = [\"columnKey\", \"label\", \"className\", \"labelClassName\", \"type\", \"renderHeader\", \"formatter\", \"fixed\", \"resizable\"];\n      var sortProps = [\"sortMethod\", \"sortBy\", \"sortOrders\"];\n      var selectProps = [\"selectable\", \"reserveSelection\"];\n      var filterProps = [\"filterMethod\", \"filters\", \"filterMultiple\", \"filterOpened\", \"filteredValue\", \"filterPlacement\", \"filterClassName\"];\n      var column = getPropsData(basicProps, sortProps, selectProps, filterProps);\n      column = mergeOptions(defaults, column);\n      var chains = compose(setColumnRenders, setColumnWidth, setColumnForcedProps);\n      column = chains(column);\n      columnConfig.value = column;\n      registerNormalWatchers();\n      registerComplexWatchers();\n    });\n    onMounted(function () {\n      var _a;\n      var parent2 = columnOrTableParent.value;\n      var children = isSubColumn.value ? parent2.vnode.el.children : (_a = parent2.refs.hiddenColumns) == null ? void 0 : _a.children;\n      var getColumnIndex = function getColumnIndex() {\n        return getColumnElIndex(children || [], instance.vnode.el);\n      };\n      columnConfig.value.getColumnIndex = getColumnIndex;\n      var columnIndex = getColumnIndex();\n      columnIndex > -1 && owner.value.store.commit(\"insertColumn\", columnConfig.value, isSubColumn.value ? parent2.columnConfig.value : null, updateColumnOrder);\n    });\n    onBeforeUnmount(function () {\n      var getColumnIndex = columnConfig.value.getColumnIndex;\n      var columnIndex = getColumnIndex ? getColumnIndex() : -1;\n      columnIndex > -1 && owner.value.store.commit(\"removeColumn\", columnConfig.value, isSubColumn.value ? parent.columnConfig.value : null, updateColumnOrder);\n    });\n    instance.columnId = columnId.value;\n    instance.columnConfig = columnConfig;\n    return;\n  },\n  render: function render() {\n    var _a, _b, _c;\n    try {\n      var renderDefault = (_b = (_a = this.$slots)[\"default\"]) == null ? void 0 : _b.call(_a, {\n        row: {},\n        column: {},\n        $index: -1\n      });\n      var children = [];\n      if (isArray(renderDefault)) {\n        var _iterator = _createForOfIteratorHelper(renderDefault),\n          _step;\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var childNode = _step.value;\n            if (((_c = childNode.type) == null ? void 0 : _c.name) === \"ElTableColumn\" || childNode.shapeFlag & 2) {\n              children.push(childNode);\n            } else if (childNode.type === Fragment && isArray(childNode.children)) {\n              childNode.children.forEach(function (vnode2) {\n                if ((vnode2 == null ? void 0 : vnode2.patchFlag) !== 1024 && !isString(vnode2 == null ? void 0 : vnode2.children)) {\n                  children.push(vnode2);\n                }\n              });\n            }\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      }\n      var vnode = h(\"div\", children);\n      return vnode;\n    } catch (e) {\n      return h(\"div\", []);\n    }\n  }\n});\nexport { ElTableColumn as default };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}