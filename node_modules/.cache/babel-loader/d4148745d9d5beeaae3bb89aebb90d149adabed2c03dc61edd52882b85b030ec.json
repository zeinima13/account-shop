{"ast":null,"code":"import _slicedToArray from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _toConsumableArray from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _objectSpread from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/web.timers.js\";\nimport { defineComponent, computed, shallowRef, ref, onMounted, watch, onBeforeUnmount, openBlock, createElementBlock, normalizeStyle, renderSlot } from 'vue';\nimport { useMutationObserver } from '@vueuse/core';\nimport { watermarkProps } from './watermark.mjs';\nimport { reRendering, getStyleStr, getPixelRatio } from './utils.mjs';\nimport useClips, { FontGap } from './useClips.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { isArray } from '@vue/shared';\nvar __default__ = defineComponent({\n  name: \"ElWatermark\"\n});\nvar _sfc_main = /* @__PURE__ */defineComponent(_objectSpread(_objectSpread({}, __default__), {}, {\n  props: watermarkProps,\n  setup: function setup(__props) {\n    var props = __props;\n    var style = {\n      position: \"relative\"\n    };\n    var color = computed(function () {\n      var _a, _b;\n      return (_b = (_a = props.font) == null ? void 0 : _a.color) != null ? _b : \"rgba(0,0,0,.15)\";\n    });\n    var fontSize = computed(function () {\n      var _a, _b;\n      return (_b = (_a = props.font) == null ? void 0 : _a.fontSize) != null ? _b : 16;\n    });\n    var fontWeight = computed(function () {\n      var _a, _b;\n      return (_b = (_a = props.font) == null ? void 0 : _a.fontWeight) != null ? _b : \"normal\";\n    });\n    var fontStyle = computed(function () {\n      var _a, _b;\n      return (_b = (_a = props.font) == null ? void 0 : _a.fontStyle) != null ? _b : \"normal\";\n    });\n    var fontFamily = computed(function () {\n      var _a, _b;\n      return (_b = (_a = props.font) == null ? void 0 : _a.fontFamily) != null ? _b : \"sans-serif\";\n    });\n    var textAlign = computed(function () {\n      var _a, _b;\n      return (_b = (_a = props.font) == null ? void 0 : _a.textAlign) != null ? _b : \"center\";\n    });\n    var textBaseline = computed(function () {\n      var _a, _b;\n      return (_b = (_a = props.font) == null ? void 0 : _a.textBaseline) != null ? _b : \"hanging\";\n    });\n    var gapX = computed(function () {\n      return props.gap[0];\n    });\n    var gapY = computed(function () {\n      return props.gap[1];\n    });\n    var gapXCenter = computed(function () {\n      return gapX.value / 2;\n    });\n    var gapYCenter = computed(function () {\n      return gapY.value / 2;\n    });\n    var offsetLeft = computed(function () {\n      var _a, _b;\n      return (_b = (_a = props.offset) == null ? void 0 : _a[0]) != null ? _b : gapXCenter.value;\n    });\n    var offsetTop = computed(function () {\n      var _a, _b;\n      return (_b = (_a = props.offset) == null ? void 0 : _a[1]) != null ? _b : gapYCenter.value;\n    });\n    var getMarkStyle = function getMarkStyle() {\n      var markStyle = {\n        zIndex: props.zIndex,\n        position: \"absolute\",\n        left: 0,\n        top: 0,\n        width: \"100%\",\n        height: \"100%\",\n        pointerEvents: \"none\",\n        backgroundRepeat: \"repeat\"\n      };\n      var positionLeft = offsetLeft.value - gapXCenter.value;\n      var positionTop = offsetTop.value - gapYCenter.value;\n      if (positionLeft > 0) {\n        markStyle.left = \"\".concat(positionLeft, \"px\");\n        markStyle.width = \"calc(100% - \".concat(positionLeft, \"px)\");\n        positionLeft = 0;\n      }\n      if (positionTop > 0) {\n        markStyle.top = \"\".concat(positionTop, \"px\");\n        markStyle.height = \"calc(100% - \".concat(positionTop, \"px)\");\n        positionTop = 0;\n      }\n      markStyle.backgroundPosition = \"\".concat(positionLeft, \"px \").concat(positionTop, \"px\");\n      return markStyle;\n    };\n    var containerRef = shallowRef(null);\n    var watermarkRef = shallowRef();\n    var stopObservation = ref(false);\n    var destroyWatermark = function destroyWatermark() {\n      if (watermarkRef.value) {\n        watermarkRef.value.remove();\n        watermarkRef.value = void 0;\n      }\n    };\n    var appendWatermark = function appendWatermark(base64Url, markWidth) {\n      var _a;\n      if (containerRef.value && watermarkRef.value) {\n        stopObservation.value = true;\n        watermarkRef.value.setAttribute(\"style\", getStyleStr(_objectSpread(_objectSpread({}, getMarkStyle()), {}, {\n          backgroundImage: \"url('\".concat(base64Url, \"')\"),\n          backgroundSize: \"\".concat(Math.floor(markWidth), \"px\")\n        })));\n        (_a = containerRef.value) == null ? void 0 : _a.append(watermarkRef.value);\n        setTimeout(function () {\n          stopObservation.value = false;\n        });\n      }\n    };\n    var getMarkSize = function getMarkSize(ctx) {\n      var defaultWidth = 120;\n      var defaultHeight = 64;\n      var image = props.image;\n      var content = props.content;\n      var width = props.width;\n      var height = props.height;\n      if (!image && ctx.measureText) {\n        ctx.font = \"\".concat(Number(fontSize.value), \"px \").concat(fontFamily.value);\n        var contents = isArray(content) ? content : [content];\n        var sizes = contents.map(function (item) {\n          var metrics = ctx.measureText(item);\n          return [metrics.width, metrics.fontBoundingBoxAscent !== void 0 ? metrics.fontBoundingBoxAscent + metrics.fontBoundingBoxDescent : metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent];\n        });\n        defaultWidth = Math.ceil(Math.max.apply(Math, _toConsumableArray(sizes.map(function (size) {\n          return size[0];\n        }))));\n        defaultHeight = Math.ceil(Math.max.apply(Math, _toConsumableArray(sizes.map(function (size) {\n          return size[1];\n        })))) * contents.length + (contents.length - 1) * FontGap;\n      }\n      return [width != null ? width : defaultWidth, height != null ? height : defaultHeight];\n    };\n    var getClips = useClips();\n    var renderWatermark = function renderWatermark() {\n      var canvas = document.createElement(\"canvas\");\n      var ctx = canvas.getContext(\"2d\");\n      var image = props.image;\n      var content = props.content;\n      var rotate = props.rotate;\n      if (ctx) {\n        if (!watermarkRef.value) {\n          watermarkRef.value = document.createElement(\"div\");\n        }\n        var ratio = getPixelRatio();\n        var _getMarkSize = getMarkSize(ctx),\n          _getMarkSize2 = _slicedToArray(_getMarkSize, 2),\n          markWidth = _getMarkSize2[0],\n          markHeight = _getMarkSize2[1];\n        var drawCanvas = function drawCanvas(drawContent) {\n          var _getClips = getClips(drawContent || \"\", rotate, ratio, markWidth, markHeight, {\n              color: color.value,\n              fontSize: fontSize.value,\n              fontStyle: fontStyle.value,\n              fontWeight: fontWeight.value,\n              fontFamily: fontFamily.value,\n              textAlign: textAlign.value,\n              textBaseline: textBaseline.value\n            }, gapX.value, gapY.value),\n            _getClips2 = _slicedToArray(_getClips, 2),\n            textClips = _getClips2[0],\n            clipWidth = _getClips2[1];\n          appendWatermark(textClips, clipWidth);\n        };\n        if (image) {\n          var img = new Image();\n          img.onload = function () {\n            drawCanvas(img);\n          };\n          img.onerror = function () {\n            drawCanvas(content);\n          };\n          img.crossOrigin = \"anonymous\";\n          img.referrerPolicy = \"no-referrer\";\n          img.src = image;\n        } else {\n          drawCanvas(content);\n        }\n      }\n    };\n    onMounted(function () {\n      renderWatermark();\n    });\n    watch(function () {\n      return props;\n    }, function () {\n      renderWatermark();\n    }, {\n      deep: true,\n      flush: \"post\"\n    });\n    onBeforeUnmount(function () {\n      destroyWatermark();\n    });\n    var onMutate = function onMutate(mutations) {\n      if (stopObservation.value) {\n        return;\n      }\n      mutations.forEach(function (mutation) {\n        if (reRendering(mutation, watermarkRef.value)) {\n          destroyWatermark();\n          renderWatermark();\n        }\n      });\n    };\n    useMutationObserver(containerRef, onMutate, {\n      attributes: true,\n      subtree: true,\n      childList: true\n    });\n    return function (_ctx, _cache) {\n      return openBlock(), createElementBlock(\"div\", {\n        ref_key: \"containerRef\",\n        ref: containerRef,\n        style: normalizeStyle([style])\n      }, [renderSlot(_ctx.$slots, \"default\")], 4);\n    };\n  }\n}));\nvar Watermark = /* @__PURE__ */_export_sfc(_sfc_main, [[\"__file\", \"watermark.vue\"]]);\nexport { Watermark as default };","map":{"version":3,"names":["name","style","position","color","computed","_a","_b","props","font","fontSize","fontWeight","fontStyle","fontFamily","textAlign","textBaseline","gapX","gap","gapY","gapXCenter","value","gapYCenter","offsetLeft","offset","offsetTop","getMarkStyle","markStyle","zIndex","left","top","width","height","pointerEvents","backgroundRepeat","positionLeft","positionTop","concat","backgroundPosition","containerRef","shallowRef","watermarkRef","stopObservation","ref","destroyWatermark","remove","appendWatermark","base64Url","markWidth","setAttribute","getStyleStr","_objectSpread","backgroundImage","backgroundSize","Math","floor","append","setTimeout","getMarkSize","ctx","defaultWidth","defaultHeight","image","content","measureText","Number","contents","isArray","sizes","map","item","metrics","fontBoundingBoxAscent","fontBoundingBoxDescent","actualBoundingBoxAscent","actualBoundingBoxDescent","ceil","max","apply","_toConsumableArray","size","length","FontGap","getClips","useClips","renderWatermark","canvas","document","createElement","getContext","rotate","ratio","getPixelRatio","_getMarkSize","_getMarkSize2","_slicedToArray","markHeight","drawCanvas","drawContent","_getClips","_getClips2","textClips","clipWidth","img","Image","onload","onerror","crossOrigin","referrerPolicy","src","onMounted","watch","deep","flush","onBeforeUnmount","onMutate","mutations","forEach","mutation"],"sources":["../../../../../../packages/components/watermark/src/watermark.vue"],"sourcesContent":["<template>\n  <div ref=\"containerRef\" :style=\"[style]\">\n    <slot />\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport {\n  computed,\n  onBeforeUnmount,\n  onMounted,\n  ref,\n  shallowRef,\n  watch,\n} from 'vue'\nimport { useMutationObserver } from '@vueuse/core'\nimport { isArray } from '@element-plus/utils'\nimport { watermarkProps } from './watermark'\nimport { getPixelRatio, getStyleStr, reRendering } from './utils'\nimport useClips, { FontGap } from './useClips'\nimport type { WatermarkProps } from './watermark'\nimport type { CSSProperties } from 'vue'\n\ndefineOptions({\n  name: 'ElWatermark',\n})\n\nconst style: CSSProperties = {\n  position: 'relative',\n}\n\nconst props = defineProps(watermarkProps)\nconst color = computed(() => props.font?.color ?? 'rgba(0,0,0,.15)')\nconst fontSize = computed(() => props.font?.fontSize ?? 16)\nconst fontWeight = computed(() => props.font?.fontWeight ?? 'normal')\nconst fontStyle = computed(() => props.font?.fontStyle ?? 'normal')\nconst fontFamily = computed(() => props.font?.fontFamily ?? 'sans-serif')\nconst textAlign = computed(() => props.font?.textAlign ?? 'center')\nconst textBaseline = computed(() => props.font?.textBaseline ?? 'hanging')\n\nconst gapX = computed(() => props.gap[0])\nconst gapY = computed(() => props.gap[1])\nconst gapXCenter = computed(() => gapX.value / 2)\nconst gapYCenter = computed(() => gapY.value / 2)\nconst offsetLeft = computed(() => props.offset?.[0] ?? gapXCenter.value)\nconst offsetTop = computed(() => props.offset?.[1] ?? gapYCenter.value)\n\nconst getMarkStyle = () => {\n  const markStyle: CSSProperties = {\n    zIndex: props.zIndex,\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    width: '100%',\n    height: '100%',\n    pointerEvents: 'none',\n    backgroundRepeat: 'repeat',\n  }\n\n  /** Calculate the style of the offset */\n  let positionLeft = offsetLeft.value - gapXCenter.value\n  let positionTop = offsetTop.value - gapYCenter.value\n  if (positionLeft > 0) {\n    markStyle.left = `${positionLeft}px`\n    markStyle.width = `calc(100% - ${positionLeft}px)`\n    positionLeft = 0\n  }\n  if (positionTop > 0) {\n    markStyle.top = `${positionTop}px`\n    markStyle.height = `calc(100% - ${positionTop}px)`\n    positionTop = 0\n  }\n  markStyle.backgroundPosition = `${positionLeft}px ${positionTop}px`\n\n  return markStyle\n}\n\nconst containerRef = shallowRef<HTMLDivElement | null>(null)\nconst watermarkRef = shallowRef<HTMLDivElement>()\nconst stopObservation = ref(false)\n\nconst destroyWatermark = () => {\n  if (watermarkRef.value) {\n    watermarkRef.value.remove()\n    watermarkRef.value = undefined\n  }\n}\nconst appendWatermark = (base64Url: string, markWidth: number) => {\n  if (containerRef.value && watermarkRef.value) {\n    stopObservation.value = true\n    watermarkRef.value.setAttribute(\n      'style',\n      getStyleStr({\n        ...getMarkStyle(),\n        backgroundImage: `url('${base64Url}')`,\n        backgroundSize: `${Math.floor(markWidth)}px`,\n      })\n    )\n    containerRef.value?.append(watermarkRef.value)\n    // Delayed execution\n    setTimeout(() => {\n      stopObservation.value = false\n    })\n  }\n}\n\n/**\n * Get the width and height of the watermark. The default values are as follows\n * Image: [120, 64]; Content: It's calculated by content;\n */\nconst getMarkSize = (ctx: CanvasRenderingContext2D) => {\n  let defaultWidth = 120\n  let defaultHeight = 64\n  const image = props.image\n  const content = props.content\n  const width = props.width\n  const height = props.height\n  if (!image && ctx.measureText) {\n    ctx.font = `${Number(fontSize.value)}px ${fontFamily.value}`\n    const contents = isArray(content) ? content : [content]\n    const sizes = contents.map((item) => {\n      const metrics = ctx.measureText(item!)\n\n      return [\n        metrics.width,\n        // Using `actualBoundingBoxAscent` to be compatible with lower version browsers (eg: Firefox < 116)\n        metrics.fontBoundingBoxAscent !== undefined\n          ? metrics.fontBoundingBoxAscent + metrics.fontBoundingBoxDescent\n          : metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent,\n      ]\n    })\n    defaultWidth = Math.ceil(Math.max(...sizes.map((size) => size[0])))\n    defaultHeight =\n      Math.ceil(Math.max(...sizes.map((size) => size[1]))) * contents.length +\n      (contents.length - 1) * FontGap\n  }\n  return [width ?? defaultWidth, height ?? defaultHeight] as const\n}\n\nconst getClips = useClips()\n\nconst renderWatermark = () => {\n  const canvas = document.createElement('canvas')\n  const ctx = canvas.getContext('2d')\n  const image = props.image\n  const content = props.content\n  const rotate = props.rotate\n\n  if (ctx) {\n    if (!watermarkRef.value) {\n      watermarkRef.value = document.createElement('div')\n    }\n\n    const ratio = getPixelRatio()\n    const [markWidth, markHeight] = getMarkSize(ctx)\n\n    const drawCanvas = (\n      drawContent?: NonNullable<WatermarkProps['content']> | HTMLImageElement\n    ) => {\n      const [textClips, clipWidth] = getClips(\n        drawContent || '',\n        rotate,\n        ratio,\n        markWidth,\n        markHeight,\n        {\n          color: color.value,\n          fontSize: fontSize.value,\n          fontStyle: fontStyle.value,\n          fontWeight: fontWeight.value,\n          fontFamily: fontFamily.value,\n          textAlign: textAlign.value,\n          textBaseline: textBaseline.value,\n        },\n        gapX.value,\n        gapY.value\n      )\n\n      appendWatermark(textClips, clipWidth)\n    }\n\n    if (image) {\n      const img = new Image()\n      img.onload = () => {\n        drawCanvas(img)\n      }\n      img.onerror = () => {\n        drawCanvas(content)\n      }\n      img.crossOrigin = 'anonymous'\n      img.referrerPolicy = 'no-referrer'\n      img.src = image\n    } else {\n      drawCanvas(content)\n    }\n  }\n}\n\nonMounted(() => {\n  renderWatermark()\n})\n\nwatch(\n  () => props,\n  () => {\n    renderWatermark()\n  },\n  {\n    deep: true,\n    flush: 'post',\n  }\n)\n\nonBeforeUnmount(() => {\n  destroyWatermark()\n})\n\nconst onMutate = (mutations: MutationRecord[]) => {\n  if (stopObservation.value) {\n    return\n  }\n  mutations.forEach((mutation) => {\n    if (reRendering(mutation, watermarkRef.value)) {\n      destroyWatermark()\n      renderWatermark()\n    }\n  })\n}\n\nuseMutationObserver(containerRef, onMutate, {\n  attributes: true,\n  subtree: true,\n  childList: true,\n})\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}