{"ast":null,"code":"import _objectSpread from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _defineProperty from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport { defineComponent, getCurrentInstance, ref, computed, unref, onMounted, onUpdated, onActivated, resolveDynamicComponent, h, Fragment, nextTick } from 'vue';\nimport { useEventListener, isClient } from '@vueuse/core';\nimport { useCache } from '../hooks/use-cache.mjs';\nimport useWheel from '../hooks/use-wheel.mjs';\nimport ScrollBar from '../components/scrollbar.mjs';\nimport { isHorizontal, getRTLOffsetType, getScrollDir } from '../utils.mjs';\nimport { virtualizedListProps } from '../props.mjs';\nimport { ITEM_RENDER_EVT, SCROLL_EVT, HORIZONTAL, RTL, RTL_OFFSET_POS_ASC, RTL_OFFSET_NAG, BACKWARD, FORWARD, AUTO_ALIGNMENT, RTL_OFFSET_POS_DESC } from '../defaults.mjs';\nimport { useNamespace } from '../../../../hooks/use-namespace/index.mjs';\nimport { isNumber } from '../../../../utils/types.mjs';\nimport { isString, hasOwn } from '@vue/shared';\nvar createList = function createList(_ref) {\n  var name = _ref.name,\n    getOffset = _ref.getOffset,\n    getItemSize = _ref.getItemSize,\n    getItemOffset = _ref.getItemOffset,\n    getEstimatedTotalSize = _ref.getEstimatedTotalSize,\n    getStartIndexForOffset = _ref.getStartIndexForOffset,\n    getStopIndexForStartIndex = _ref.getStopIndexForStartIndex,\n    initCache = _ref.initCache,\n    clearCache = _ref.clearCache,\n    validateProps = _ref.validateProps;\n  return defineComponent({\n    name: name != null ? name : \"ElVirtualList\",\n    props: virtualizedListProps,\n    emits: [ITEM_RENDER_EVT, SCROLL_EVT],\n    setup: function setup(props, _ref2) {\n      var emit = _ref2.emit,\n        expose = _ref2.expose;\n      validateProps(props);\n      var instance = getCurrentInstance();\n      var ns = useNamespace(\"vl\");\n      var dynamicSizeCache = ref(initCache(props, instance));\n      var getItemStyleCache = useCache();\n      var windowRef = ref();\n      var innerRef = ref();\n      var scrollbarRef = ref();\n      var states = ref({\n        isScrolling: false,\n        scrollDir: \"forward\",\n        scrollOffset: isNumber(props.initScrollOffset) ? props.initScrollOffset : 0,\n        updateRequested: false,\n        isScrollbarDragging: false,\n        scrollbarAlwaysOn: props.scrollbarAlwaysOn\n      });\n      var itemsToRender = computed(function () {\n        var total = props.total,\n          cache = props.cache;\n        var _unref = unref(states),\n          isScrolling = _unref.isScrolling,\n          scrollDir = _unref.scrollDir,\n          scrollOffset = _unref.scrollOffset;\n        if (total === 0) {\n          return [0, 0, 0, 0];\n        }\n        var startIndex = getStartIndexForOffset(props, scrollOffset, unref(dynamicSizeCache));\n        var stopIndex = getStopIndexForStartIndex(props, startIndex, scrollOffset, unref(dynamicSizeCache));\n        var cacheBackward = !isScrolling || scrollDir === BACKWARD ? Math.max(1, cache) : 1;\n        var cacheForward = !isScrolling || scrollDir === FORWARD ? Math.max(1, cache) : 1;\n        return [Math.max(0, startIndex - cacheBackward), Math.max(0, Math.min(total - 1, stopIndex + cacheForward)), startIndex, stopIndex];\n      });\n      var estimatedTotalSize = computed(function () {\n        return getEstimatedTotalSize(props, unref(dynamicSizeCache));\n      });\n      var _isHorizontal = computed(function () {\n        return isHorizontal(props.layout);\n      });\n      var windowStyle = computed(function () {\n        return [_defineProperty(_defineProperty(_defineProperty({\n          position: \"relative\"\n        }, \"overflow-\".concat(_isHorizontal.value ? \"x\" : \"y\"), \"scroll\"), \"WebkitOverflowScrolling\", \"touch\"), \"willChange\", \"transform\"), {\n          direction: props.direction,\n          height: isNumber(props.height) ? \"\".concat(props.height, \"px\") : props.height,\n          width: isNumber(props.width) ? \"\".concat(props.width, \"px\") : props.width\n        }, props.style];\n      });\n      var innerStyle = computed(function () {\n        var size = unref(estimatedTotalSize);\n        var horizontal = unref(_isHorizontal);\n        return {\n          height: horizontal ? \"100%\" : \"\".concat(size, \"px\"),\n          pointerEvents: unref(states).isScrolling ? \"none\" : void 0,\n          width: horizontal ? \"\".concat(size, \"px\") : \"100%\"\n        };\n      });\n      var clientSize = computed(function () {\n        return _isHorizontal.value ? props.width : props.height;\n      });\n      var _useWheel = useWheel({\n          atStartEdge: computed(function () {\n            return states.value.scrollOffset <= 0;\n          }),\n          atEndEdge: computed(function () {\n            return states.value.scrollOffset >= estimatedTotalSize.value;\n          }),\n          layout: computed(function () {\n            return props.layout;\n          })\n        }, function (offset) {\n          var _a, _b;\n          (_b = (_a = scrollbarRef.value).onMouseUp) == null ? void 0 : _b.call(_a);\n          scrollTo(Math.min(states.value.scrollOffset + offset, estimatedTotalSize.value - clientSize.value));\n        }),\n        onWheel = _useWheel.onWheel;\n      useEventListener(windowRef, \"wheel\", onWheel, {\n        passive: false\n      });\n      var emitEvents = function emitEvents() {\n        var total = props.total;\n        if (total > 0) {\n          var _unref2 = unref(itemsToRender),\n            _unref3 = _slicedToArray(_unref2, 4),\n            cacheStart = _unref3[0],\n            cacheEnd = _unref3[1],\n            visibleStart = _unref3[2],\n            visibleEnd = _unref3[3];\n          emit(ITEM_RENDER_EVT, cacheStart, cacheEnd, visibleStart, visibleEnd);\n        }\n        var _unref4 = unref(states),\n          scrollDir = _unref4.scrollDir,\n          scrollOffset = _unref4.scrollOffset,\n          updateRequested = _unref4.updateRequested;\n        emit(SCROLL_EVT, scrollDir, scrollOffset, updateRequested);\n      };\n      var scrollVertically = function scrollVertically(e) {\n        var _e$currentTarget = e.currentTarget,\n          clientHeight = _e$currentTarget.clientHeight,\n          scrollHeight = _e$currentTarget.scrollHeight,\n          scrollTop = _e$currentTarget.scrollTop;\n        var _states = unref(states);\n        if (_states.scrollOffset === scrollTop) {\n          return;\n        }\n        var scrollOffset = Math.max(0, Math.min(scrollTop, scrollHeight - clientHeight));\n        states.value = _objectSpread(_objectSpread({}, _states), {}, {\n          isScrolling: true,\n          scrollDir: getScrollDir(_states.scrollOffset, scrollOffset),\n          scrollOffset: scrollOffset,\n          updateRequested: false\n        });\n        nextTick(resetIsScrolling);\n      };\n      var scrollHorizontally = function scrollHorizontally(e) {\n        var _e$currentTarget2 = e.currentTarget,\n          clientWidth = _e$currentTarget2.clientWidth,\n          scrollLeft = _e$currentTarget2.scrollLeft,\n          scrollWidth = _e$currentTarget2.scrollWidth;\n        var _states = unref(states);\n        if (_states.scrollOffset === scrollLeft) {\n          return;\n        }\n        var direction = props.direction;\n        var scrollOffset = scrollLeft;\n        if (direction === RTL) {\n          switch (getRTLOffsetType()) {\n            case RTL_OFFSET_NAG:\n              {\n                scrollOffset = -scrollLeft;\n                break;\n              }\n            case RTL_OFFSET_POS_DESC:\n              {\n                scrollOffset = scrollWidth - clientWidth - scrollLeft;\n                break;\n              }\n          }\n        }\n        scrollOffset = Math.max(0, Math.min(scrollOffset, scrollWidth - clientWidth));\n        states.value = _objectSpread(_objectSpread({}, _states), {}, {\n          isScrolling: true,\n          scrollDir: getScrollDir(_states.scrollOffset, scrollOffset),\n          scrollOffset: scrollOffset,\n          updateRequested: false\n        });\n        nextTick(resetIsScrolling);\n      };\n      var onScroll = function onScroll(e) {\n        unref(_isHorizontal) ? scrollHorizontally(e) : scrollVertically(e);\n        emitEvents();\n      };\n      var onScrollbarScroll = function onScrollbarScroll(distanceToGo, totalSteps) {\n        var offset = (estimatedTotalSize.value - clientSize.value) / totalSteps * distanceToGo;\n        scrollTo(Math.min(estimatedTotalSize.value - clientSize.value, offset));\n      };\n      var scrollTo = function scrollTo(offset) {\n        offset = Math.max(offset, 0);\n        if (offset === unref(states).scrollOffset) {\n          return;\n        }\n        states.value = _objectSpread(_objectSpread({}, unref(states)), {}, {\n          scrollOffset: offset,\n          scrollDir: getScrollDir(unref(states).scrollOffset, offset),\n          updateRequested: true\n        });\n        nextTick(resetIsScrolling);\n      };\n      var scrollToItem = function scrollToItem(idx) {\n        var alignment = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : AUTO_ALIGNMENT;\n        var _unref5 = unref(states),\n          scrollOffset = _unref5.scrollOffset;\n        idx = Math.max(0, Math.min(idx, props.total - 1));\n        scrollTo(getOffset(props, idx, alignment, scrollOffset, unref(dynamicSizeCache)));\n      };\n      var getItemStyle = function getItemStyle(idx) {\n        var direction = props.direction,\n          itemSize = props.itemSize,\n          layout = props.layout;\n        var itemStyleCache = getItemStyleCache.value(clearCache && itemSize, clearCache && layout, clearCache && direction);\n        var style;\n        if (hasOwn(itemStyleCache, String(idx))) {\n          style = itemStyleCache[idx];\n        } else {\n          var offset = getItemOffset(props, idx, unref(dynamicSizeCache));\n          var size = getItemSize(props, idx, unref(dynamicSizeCache));\n          var horizontal = unref(_isHorizontal);\n          var isRtl = direction === RTL;\n          var offsetHorizontal = horizontal ? offset : 0;\n          itemStyleCache[idx] = style = {\n            position: \"absolute\",\n            left: isRtl ? void 0 : \"\".concat(offsetHorizontal, \"px\"),\n            right: isRtl ? \"\".concat(offsetHorizontal, \"px\") : void 0,\n            top: !horizontal ? \"\".concat(offset, \"px\") : 0,\n            height: !horizontal ? \"\".concat(size, \"px\") : \"100%\",\n            width: horizontal ? \"\".concat(size, \"px\") : \"100%\"\n          };\n        }\n        return style;\n      };\n      var resetIsScrolling = function resetIsScrolling() {\n        states.value.isScrolling = false;\n        nextTick(function () {\n          getItemStyleCache.value(-1, null, null);\n        });\n      };\n      var resetScrollTop = function resetScrollTop() {\n        var window = windowRef.value;\n        if (window) {\n          window.scrollTop = 0;\n        }\n      };\n      onMounted(function () {\n        if (!isClient) return;\n        var initScrollOffset = props.initScrollOffset;\n        var windowElement = unref(windowRef);\n        if (isNumber(initScrollOffset) && windowElement) {\n          if (unref(_isHorizontal)) {\n            windowElement.scrollLeft = initScrollOffset;\n          } else {\n            windowElement.scrollTop = initScrollOffset;\n          }\n        }\n        emitEvents();\n      });\n      onUpdated(function () {\n        var direction = props.direction,\n          layout = props.layout;\n        var _unref6 = unref(states),\n          scrollOffset = _unref6.scrollOffset,\n          updateRequested = _unref6.updateRequested;\n        var windowElement = unref(windowRef);\n        if (updateRequested && windowElement) {\n          if (layout === HORIZONTAL) {\n            if (direction === RTL) {\n              switch (getRTLOffsetType()) {\n                case RTL_OFFSET_NAG:\n                  {\n                    windowElement.scrollLeft = -scrollOffset;\n                    break;\n                  }\n                case RTL_OFFSET_POS_ASC:\n                  {\n                    windowElement.scrollLeft = scrollOffset;\n                    break;\n                  }\n                default:\n                  {\n                    var clientWidth = windowElement.clientWidth,\n                      scrollWidth = windowElement.scrollWidth;\n                    windowElement.scrollLeft = scrollWidth - clientWidth - scrollOffset;\n                    break;\n                  }\n              }\n            } else {\n              windowElement.scrollLeft = scrollOffset;\n            }\n          } else {\n            windowElement.scrollTop = scrollOffset;\n          }\n        }\n      });\n      onActivated(function () {\n        unref(windowRef).scrollTop = unref(states).scrollOffset;\n      });\n      var api = {\n        ns: ns,\n        clientSize: clientSize,\n        estimatedTotalSize: estimatedTotalSize,\n        windowStyle: windowStyle,\n        windowRef: windowRef,\n        innerRef: innerRef,\n        innerStyle: innerStyle,\n        itemsToRender: itemsToRender,\n        scrollbarRef: scrollbarRef,\n        states: states,\n        getItemStyle: getItemStyle,\n        onScroll: onScroll,\n        onScrollbarScroll: onScrollbarScroll,\n        onWheel: onWheel,\n        scrollTo: scrollTo,\n        scrollToItem: scrollToItem,\n        resetScrollTop: resetScrollTop\n      };\n      expose({\n        windowRef: windowRef,\n        innerRef: innerRef,\n        getItemStyleCache: getItemStyleCache,\n        scrollTo: scrollTo,\n        scrollToItem: scrollToItem,\n        resetScrollTop: resetScrollTop,\n        states: states\n      });\n      return api;\n    },\n    render: function render(ctx) {\n      var _a;\n      var $slots = ctx.$slots,\n        className = ctx.className,\n        clientSize = ctx.clientSize,\n        containerElement = ctx.containerElement,\n        data = ctx.data,\n        getItemStyle = ctx.getItemStyle,\n        innerElement = ctx.innerElement,\n        itemsToRender = ctx.itemsToRender,\n        innerStyle = ctx.innerStyle,\n        layout = ctx.layout,\n        total = ctx.total,\n        onScroll = ctx.onScroll,\n        onScrollbarScroll = ctx.onScrollbarScroll,\n        states = ctx.states,\n        useIsScrolling = ctx.useIsScrolling,\n        windowStyle = ctx.windowStyle,\n        ns = ctx.ns;\n      var _itemsToRender = _slicedToArray(itemsToRender, 2),\n        start = _itemsToRender[0],\n        end = _itemsToRender[1];\n      var Container = resolveDynamicComponent(containerElement);\n      var Inner = resolveDynamicComponent(innerElement);\n      var children = [];\n      if (total > 0) {\n        for (var i = start; i <= end; i++) {\n          children.push(h(Fragment, {\n            key: i\n          }, (_a = $slots[\"default\"]) == null ? void 0 : _a.call($slots, {\n            data: data,\n            index: i,\n            isScrolling: useIsScrolling ? states.isScrolling : void 0,\n            style: getItemStyle(i)\n          })));\n        }\n      }\n      var InnerNode = [h(Inner, {\n        style: innerStyle,\n        ref: \"innerRef\"\n      }, !isString(Inner) ? {\n        \"default\": function _default() {\n          return children;\n        }\n      } : children)];\n      var scrollbar = h(ScrollBar, {\n        ref: \"scrollbarRef\",\n        clientSize: clientSize,\n        layout: layout,\n        onScroll: onScrollbarScroll,\n        ratio: clientSize * 100 / this.estimatedTotalSize,\n        scrollFrom: states.scrollOffset / (this.estimatedTotalSize - clientSize),\n        total: total\n      });\n      var listContainer = h(Container, {\n        \"class\": [ns.e(\"window\"), className],\n        style: windowStyle,\n        onScroll: onScroll,\n        ref: \"windowRef\",\n        key: 0\n      }, !isString(Container) ? {\n        \"default\": function _default() {\n          return [InnerNode];\n        }\n      } : [InnerNode]);\n      return h(\"div\", {\n        key: 0,\n        \"class\": [ns.e(\"wrapper\"), states.scrollbarAlwaysOn ? \"always-on\" : \"\"]\n      }, [listContainer, scrollbar]);\n    }\n  });\n};\nexport { createList as default };","map":{"version":3,"names":["createList","_ref","name","getOffset","getItemSize","getItemOffset","getEstimatedTotalSize","getStartIndexForOffset","getStopIndexForStartIndex","initCache","clearCache","validateProps","defineComponent","props","virtualizedListProps","emits","ITEM_RENDER_EVT","SCROLL_EVT","setup","_ref2","emit","expose","instance","getCurrentInstance","ns","useNamespace","dynamicSizeCache","ref","getItemStyleCache","useCache","windowRef","innerRef","scrollbarRef","states","isScrolling","scrollDir","scrollOffset","isNumber","initScrollOffset","updateRequested","isScrollbarDragging","scrollbarAlwaysOn","itemsToRender","computed","total","cache","_unref","unref","startIndex","stopIndex","cacheBackward","BACKWARD","Math","max","cacheForward","FORWARD","min","estimatedTotalSize","_isHorizontal","isHorizontal","layout","windowStyle","_defineProperty","position","concat","value","direction","height","width","style","innerStyle","size","horizontal","pointerEvents","clientSize","_useWheel","useWheel","atStartEdge","atEndEdge","offset","_a","_b","onMouseUp","call","scrollTo","onWheel","useEventListener","passive","emitEvents","_unref2","_unref3","_slicedToArray","cacheStart","cacheEnd","visibleStart","visibleEnd","_unref4","scrollVertically","e","_e$currentTarget","currentTarget","clientHeight","scrollHeight","scrollTop","_states","_objectSpread","getScrollDir","nextTick","resetIsScrolling","scrollHorizontally","_e$currentTarget2","clientWidth","scrollLeft","scrollWidth","RTL","getRTLOffsetType","RTL_OFFSET_NAG","RTL_OFFSET_POS_DESC","onScroll","onScrollbarScroll","distanceToGo","totalSteps","scrollToItem","idx","alignment","arguments","length","undefined","AUTO_ALIGNMENT","_unref5","getItemStyle","itemSize","itemStyleCache","hasOwn","String","isRtl","offsetHorizontal","left","right","top","resetScrollTop","window","onMounted","isClient","windowElement","onUpdated","_unref6","HORIZONTAL","RTL_OFFSET_POS_ASC","onActivated","api","render","ctx","$slots","className","containerElement","data","innerElement","useIsScrolling","_itemsToRender","start","end","Container","resolveDynamicComponent","Inner","children","i","push","h","Fragment","key","index","InnerNode","isString","default","scrollbar","ScrollBar","ratio","scrollFrom","listContainer"],"sources":["../../../../../../../packages/components/virtual-list/src/builders/build-list.ts"],"sourcesContent":["import {\n  Fragment,\n  computed,\n  defineComponent,\n  getCurrentInstance,\n  h,\n  nextTick,\n  onActivated,\n  onMounted,\n  onUpdated,\n  ref,\n  resolveDynamicComponent,\n  unref,\n} from 'vue'\nimport { useEventListener } from '@vueuse/core'\nimport { hasOwn, isClient, isNumber, isString } from '@element-plus/utils'\nimport { useNamespace } from '@element-plus/hooks'\nimport { useCache } from '../hooks/use-cache'\nimport useWheel from '../hooks/use-wheel'\nimport Scrollbar from '../components/scrollbar'\nimport { getRTLOffsetType, getScrollDir, isHorizontal } from '../utils'\nimport { virtualizedListProps } from '../props'\nimport {\n  AUTO_ALIGNMENT,\n  BACKWARD,\n  FORWARD,\n  HORIZONTAL,\n  ITEM_RENDER_EVT,\n  RTL,\n  RTL_OFFSET_NAG,\n  RTL_OFFSET_POS_ASC,\n  RTL_OFFSET_POS_DESC,\n  SCROLL_EVT,\n} from '../defaults'\n\nimport type { CSSProperties, Slot, VNode, VNodeChild } from 'vue'\nimport type { Alignment, ListConstructorProps } from '../types'\nimport type { VirtualizedListProps } from '../props'\n\nconst createList = ({\n  name,\n  getOffset,\n  getItemSize,\n  getItemOffset,\n  getEstimatedTotalSize,\n  getStartIndexForOffset,\n  getStopIndexForStartIndex,\n  initCache,\n  clearCache,\n  validateProps,\n}: ListConstructorProps<VirtualizedListProps>) => {\n  return defineComponent({\n    name: name ?? 'ElVirtualList',\n    props: virtualizedListProps,\n    emits: [ITEM_RENDER_EVT, SCROLL_EVT],\n    setup(props, { emit, expose }) {\n      validateProps(props)\n      const instance = getCurrentInstance()!\n\n      const ns = useNamespace('vl')\n\n      const dynamicSizeCache = ref(initCache(props, instance))\n\n      const getItemStyleCache = useCache<CSSProperties>()\n      // refs\n      // here windowRef and innerRef can be type of HTMLElement\n      // or user defined component type, depends on the type passed\n      // by user\n      const windowRef = ref<HTMLElement>()\n      const innerRef = ref<HTMLElement>()\n      const scrollbarRef = ref()\n      const states = ref({\n        isScrolling: false,\n        scrollDir: 'forward',\n        scrollOffset: isNumber(props.initScrollOffset)\n          ? props.initScrollOffset\n          : 0,\n        updateRequested: false,\n        isScrollbarDragging: false,\n        scrollbarAlwaysOn: props.scrollbarAlwaysOn,\n      })\n\n      // computed\n      const itemsToRender = computed(() => {\n        const { total, cache } = props\n        const { isScrolling, scrollDir, scrollOffset } = unref(states)\n\n        if (total === 0) {\n          return [0, 0, 0, 0]\n        }\n\n        const startIndex = getStartIndexForOffset(\n          props,\n          scrollOffset,\n          unref(dynamicSizeCache)\n        )\n        const stopIndex = getStopIndexForStartIndex(\n          props,\n          startIndex,\n          scrollOffset,\n          unref(dynamicSizeCache)\n        )\n\n        const cacheBackward =\n          !isScrolling || scrollDir === BACKWARD ? Math.max(1, cache) : 1\n        const cacheForward =\n          !isScrolling || scrollDir === FORWARD ? Math.max(1, cache) : 1\n\n        return [\n          Math.max(0, startIndex - cacheBackward),\n          Math.max(0, Math.min(total! - 1, stopIndex + cacheForward)),\n          startIndex,\n          stopIndex,\n        ]\n      })\n\n      const estimatedTotalSize = computed(() =>\n        getEstimatedTotalSize(props, unref(dynamicSizeCache))\n      )\n\n      const _isHorizontal = computed(() => isHorizontal(props.layout))\n\n      const windowStyle = computed(() => [\n        {\n          position: 'relative',\n          [`overflow-${_isHorizontal.value ? 'x' : 'y'}`]: 'scroll',\n          WebkitOverflowScrolling: 'touch',\n          willChange: 'transform',\n        },\n        {\n          direction: props.direction,\n          height: isNumber(props.height) ? `${props.height}px` : props.height,\n          width: isNumber(props.width) ? `${props.width}px` : props.width,\n        },\n        props.style,\n      ])\n\n      const innerStyle = computed(() => {\n        const size = unref(estimatedTotalSize)\n        const horizontal = unref(_isHorizontal)\n        return {\n          height: horizontal ? '100%' : `${size}px`,\n          pointerEvents: unref(states).isScrolling ? 'none' : undefined,\n          width: horizontal ? `${size}px` : '100%',\n        }\n      })\n\n      const clientSize = computed(() =>\n        _isHorizontal.value ? props.width : props.height\n      )\n\n      // methods\n      const { onWheel } = useWheel(\n        {\n          atStartEdge: computed(() => states.value.scrollOffset <= 0),\n          atEndEdge: computed(\n            () => states.value.scrollOffset >= estimatedTotalSize.value\n          ),\n          layout: computed(() => props.layout),\n        },\n        (offset) => {\n          ;(\n            scrollbarRef.value as any as {\n              onMouseUp: () => void\n            }\n          ).onMouseUp?.()\n          scrollTo(\n            Math.min(\n              states.value.scrollOffset + offset,\n              estimatedTotalSize.value - (clientSize.value as number)\n            )\n          )\n        }\n      )\n\n      useEventListener(windowRef, 'wheel', onWheel, {\n        passive: false,\n      })\n\n      const emitEvents = () => {\n        const { total } = props\n\n        if (total! > 0) {\n          const [cacheStart, cacheEnd, visibleStart, visibleEnd] =\n            unref(itemsToRender)\n          emit(ITEM_RENDER_EVT, cacheStart, cacheEnd, visibleStart, visibleEnd)\n        }\n\n        const { scrollDir, scrollOffset, updateRequested } = unref(states)\n        emit(SCROLL_EVT, scrollDir, scrollOffset, updateRequested)\n      }\n\n      const scrollVertically = (e: Event) => {\n        const { clientHeight, scrollHeight, scrollTop } =\n          e.currentTarget as HTMLElement\n        const _states = unref(states)\n        if (_states.scrollOffset === scrollTop) {\n          return\n        }\n\n        const scrollOffset = Math.max(\n          0,\n          Math.min(scrollTop, scrollHeight - clientHeight)\n        )\n\n        states.value = {\n          ..._states,\n          isScrolling: true,\n          scrollDir: getScrollDir(_states.scrollOffset, scrollOffset),\n          scrollOffset,\n          updateRequested: false,\n        }\n\n        nextTick(resetIsScrolling)\n      }\n\n      const scrollHorizontally = (e: Event) => {\n        const { clientWidth, scrollLeft, scrollWidth } =\n          e.currentTarget as HTMLElement\n        const _states = unref(states)\n\n        if (_states.scrollOffset === scrollLeft) {\n          return\n        }\n\n        const { direction } = props\n\n        let scrollOffset = scrollLeft\n\n        if (direction === RTL) {\n          // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\n          // This is not the case for all browsers though (e.g. Chrome reports values as positive, measured relative to the left).\n          // It's also easier for this component if we convert offsets to the same format as they would be in for ltr.\n          // So the simplest solution is to determine which browser behavior we're dealing with, and convert based on it.\n          switch (getRTLOffsetType()) {\n            case RTL_OFFSET_NAG: {\n              scrollOffset = -scrollLeft\n              break\n            }\n            case RTL_OFFSET_POS_DESC: {\n              scrollOffset = scrollWidth - clientWidth - scrollLeft\n              break\n            }\n          }\n        }\n\n        scrollOffset = Math.max(\n          0,\n          Math.min(scrollOffset, scrollWidth - clientWidth)\n        )\n\n        states.value = {\n          ..._states,\n          isScrolling: true,\n          scrollDir: getScrollDir(_states.scrollOffset, scrollOffset),\n          scrollOffset,\n          updateRequested: false,\n        }\n\n        nextTick(resetIsScrolling)\n      }\n\n      const onScroll = (e: Event) => {\n        unref(_isHorizontal) ? scrollHorizontally(e) : scrollVertically(e)\n        emitEvents()\n      }\n\n      const onScrollbarScroll = (distanceToGo: number, totalSteps: number) => {\n        const offset =\n          ((estimatedTotalSize.value - (clientSize.value as number)) /\n            totalSteps) *\n          distanceToGo\n        scrollTo(\n          Math.min(\n            estimatedTotalSize.value - (clientSize.value as number),\n            offset\n          )\n        )\n      }\n\n      const scrollTo = (offset: number) => {\n        offset = Math.max(offset, 0)\n\n        if (offset === unref(states).scrollOffset) {\n          return\n        }\n\n        states.value = {\n          ...unref(states),\n          scrollOffset: offset,\n          scrollDir: getScrollDir(unref(states).scrollOffset, offset),\n          updateRequested: true,\n        }\n\n        nextTick(resetIsScrolling)\n      }\n\n      const scrollToItem = (\n        idx: number,\n        alignment: Alignment = AUTO_ALIGNMENT\n      ) => {\n        const { scrollOffset } = unref(states)\n\n        idx = Math.max(0, Math.min(idx, props.total! - 1))\n        scrollTo(\n          getOffset(\n            props,\n            idx,\n            alignment,\n            scrollOffset,\n            unref(dynamicSizeCache)\n          )\n        )\n      }\n\n      const getItemStyle = (idx: number) => {\n        const { direction, itemSize, layout } = props\n\n        const itemStyleCache = getItemStyleCache.value(\n          clearCache && itemSize,\n          clearCache && layout,\n          clearCache && direction\n        )\n\n        let style: CSSProperties\n        if (hasOwn(itemStyleCache, String(idx))) {\n          style = itemStyleCache[idx]\n        } else {\n          const offset = getItemOffset(props, idx, unref(dynamicSizeCache))\n          const size = getItemSize(props, idx, unref(dynamicSizeCache))\n          const horizontal = unref(_isHorizontal)\n\n          const isRtl = direction === RTL\n          const offsetHorizontal = horizontal ? offset : 0\n          itemStyleCache[idx] = style = {\n            position: 'absolute',\n            left: isRtl ? undefined : `${offsetHorizontal}px`,\n            right: isRtl ? `${offsetHorizontal}px` : undefined,\n            top: !horizontal ? `${offset}px` : 0,\n            height: !horizontal ? `${size}px` : '100%',\n            width: horizontal ? `${size}px` : '100%',\n          }\n        }\n\n        return style\n      }\n\n      // TODO:\n      // perf optimization here, reset isScrolling with debounce.\n\n      const resetIsScrolling = () => {\n        // timer = null\n\n        states.value.isScrolling = false\n        nextTick(() => {\n          getItemStyleCache.value(-1, null, null)\n        })\n      }\n\n      const resetScrollTop = () => {\n        const window = windowRef.value\n        if (window) {\n          window.scrollTop = 0\n        }\n      }\n\n      // life cycles\n      onMounted(() => {\n        if (!isClient) return\n        const { initScrollOffset } = props\n        const windowElement = unref(windowRef)\n        if (isNumber(initScrollOffset) && windowElement) {\n          if (unref(_isHorizontal)) {\n            windowElement.scrollLeft = initScrollOffset\n          } else {\n            windowElement.scrollTop = initScrollOffset\n          }\n        }\n\n        emitEvents()\n      })\n\n      onUpdated(() => {\n        const { direction, layout } = props\n        const { scrollOffset, updateRequested } = unref(states)\n        const windowElement = unref(windowRef)\n\n        if (updateRequested && windowElement) {\n          if (layout === HORIZONTAL) {\n            if (direction === RTL) {\n              // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\n              // This is not the case for all browsers though (e.g. Chrome reports values as positive, measured relative to the left).\n              // So we need to determine which browser behavior we're dealing with, and mimic it.\n              switch (getRTLOffsetType()) {\n                case RTL_OFFSET_NAG: {\n                  windowElement.scrollLeft = -scrollOffset\n                  break\n                }\n                case RTL_OFFSET_POS_ASC: {\n                  windowElement.scrollLeft = scrollOffset\n                  break\n                }\n                default: {\n                  const { clientWidth, scrollWidth } = windowElement\n                  windowElement.scrollLeft =\n                    scrollWidth - clientWidth - scrollOffset\n                  break\n                }\n              }\n            } else {\n              windowElement.scrollLeft = scrollOffset\n            }\n          } else {\n            windowElement.scrollTop = scrollOffset\n          }\n        }\n      })\n\n      onActivated(() => {\n        unref(windowRef)!.scrollTop = unref(states).scrollOffset\n      })\n\n      const api = {\n        ns,\n        clientSize,\n        estimatedTotalSize,\n        windowStyle,\n        windowRef,\n        innerRef,\n        innerStyle,\n        itemsToRender,\n        scrollbarRef,\n        states,\n        getItemStyle,\n        onScroll,\n        onScrollbarScroll,\n        onWheel,\n        scrollTo,\n        scrollToItem,\n        resetScrollTop,\n      }\n\n      expose({\n        windowRef,\n        innerRef,\n        getItemStyleCache,\n        scrollTo,\n        scrollToItem,\n        resetScrollTop,\n        states,\n      })\n\n      return api\n    },\n\n    render(ctx: any) {\n      const {\n        $slots,\n        className,\n        clientSize,\n        containerElement,\n        data,\n        getItemStyle,\n        innerElement,\n        itemsToRender,\n        innerStyle,\n        layout,\n        total,\n        onScroll,\n        onScrollbarScroll,\n        states,\n        useIsScrolling,\n        windowStyle,\n        ns,\n      } = ctx\n\n      const [start, end] = itemsToRender\n\n      const Container = resolveDynamicComponent(containerElement)\n      const Inner = resolveDynamicComponent(innerElement)\n\n      const children = [] as VNodeChild[]\n\n      if (total > 0) {\n        for (let i = start; i <= end; i++) {\n          children.push(\n            h(\n              Fragment,\n              { key: i },\n              ($slots.default as Slot)?.({\n                data,\n                index: i,\n                isScrolling: useIsScrolling ? states.isScrolling : undefined,\n                style: getItemStyle(i),\n              })\n            )\n          )\n        }\n      }\n\n      const InnerNode = [\n        h(\n          Inner as VNode,\n          {\n            style: innerStyle,\n            ref: 'innerRef',\n          },\n          !isString(Inner)\n            ? {\n                default: () => children,\n              }\n            : children\n        ),\n      ]\n\n      const scrollbar = h(Scrollbar, {\n        ref: 'scrollbarRef',\n        clientSize,\n        layout,\n        onScroll: onScrollbarScroll,\n        ratio: (clientSize * 100) / this.estimatedTotalSize,\n        scrollFrom:\n          states.scrollOffset / (this.estimatedTotalSize - clientSize),\n        total,\n      })\n\n      const listContainer = h(\n        Container as VNode,\n        {\n          class: [ns.e('window'), className],\n          style: windowStyle,\n          onScroll,\n          ref: 'windowRef',\n          key: 0,\n        },\n        !isString(Container) ? { default: () => [InnerNode] } : [InnerNode]\n      )\n\n      return h(\n        'div',\n        {\n          key: 0,\n          class: [ns.e('wrapper'), states.scrollbarAlwaysOn ? 'always-on' : ''],\n        },\n        [listContainer, scrollbar]\n      )\n    },\n  })\n}\n\nexport default createList\n"],"mappings":";;;;;;;;;;;;;;;;AAkCK,IAACA,UAAU,GAAG,SAAbA,UAAUA,CAAAC,IAAA,EAWV;EAAA,IAVJC,IAAI,GAAAD,IAAA,CAAJC,IAAI;IACJC,SAAS,GAAAF,IAAA,CAATE,SAAS;IACTC,WAAW,GAAAH,IAAA,CAAXG,WAAW;IACXC,aAAa,GAAAJ,IAAA,CAAbI,aAAa;IACbC,qBAAqB,GAAAL,IAAA,CAArBK,qBAAqB;IACrBC,sBAAsB,GAAAN,IAAA,CAAtBM,sBAAsB;IACtBC,yBAAyB,GAAAP,IAAA,CAAzBO,yBAAyB;IACzBC,SAAS,GAAAR,IAAA,CAATQ,SAAS;IACTC,UAAU,GAAAT,IAAA,CAAVS,UAAU;IACVC,aAAa,GAAAV,IAAA,CAAbU,aAAa;EAEb,OAAOC,eAAe,CAAC;IACrBV,IAAI,EAAEA,IAAI,IAAI,IAAI,GAAGA,IAAI,GAAG,eAAe;IAC3CW,KAAK,EAAEC,oBAAoB;IAC3BC,KAAK,EAAE,CAACC,eAAe,EAAEC,UAAU,CAAC;IACpCC,KAAK,WAALA,KAAKA,CAACL,KAAK,EAAAM,KAAA,EAAoB;MAAA,IAAhBC,IAAI,GAAAD,KAAA,CAAJC,IAAI;QAAEC,MAAM,GAAAF,KAAA,CAANE,MAAM;MACzBV,aAAa,CAACE,KAAK,CAAC;MACpB,IAAMS,QAAQ,GAAGC,kBAAkB,EAAE;MACrC,IAAMC,EAAE,GAAGC,YAAY,CAAC,IAAI,CAAC;MAC7B,IAAMC,gBAAgB,GAAGC,GAAG,CAAClB,SAAS,CAACI,KAAK,EAAES,QAAQ,CAAC,CAAC;MACxD,IAAMM,iBAAiB,GAAGC,QAAQ,EAAE;MACpC,IAAMC,SAAS,GAAGH,GAAG,EAAE;MACvB,IAAMI,QAAQ,GAAGJ,GAAG,EAAE;MACtB,IAAMK,YAAY,GAAGL,GAAG,EAAE;MAC1B,IAAMM,MAAM,GAAGN,GAAG,CAAC;QACjBO,WAAW,EAAE,KAAK;QAClBC,SAAS,EAAE,SAAS;QACpBC,YAAY,EAAEC,QAAQ,CAACxB,KAAK,CAACyB,gBAAgB,CAAC,GAAGzB,KAAK,CAACyB,gBAAgB,GAAG,CAAC;QAC3EC,eAAe,EAAE,KAAK;QACtBC,mBAAmB,EAAE,KAAK;QAC1BC,iBAAiB,EAAE5B,KAAK,CAAC4B;MACjC,CAAO,CAAC;MACF,IAAMC,aAAa,GAAGC,QAAQ,CAAC,YAAM;QACnC,IAAQC,KAAK,GAAY/B,KAAK,CAAtB+B,KAAK;UAAEC,KAAK,GAAKhC,KAAK,CAAfgC,KAAK;QACpB,IAAAC,MAAA,GAAiDC,KAAK,CAACd,MAAM,CAAC;UAAtDC,WAAW,GAAAY,MAAA,CAAXZ,WAAW;UAAEC,SAAS,GAAAW,MAAA,CAATX,SAAS;UAAEC,YAAY,GAAAU,MAAA,CAAZV,YAAY;QAC5C,IAAIQ,KAAK,KAAK,CAAC,EAAE;UACf,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QAC7B;QACQ,IAAMI,UAAU,GAAGzC,sBAAsB,CAACM,KAAK,EAAEuB,YAAY,EAAEW,KAAK,CAACrB,gBAAgB,CAAC,CAAC;QACvF,IAAMuB,SAAS,GAAGzC,yBAAyB,CAACK,KAAK,EAAEmC,UAAU,EAAEZ,YAAY,EAAEW,KAAK,CAACrB,gBAAgB,CAAC,CAAC;QACrG,IAAMwB,aAAa,GAAG,CAAChB,WAAW,IAAIC,SAAS,KAAKgB,QAAQ,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAER,KAAK,CAAC,GAAG,CAAC;QACrF,IAAMS,YAAY,GAAG,CAACpB,WAAW,IAAIC,SAAS,KAAKoB,OAAO,GAAGH,IAAI,CAACC,GAAG,CAAC,CAAC,EAAER,KAAK,CAAC,GAAG,CAAC;QACnF,OAAO,CACLO,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEL,UAAU,GAAGE,aAAa,CAAC,EACvCE,IAAI,CAACC,GAAG,CAAC,CAAC,EAAED,IAAI,CAACI,GAAG,CAACZ,KAAK,GAAG,CAAC,EAAEK,SAAS,GAAGK,YAAY,CAAC,CAAC,EAC1DN,UAAU,EACVC,SAAS,CACV;MACT,CAAO,CAAC;MACF,IAAMQ,kBAAkB,GAAGd,QAAQ,CAAC;QAAA,OAAMrC,qBAAqB,CAACO,KAAK,EAAEkC,KAAK,CAACrB,gBAAgB,CAAC,CAAC;MAAA,EAAC;MAChG,IAAMgC,aAAa,GAAGf,QAAQ,CAAC;QAAA,OAAMgB,YAAY,CAAC9C,KAAK,CAAC+C,MAAM,CAAC;MAAA,EAAC;MAChE,IAAMC,WAAW,GAAGlB,QAAQ,CAAC;QAAA,OAAM,CAAAmB,eAAA,CAAAA,eAAA,CAAAA,eAAA;UAE/BC,QAAQ,EAAE;QAAU,eAAAC,MAAA,CACPN,aAAa,CAACO,KAAK,GAAG,GAAG,GAAG,GAAG,GAAK,QAAQ,8BAChC,OAAO,iBACpB,WAAW,GAEzB;UACEC,SAAS,EAAErD,KAAK,CAACqD,SAAS;UAC1BC,MAAM,EAAE9B,QAAQ,CAACxB,KAAK,CAACsD,MAAM,CAAC,MAAAH,MAAA,CAAMnD,KAAK,CAACsD,MAAM,UAAOtD,KAAK,CAACsD,MAAM;UACnEC,KAAK,EAAE/B,QAAQ,CAACxB,KAAK,CAACuD,KAAK,CAAC,MAAAJ,MAAA,CAAMnD,KAAK,CAACuD,KAAK,UAAOvD,KAAK,CAACuD;QACpE,CAAS,EACDvD,KAAK,CAACwD,KAAK,CACZ;MAAA,EAAC;MACF,IAAMC,UAAU,GAAG3B,QAAQ,CAAC,YAAM;QAChC,IAAM4B,IAAI,GAAGxB,KAAK,CAACU,kBAAkB,CAAC;QACtC,IAAMe,UAAU,GAAGzB,KAAK,CAACW,aAAa,CAAC;QACvC,OAAO;UACLS,MAAM,EAAEK,UAAU,GAAG,MAAM,MAAAR,MAAA,CAAMO,IAAI,OAAI;UACzCE,aAAa,EAAE1B,KAAK,CAACd,MAAM,CAAC,CAACC,WAAW,GAAG,MAAM,GAAG,KAAK,CAAC;UAC1DkC,KAAK,EAAEI,UAAU,MAAAR,MAAA,CAAMO,IAAI,UAAO;QAC5C,CAAS;MACT,CAAO,CAAC;MACF,IAAMG,UAAU,GAAG/B,QAAQ,CAAC;QAAA,OAAMe,aAAa,CAACO,KAAK,GAAGpD,KAAK,CAACuD,KAAK,GAAGvD,KAAK,CAACsD,MAAM;MAAA,EAAC;MACnF,IAAAQ,SAAA,GAAoBC,QAAQ,CAAC;UAC3BC,WAAW,EAAElC,QAAQ,CAAC;YAAA,OAAMV,MAAM,CAACgC,KAAK,CAAC7B,YAAY,IAAI,CAAC;UAAA,EAAC;UAC3D0C,SAAS,EAAEnC,QAAQ,CAAC;YAAA,OAAMV,MAAM,CAACgC,KAAK,CAAC7B,YAAY,IAAIqB,kBAAkB,CAACQ,KAAK;UAAA,EAAC;UAChFL,MAAM,EAAEjB,QAAQ,CAAC;YAAA,OAAM9B,KAAK,CAAC+C,MAAM;UAAA;QAC3C,CAAO,EAAE,UAACmB,MAAM,EAAK;UACb,IAAIC,EAAE,EAAEC,EAAE;UAEV,CAACA,EAAE,GAAG,CAACD,EAAE,GAAGhD,YAAY,CAACiC,KAAK,EAAEiB,SAAS,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGD,EAAE,CAACE,IAAI,CAACH,EAAE,CAAC;UACzEI,QAAQ,CAAChC,IAAI,CAACI,GAAG,CAACvB,MAAM,CAACgC,KAAK,CAAC7B,YAAY,GAAG2C,MAAM,EAAEtB,kBAAkB,CAACQ,KAAK,GAAGS,UAAU,CAACT,KAAK,CAAC,CAAC;QAC3G,CAAO,CAAC;QATMoB,OAAO,GAAAV,SAAA,CAAPU,OAAO;MAUfC,gBAAgB,CAACxD,SAAS,EAAE,OAAO,EAAEuD,OAAO,EAAE;QAC5CE,OAAO,EAAE;MACjB,CAAO,CAAC;MACF,IAAMC,UAAU,GAAG,SAAbA,UAAUA,CAAA,EAAS;QACvB,IAAQ5C,KAAK,GAAK/B,KAAK,CAAf+B,KAAK;QACb,IAAIA,KAAK,GAAG,CAAC,EAAE;UACb,IAAA6C,OAAA,GAAyD1C,KAAK,CAACL,aAAa,CAAC;YAAAgD,OAAA,GAAAC,cAAA,CAAAF,OAAA;YAAtEG,UAAU,GAAAF,OAAA;YAAEG,QAAQ,GAAAH,OAAA;YAAEI,YAAY,GAAAJ,OAAA;YAAEK,UAAU,GAAAL,OAAA;UACrDtE,IAAI,CAACJ,eAAe,EAAE4E,UAAU,EAAEC,QAAQ,EAAEC,YAAY,EAAEC,UAAU,CAAC;QAC/E;QACQ,IAAAC,OAAA,GAAqDjD,KAAK,CAACd,MAAM,CAAC;UAA1DE,SAAS,GAAA6D,OAAA,CAAT7D,SAAS;UAAEC,YAAY,GAAA4D,OAAA,CAAZ5D,YAAY;UAAEG,eAAe,GAAAyD,OAAA,CAAfzD,eAAe;QAChDnB,IAAI,CAACH,UAAU,EAAEkB,SAAS,EAAEC,YAAY,EAAEG,eAAe,CAAC;MAClE,CAAO;MACD,IAAM0D,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAIC,CAAC,EAAK;QAC9B,IAAAC,gBAAA,GAAkDD,CAAC,CAACE,aAAa;UAAzDC,YAAY,GAAAF,gBAAA,CAAZE,YAAY;UAAEC,YAAY,GAAAH,gBAAA,CAAZG,YAAY;UAAEC,SAAS,GAAAJ,gBAAA,CAATI,SAAS;QAC7C,IAAMC,OAAO,GAAGzD,KAAK,CAACd,MAAM,CAAC;QAC7B,IAAIuE,OAAO,CAACpE,YAAY,KAAKmE,SAAS,EAAE;UACtC;QACV;QACQ,IAAMnE,YAAY,GAAGgB,IAAI,CAACC,GAAG,CAAC,CAAC,EAAED,IAAI,CAACI,GAAG,CAAC+C,SAAS,EAAED,YAAY,GAAGD,YAAY,CAAC,CAAC;QAClFpE,MAAM,CAACgC,KAAK,GAAAwC,aAAA,CAAAA,aAAA,KACPD,OAAO;UACVtE,WAAW,EAAE,IAAI;UACjBC,SAAS,EAAEuE,YAAY,CAACF,OAAO,CAACpE,YAAY,EAAEA,YAAY,CAAC;UAC3DA,YAAY,EAAZA,YAAY;UACZG,eAAe,EAAE;QAAK,EACvB;QACDoE,QAAQ,CAACC,gBAAgB,CAAC;MAClC,CAAO;MACD,IAAMC,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAIX,CAAC,EAAK;QAChC,IAAAY,iBAAA,GAAiDZ,CAAC,CAACE,aAAa;UAAxDW,WAAW,GAAAD,iBAAA,CAAXC,WAAW;UAAEC,UAAU,GAAAF,iBAAA,CAAVE,UAAU;UAAEC,WAAW,GAAAH,iBAAA,CAAXG,WAAW;QAC5C,IAAMT,OAAO,GAAGzD,KAAK,CAACd,MAAM,CAAC;QAC7B,IAAIuE,OAAO,CAACpE,YAAY,KAAK4E,UAAU,EAAE;UACvC;QACV;QACQ,IAAQ9C,SAAS,GAAKrD,KAAK,CAAnBqD,SAAS;QACjB,IAAI9B,YAAY,GAAG4E,UAAU;QAC7B,IAAI9C,SAAS,KAAKgD,GAAG,EAAE;UACrB,QAAQC,gBAAgB,EAAE;YACxB,KAAKC,cAAc;cAAE;gBACnBhF,YAAY,GAAG,CAAC4E,UAAU;gBAC1B;cACd;YACY,KAAKK,mBAAmB;cAAE;gBACxBjF,YAAY,GAAG6E,WAAW,GAAGF,WAAW,GAAGC,UAAU;gBACrD;cACd;UACA;QACA;QACQ5E,YAAY,GAAGgB,IAAI,CAACC,GAAG,CAAC,CAAC,EAAED,IAAI,CAACI,GAAG,CAACpB,YAAY,EAAE6E,WAAW,GAAGF,WAAW,CAAC,CAAC;QAC7E9E,MAAM,CAACgC,KAAK,GAAAwC,aAAA,CAAAA,aAAA,KACPD,OAAO;UACVtE,WAAW,EAAE,IAAI;UACjBC,SAAS,EAAEuE,YAAY,CAACF,OAAO,CAACpE,YAAY,EAAEA,YAAY,CAAC;UAC3DA,YAAY,EAAZA,YAAY;UACZG,eAAe,EAAE;QAAK,EACvB;QACDoE,QAAQ,CAACC,gBAAgB,CAAC;MAClC,CAAO;MACD,IAAMU,QAAQ,GAAG,SAAXA,QAAQA,CAAIpB,CAAC,EAAK;QACtBnD,KAAK,CAACW,aAAa,CAAC,GAAGmD,kBAAkB,CAACX,CAAC,CAAC,GAAGD,gBAAgB,CAACC,CAAC,CAAC;QAClEV,UAAU,EAAE;MACpB,CAAO;MACD,IAAM+B,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAIC,YAAY,EAAEC,UAAU,EAAK;QACtD,IAAM1C,MAAM,GAAG,CAACtB,kBAAkB,CAACQ,KAAK,GAAGS,UAAU,CAACT,KAAK,IAAIwD,UAAU,GAAGD,YAAY;QACxFpC,QAAQ,CAAChC,IAAI,CAACI,GAAG,CAACC,kBAAkB,CAACQ,KAAK,GAAGS,UAAU,CAACT,KAAK,EAAEc,MAAM,CAAC,CAAC;MAC/E,CAAO;MACD,IAAMK,QAAQ,GAAG,SAAXA,QAAQA,CAAIL,MAAM,EAAK;QAC3BA,MAAM,GAAG3B,IAAI,CAACC,GAAG,CAAC0B,MAAM,EAAE,CAAC,CAAC;QAC5B,IAAIA,MAAM,KAAKhC,KAAK,CAACd,MAAM,CAAC,CAACG,YAAY,EAAE;UACzC;QACV;QACQH,MAAM,CAACgC,KAAK,GAAAwC,aAAA,CAAAA,aAAA,KACP1D,KAAK,CAACd,MAAM,CAAC;UAChBG,YAAY,EAAE2C,MAAM;UACpB5C,SAAS,EAAEuE,YAAY,CAAC3D,KAAK,CAACd,MAAM,CAAC,CAACG,YAAY,EAAE2C,MAAM,CAAC;UAC3DxC,eAAe,EAAE;QAAI,EACtB;QACDoE,QAAQ,CAACC,gBAAgB,CAAC;MAClC,CAAO;MACD,IAAMc,YAAY,GAAG,SAAfA,YAAYA,CAAIC,GAAG,EAAiC;QAAA,IAA/BC,SAAS,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGG,cAAc;QACnD,IAAAC,OAAA,GAAyBlF,KAAK,CAACd,MAAM,CAAC;UAA9BG,YAAY,GAAA6F,OAAA,CAAZ7F,YAAY;QACpBuF,GAAG,GAAGvE,IAAI,CAACC,GAAG,CAAC,CAAC,EAAED,IAAI,CAACI,GAAG,CAACmE,GAAG,EAAE9G,KAAK,CAAC+B,KAAK,GAAG,CAAC,CAAC,CAAC;QACjDwC,QAAQ,CAACjF,SAAS,CAACU,KAAK,EAAE8G,GAAG,EAAEC,SAAS,EAAExF,YAAY,EAAEW,KAAK,CAACrB,gBAAgB,CAAC,CAAC,CAAC;MACzF,CAAO;MACD,IAAMwG,YAAY,GAAG,SAAfA,YAAYA,CAAIP,GAAG,EAAK;QAC5B,IAAQzD,SAAS,GAAuBrD,KAAK,CAArCqD,SAAS;UAAEiE,QAAQ,GAAatH,KAAK,CAA1BsH,QAAQ;UAAEvE,MAAM,GAAK/C,KAAK,CAAhB+C,MAAM;QACnC,IAAMwE,cAAc,GAAGxG,iBAAiB,CAACqC,KAAK,CAACvD,UAAU,IAAIyH,QAAQ,EAAEzH,UAAU,IAAIkD,MAAM,EAAElD,UAAU,IAAIwD,SAAS,CAAC;QACrH,IAAIG,KAAK;QACT,IAAIgE,MAAM,CAACD,cAAc,EAAEE,MAAM,CAACX,GAAG,CAAC,CAAC,EAAE;UACvCtD,KAAK,GAAG+D,cAAc,CAACT,GAAG,CAAC;QACrC,CAAS,MAAM;UACL,IAAM5C,MAAM,GAAG1E,aAAa,CAACQ,KAAK,EAAE8G,GAAG,EAAE5E,KAAK,CAACrB,gBAAgB,CAAC,CAAC;UACjE,IAAM6C,IAAI,GAAGnE,WAAW,CAACS,KAAK,EAAE8G,GAAG,EAAE5E,KAAK,CAACrB,gBAAgB,CAAC,CAAC;UAC7D,IAAM8C,UAAU,GAAGzB,KAAK,CAACW,aAAa,CAAC;UACvC,IAAM6E,KAAK,GAAGrE,SAAS,KAAKgD,GAAG;UAC/B,IAAMsB,gBAAgB,GAAGhE,UAAU,GAAGO,MAAM,GAAG,CAAC;UAChDqD,cAAc,CAACT,GAAG,CAAC,GAAGtD,KAAK,GAAG;YAC5BN,QAAQ,EAAE,UAAU;YACpB0E,IAAI,EAAEF,KAAK,GAAG,KAAK,CAAC,MAAAvE,MAAA,CAAMwE,gBAAgB,OAAI;YAC9CE,KAAK,EAAEH,KAAK,MAAAvE,MAAA,CAAMwE,gBAAgB,UAAO,KAAK,CAAC;YAC/CG,GAAG,EAAE,CAACnE,UAAU,MAAAR,MAAA,CAAMe,MAAM,UAAO,CAAC;YACpCZ,MAAM,EAAE,CAACK,UAAU,MAAAR,MAAA,CAAMO,IAAI,UAAO,MAAM;YAC1CH,KAAK,EAAEI,UAAU,MAAAR,MAAA,CAAMO,IAAI,UAAO;UAC9C,CAAW;QACX;QACQ,OAAOF,KAAK;MACpB,CAAO;MACD,IAAMuC,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAA,EAAS;QAC7B3E,MAAM,CAACgC,KAAK,CAAC/B,WAAW,GAAG,KAAK;QAChCyE,QAAQ,CAAC,YAAM;UACb/E,iBAAiB,CAACqC,KAAK,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC;QACjD,CAAS,CAAC;MACV,CAAO;MACD,IAAM2E,cAAc,GAAG,SAAjBA,cAAcA,CAAA,EAAS;QAC3B,IAAMC,MAAM,GAAG/G,SAAS,CAACmC,KAAK;QAC9B,IAAI4E,MAAM,EAAE;UACVA,MAAM,CAACtC,SAAS,GAAG,CAAC;QAC9B;MACA,CAAO;MACDuC,SAAS,CAAC,YAAM;QACd,IAAI,CAACC,QAAQ,EACX;QACF,IAAQzG,gBAAgB,GAAKzB,KAAK,CAA1ByB,gBAAgB;QACxB,IAAM0G,aAAa,GAAGjG,KAAK,CAACjB,SAAS,CAAC;QACtC,IAAIO,QAAQ,CAACC,gBAAgB,CAAC,IAAI0G,aAAa,EAAE;UAC/C,IAAIjG,KAAK,CAACW,aAAa,CAAC,EAAE;YACxBsF,aAAa,CAAChC,UAAU,GAAG1E,gBAAgB;UACvD,CAAW,MAAM;YACL0G,aAAa,CAACzC,SAAS,GAAGjE,gBAAgB;UACtD;QACA;QACQkD,UAAU,EAAE;MACpB,CAAO,CAAC;MACFyD,SAAS,CAAC,YAAM;QACd,IAAQ/E,SAAS,GAAarD,KAAK,CAA3BqD,SAAS;UAAEN,MAAM,GAAK/C,KAAK,CAAhB+C,MAAM;QACzB,IAAAsF,OAAA,GAA0CnG,KAAK,CAACd,MAAM,CAAC;UAA/CG,YAAY,GAAA8G,OAAA,CAAZ9G,YAAY;UAAEG,eAAe,GAAA2G,OAAA,CAAf3G,eAAe;QACrC,IAAMyG,aAAa,GAAGjG,KAAK,CAACjB,SAAS,CAAC;QACtC,IAAIS,eAAe,IAAIyG,aAAa,EAAE;UACpC,IAAIpF,MAAM,KAAKuF,UAAU,EAAE;YACzB,IAAIjF,SAAS,KAAKgD,GAAG,EAAE;cACrB,QAAQC,gBAAgB,EAAE;gBACxB,KAAKC,cAAc;kBAAE;oBACnB4B,aAAa,CAAChC,UAAU,GAAG,CAAC5E,YAAY;oBACxC;kBAClB;gBACgB,KAAKgH,kBAAkB;kBAAE;oBACvBJ,aAAa,CAAChC,UAAU,GAAG5E,YAAY;oBACvC;kBAClB;gBACgB;kBAAS;oBACP,IAAQ2E,WAAW,GAAkBiC,aAAa,CAA1CjC,WAAW;sBAAEE,WAAW,GAAK+B,aAAa,CAA7B/B,WAAW;oBAChC+B,aAAa,CAAChC,UAAU,GAAGC,WAAW,GAAGF,WAAW,GAAG3E,YAAY;oBACnE;kBAClB;cACA;YACA,CAAa,MAAM;cACL4G,aAAa,CAAChC,UAAU,GAAG5E,YAAY;YACrD;UACA,CAAW,MAAM;YACL4G,aAAa,CAACzC,SAAS,GAAGnE,YAAY;UAClD;QACA;MACA,CAAO,CAAC;MACFiH,WAAW,CAAC,YAAM;QAChBtG,KAAK,CAACjB,SAAS,CAAC,CAACyE,SAAS,GAAGxD,KAAK,CAACd,MAAM,CAAC,CAACG,YAAY;MAC/D,CAAO,CAAC;MACF,IAAMkH,GAAG,GAAG;QACV9H,EAAE,EAAFA,EAAE;QACFkD,UAAU,EAAVA,UAAU;QACVjB,kBAAkB,EAAlBA,kBAAkB;QAClBI,WAAW,EAAXA,WAAW;QACX/B,SAAS,EAATA,SAAS;QACTC,QAAQ,EAARA,QAAQ;QACRuC,UAAU,EAAVA,UAAU;QACV5B,aAAa,EAAbA,aAAa;QACbV,YAAY,EAAZA,YAAY;QACZC,MAAM,EAANA,MAAM;QACNiG,YAAY,EAAZA,YAAY;QACZZ,QAAQ,EAARA,QAAQ;QACRC,iBAAiB,EAAjBA,iBAAiB;QACjBlC,OAAO,EAAPA,OAAO;QACPD,QAAQ,EAARA,QAAQ;QACRsC,YAAY,EAAZA,YAAY;QACZkB,cAAc,EAAdA;MACR,CAAO;MACDvH,MAAM,CAAC;QACLS,SAAS,EAATA,SAAS;QACTC,QAAQ,EAARA,QAAQ;QACRH,iBAAiB,EAAjBA,iBAAiB;QACjBwD,QAAQ,EAARA,QAAQ;QACRsC,YAAY,EAAZA,YAAY;QACZkB,cAAc,EAAdA,cAAc;QACd3G,MAAM,EAANA;MACR,CAAO,CAAC;MACF,OAAOqH,GAAG;IAChB,CAAK;IACDC,MAAM,WAANA,MAAMA,CAACC,GAAG,EAAE;MACV,IAAIxE,EAAE;MACN,IACEyE,MAAM,GAiBJD,GAAG,CAjBLC,MAAM;QACNC,SAAS,GAgBPF,GAAG,CAhBLE,SAAS;QACThF,UAAU,GAeR8E,GAAG,CAfL9E,UAAU;QACViF,gBAAgB,GAcdH,GAAG,CAdLG,gBAAgB;QAChBC,IAAI,GAaFJ,GAAG,CAbLI,IAAI;QACJ1B,YAAY,GAYVsB,GAAG,CAZLtB,YAAY;QACZ2B,YAAY,GAWVL,GAAG,CAXLK,YAAY;QACZnH,aAAa,GAUX8G,GAAG,CAVL9G,aAAa;QACb4B,UAAU,GASRkF,GAAG,CATLlF,UAAU;QACVV,MAAM,GAQJ4F,GAAG,CARL5F,MAAM;QACNhB,KAAK,GAOH4G,GAAG,CAPL5G,KAAK;QACL0E,QAAQ,GAMNkC,GAAG,CANLlC,QAAQ;QACRC,iBAAiB,GAKfiC,GAAG,CALLjC,iBAAiB;QACjBtF,MAAM,GAIJuH,GAAG,CAJLvH,MAAM;QACN6H,cAAc,GAGZN,GAAG,CAHLM,cAAc;QACdjG,WAAW,GAET2F,GAAG,CAFL3F,WAAW;QACXrC,EAAE,GACAgI,GAAG,CADLhI,EAAE;MAEJ,IAAAuI,cAAA,GAAApE,cAAA,CAAqBjD,aAAa;QAA3BsH,KAAK,GAAAD,cAAA;QAAEE,GAAG,GAAAF,cAAA;MACjB,IAAMG,SAAS,GAAGC,uBAAuB,CAACR,gBAAgB,CAAC;MAC3D,IAAMS,KAAK,GAAGD,uBAAuB,CAACN,YAAY,CAAC;MACnD,IAAMQ,QAAQ,GAAG,EAAE;MACnB,IAAIzH,KAAK,GAAG,CAAC,EAAE;QACb,KAAK,IAAI0H,CAAC,GAAGN,KAAK,EAAEM,CAAC,IAAIL,GAAG,EAAEK,CAAC,EAAE,EAAE;UACjCD,QAAQ,CAACE,IAAI,CAACC,CAAC,CAACC,QAAQ,EAAE;YAAEC,GAAG,EAAEJ;UAAC,CAAE,EAAE,CAACtF,EAAE,GAAGyE,MAAM,WAAQ,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGzE,EAAE,CAACG,IAAI,CAACsE,MAAM,EAAE;YAC7FG,IAAI,EAAJA,IAAI;YACJe,KAAK,EAAEL,CAAC;YACRpI,WAAW,EAAE4H,cAAc,GAAG7H,MAAM,CAACC,WAAW,GAAG,KAAK,CAAC;YACzDmC,KAAK,EAAE6D,YAAY,CAACoC,CAAC;UACjC,CAAW,CAAC,CAAC,CAAC;QACd;MACA;MACM,IAAMM,SAAS,GAAG,CAChBJ,CAAC,CAACJ,KAAK,EAAE;QACP/F,KAAK,EAAEC,UAAU;QACjB3C,GAAG,EAAE;MACf,CAAS,EAAE,CAACkJ,QAAQ,CAACT,KAAK,CAAC,GAAG;QACpB,WAAS,SAATU,QAAOA,CAAA;UAAA,OAAQT,QAAQ;QAAA;MACjC,CAAS,GAAGA,QAAQ,CAAC,CACd;MACD,IAAMU,SAAS,GAAGP,CAAC,CAACQ,SAAS,EAAE;QAC7BrJ,GAAG,EAAE,cAAc;QACnB+C,UAAU,EAAVA,UAAU;QACVd,MAAM,EAANA,MAAM;QACN0D,QAAQ,EAAEC,iBAAiB;QAC3B0D,KAAK,EAAEvG,UAAU,GAAG,GAAG,GAAG,IAAI,CAACjB,kBAAkB;QACjDyH,UAAU,EAAEjJ,MAAM,CAACG,YAAY,IAAI,IAAI,CAACqB,kBAAkB,GAAGiB,UAAU,CAAC;QACxE9B,KAAK,EAALA;MACR,CAAO,CAAC;MACF,IAAMuI,aAAa,GAAGX,CAAC,CAACN,SAAS,EAAE;QACjC,SAAO,CAAC1I,EAAE,CAAC0E,CAAC,CAAC,QAAQ,CAAC,EAAEwD,SAAS,CAAC;QAClCrF,KAAK,EAAER,WAAW;QAClByD,QAAQ,EAARA,QAAQ;QACR3F,GAAG,EAAE,WAAW;QAChB+I,GAAG,EAAE;MACb,CAAO,EAAE,CAACG,QAAQ,CAACX,SAAS,CAAC,GAAG;QAAE,WAAS,SAATY,QAAOA,CAAA;UAAA,OAAQ,CAACF,SAAS,CAAC;QAAA;MAAA,CAAE,GAAG,CAACA,SAAS,CAAC,CAAC;MACvE,OAAOJ,CAAC,CAAC,KAAK,EAAE;QACdE,GAAG,EAAE,CAAC;QACN,SAAO,CAAClJ,EAAE,CAAC0E,CAAC,CAAC,SAAS,CAAC,EAAEjE,MAAM,CAACQ,iBAAiB,GAAG,WAAW,GAAG,EAAE;MAC5E,CAAO,EAAE,CAAC0I,aAAa,EAAEJ,SAAS,CAAC,CAAC;IACpC;EACA,CAAG,CAAC;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}