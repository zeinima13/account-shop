{"ast":null,"code":"import { tourContentProps } from './content.mjs';\nimport { buildProps, definePropType } from '../../../utils/vue/props/runtime.mjs';\nimport { iconPropType } from '../../../utils/vue/icon.mjs';\nvar tourStepProps = buildProps({\n  target: {\n    type: definePropType([String, Object, Function])\n  },\n  title: String,\n  description: String,\n  showClose: {\n    type: Boolean,\n    \"default\": void 0\n  },\n  closeIcon: {\n    type: iconPropType\n  },\n  showArrow: {\n    type: Boolean,\n    \"default\": void 0\n  },\n  placement: tourContentProps.placement,\n  mask: {\n    type: definePropType([Boolean, Object]),\n    \"default\": void 0\n  },\n  contentStyle: {\n    type: definePropType([Object])\n  },\n  prevButtonProps: {\n    type: definePropType(Object)\n  },\n  nextButtonProps: {\n    type: definePropType(Object)\n  },\n  scrollIntoViewOptions: {\n    type: definePropType([Boolean, Object]),\n    \"default\": void 0\n  },\n  type: {\n    type: definePropType(String)\n  }\n});\nvar tourStepEmits = {\n  close: function close() {\n    return true;\n  }\n};\nexport { tourStepEmits, tourStepProps };","map":{"version":3,"names":["tourStepProps","buildProps","target","type","definePropType","String","Object","Function","title","description","showClose","Boolean","closeIcon","iconPropType","showArrow","placement","tourContentProps","mask","contentStyle","prevButtonProps","nextButtonProps","scrollIntoViewOptions","tourStepEmits","close"],"sources":["../../../../../../packages/components/tour/src/step.ts"],"sourcesContent":["import { buildProps, definePropType, iconPropType } from '@element-plus/utils'\nimport { tourContentProps } from './content'\nimport type { CSSProperties, ExtractPropTypes } from 'vue'\nimport type { TourBtnProps, TourMask } from './types'\n\nexport const tourStepProps = buildProps({\n  /**\n   * @description get the element the guide card points to. empty makes it show in center of screen\n   */\n  target: {\n    type: definePropType<\n      string | HTMLElement | (() => HTMLElement | null) | null\n    >([String, Object, Function]),\n  },\n  /**\n   * @description the title of the tour content\n   */\n  title: String,\n  /**\n   * @description description\n   */\n  description: String,\n  /**\n   * @description whether to show a close button\n   */\n  showClose: {\n    type: Boolean,\n    default: undefined,\n  },\n  /**\n   * @description custom close icon, default is Close\n   */\n  closeIcon: {\n    type: iconPropType,\n  },\n  /**\n   * @description whether to show the arrow\n   */\n  showArrow: {\n    type: Boolean,\n    default: undefined,\n  },\n  /**\n   * @description position of the guide card relative to the target element\n   */\n  placement: tourContentProps.placement,\n  /**\n   * @description whether to enable masking, change mask style and fill color by pass custom props\n   */\n  mask: {\n    type: definePropType<TourMask>([Boolean, Object]),\n    default: undefined,\n  },\n  /**\n   * @description custom style for content\n   */\n  contentStyle: {\n    type: definePropType<CSSProperties>([Object]),\n  },\n  /**\n   * @description properties of the previous button\n   */\n  prevButtonProps: {\n    type: definePropType<TourBtnProps>(Object),\n  },\n  /**\n   * @description properties of the Next button\n   */\n  nextButtonProps: {\n    type: definePropType<TourBtnProps>(Object),\n  },\n  /**\n   * @description support pass custom scrollIntoView options\n   */\n  scrollIntoViewOptions: {\n    type: definePropType<boolean | ScrollIntoViewOptions>([Boolean, Object]),\n    default: undefined,\n  },\n  /**\n   * @description type, affects the background color and text color\n   */\n  type: {\n    type: definePropType<'default' | 'primary'>(String),\n  },\n})\n\nexport type TourStepProps = ExtractPropTypes<typeof tourStepProps>\n\nexport const tourStepEmits = {\n  close: () => true,\n}\nexport type TourStepEmits = typeof tourStepEmits\n"],"mappings":";;;AAEY,IAACA,aAAa,GAAGC,UAAU,CAAC;EACtCC,MAAM,EAAE;IACNC,IAAI,EAAEC,cAAc,CAAC,CAACC,MAAM,EAAEC,MAAM,EAAEC,QAAQ,CAAC;EACnD,CAAG;EACDC,KAAK,EAAEH,MAAM;EACbI,WAAW,EAAEJ,MAAM;EACnBK,SAAS,EAAE;IACTP,IAAI,EAAEQ,OAAO;IACb,WAAS,KAAK;EAClB,CAAG;EACDC,SAAS,EAAE;IACTT,IAAI,EAAEU;EACV,CAAG;EACDC,SAAS,EAAE;IACTX,IAAI,EAAEQ,OAAO;IACb,WAAS,KAAK;EAClB,CAAG;EACDI,SAAS,EAAEC,gBAAgB,CAACD,SAAS;EACrCE,IAAI,EAAE;IACJd,IAAI,EAAEC,cAAc,CAAC,CAACO,OAAO,EAAEL,MAAM,CAAC,CAAC;IACvC,WAAS,KAAK;EAClB,CAAG;EACDY,YAAY,EAAE;IACZf,IAAI,EAAEC,cAAc,CAAC,CAACE,MAAM,CAAC;EACjC,CAAG;EACDa,eAAe,EAAE;IACfhB,IAAI,EAAEC,cAAc,CAACE,MAAM;EAC/B,CAAG;EACDc,eAAe,EAAE;IACfjB,IAAI,EAAEC,cAAc,CAACE,MAAM;EAC/B,CAAG;EACDe,qBAAqB,EAAE;IACrBlB,IAAI,EAAEC,cAAc,CAAC,CAACO,OAAO,EAAEL,MAAM,CAAC,CAAC;IACvC,WAAS,KAAK;EAClB,CAAG;EACDH,IAAI,EAAE;IACJA,IAAI,EAAEC,cAAc,CAACC,MAAM;EAC/B;AACA,CAAC;AACW,IAACiB,aAAa,GAAG;EAC3BC,KAAK,EAAE,SAAPA,KAAKA,CAAA;IAAA,OAAQ,IAAI;EAAA;AACnB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}