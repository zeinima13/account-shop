{"ast":null,"code":"import _objectSpread from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport { defineComponent, toRefs, reactive, openBlock, createBlock, normalizeProps, guardReactiveProps, withCtx, createVNode, mergeProps, renderSlot, unref, Transition, createCommentVNode, createElementBlock, Fragment } from 'vue';\nimport { pick } from 'lodash-unified';\nimport { ElTeleport } from '../../teleport/index.mjs';\nimport { tooltipV2ArrowProps } from './arrow.mjs';\nimport { tooltipV2ContentProps } from './content.mjs';\nimport { tooltipV2RootProps } from './root.mjs';\nimport { tooltipV2Props } from './tooltip.mjs';\nimport { tooltipV2TriggerProps } from './trigger.mjs';\nimport TooltipV2Root from './root2.mjs';\nimport TooltipV2Arrow from './arrow2.mjs';\nimport TooltipV2Content from './content2.mjs';\nimport TooltipV2Trigger from './trigger2.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nvar __default__ = defineComponent({\n  name: \"ElTooltipV2\"\n});\nvar _sfc_main = /* @__PURE__ */defineComponent(_objectSpread(_objectSpread({}, __default__), {}, {\n  props: tooltipV2Props,\n  setup: function setup(__props) {\n    var props = __props;\n    var refedProps = toRefs(props);\n    var arrowProps = reactive(pick(refedProps, Object.keys(tooltipV2ArrowProps)));\n    var contentProps = reactive(pick(refedProps, Object.keys(tooltipV2ContentProps)));\n    var rootProps = reactive(pick(refedProps, Object.keys(tooltipV2RootProps)));\n    var triggerProps = reactive(pick(refedProps, Object.keys(tooltipV2TriggerProps)));\n    return function (_ctx, _cache) {\n      return openBlock(), createBlock(TooltipV2Root, normalizeProps(guardReactiveProps(rootProps)), {\n        \"default\": withCtx(function (_ref) {\n          var open = _ref.open;\n          return [createVNode(TooltipV2Trigger, mergeProps(triggerProps, {\n            nowrap: \"\"\n          }), {\n            \"default\": withCtx(function () {\n              return [renderSlot(_ctx.$slots, \"trigger\")];\n            }),\n            _: 3\n          }, 16), createVNode(unref(ElTeleport), {\n            to: _ctx.to,\n            disabled: !_ctx.teleported\n          }, {\n            \"default\": withCtx(function () {\n              return [_ctx.fullTransition ? (openBlock(), createBlock(Transition, normalizeProps(mergeProps({\n                key: 0\n              }, _ctx.transitionProps)), {\n                \"default\": withCtx(function () {\n                  return [_ctx.alwaysOn || open ? (openBlock(), createBlock(TooltipV2Content, normalizeProps(mergeProps({\n                    key: 0\n                  }, contentProps)), {\n                    arrow: withCtx(function (_ref2) {\n                      var style = _ref2.style,\n                        side = _ref2.side;\n                      return [_ctx.showArrow ? (openBlock(), createBlock(TooltipV2Arrow, mergeProps({\n                        key: 0\n                      }, arrowProps, {\n                        style: style,\n                        side: side\n                      }), null, 16, [\"style\", \"side\"])) : createCommentVNode(\"v-if\", true)];\n                    }),\n                    \"default\": withCtx(function () {\n                      return [renderSlot(_ctx.$slots, \"default\")];\n                    }),\n                    _: 3\n                  }, 16)) : createCommentVNode(\"v-if\", true)];\n                }),\n                _: 2\n              }, 1040)) : (openBlock(), createElementBlock(Fragment, {\n                key: 1\n              }, [_ctx.alwaysOn || open ? (openBlock(), createBlock(TooltipV2Content, normalizeProps(mergeProps({\n                key: 0\n              }, contentProps)), {\n                arrow: withCtx(function (_ref3) {\n                  var style = _ref3.style,\n                    side = _ref3.side;\n                  return [_ctx.showArrow ? (openBlock(), createBlock(TooltipV2Arrow, mergeProps({\n                    key: 0\n                  }, arrowProps, {\n                    style: style,\n                    side: side\n                  }), null, 16, [\"style\", \"side\"])) : createCommentVNode(\"v-if\", true)];\n                }),\n                \"default\": withCtx(function () {\n                  return [renderSlot(_ctx.$slots, \"default\")];\n                }),\n                _: 3\n              }, 16)) : createCommentVNode(\"v-if\", true)], 64))];\n            }),\n            _: 2\n          }, 1032, [\"to\", \"disabled\"])];\n        }),\n        _: 3\n      }, 16);\n    };\n  }\n}));\nvar TooltipV2 = /* @__PURE__ */_export_sfc(_sfc_main, [[\"__file\", \"tooltip.vue\"]]);\nexport { TooltipV2 as default };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}