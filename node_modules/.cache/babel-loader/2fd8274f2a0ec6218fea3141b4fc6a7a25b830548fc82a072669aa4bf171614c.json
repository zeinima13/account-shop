{"ast":null,"code":"import _objectSpread from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.reduce.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.fixed.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.find.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport \"core-js/modules/esnext.iterator.reduce.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport { computed, unref } from 'vue';\nimport { SortOrder, oppositeOrderMap } from '../constants.mjs';\nimport { placeholderSign } from '../private.mjs';\nimport { calcColumnStyle } from './utils.mjs';\nimport { isObject } from '@vue/shared';\nfunction useColumns(props, columns, fixed) {\n  var _columns = computed(function () {\n    return unref(columns).map(function (column, index) {\n      var _a, _b;\n      return _objectSpread(_objectSpread({}, column), {}, {\n        key: (_b = (_a = column.key) != null ? _a : column.dataKey) != null ? _b : index\n      });\n    });\n  });\n  var visibleColumns = computed(function () {\n    return unref(_columns).filter(function (column) {\n      return !column.hidden;\n    });\n  });\n  var fixedColumnsOnLeft = computed(function () {\n    return unref(visibleColumns).filter(function (column) {\n      return column.fixed === \"left\" || column.fixed === true;\n    });\n  });\n  var fixedColumnsOnRight = computed(function () {\n    return unref(visibleColumns).filter(function (column) {\n      return column.fixed === \"right\";\n    });\n  });\n  var normalColumns = computed(function () {\n    return unref(visibleColumns).filter(function (column) {\n      return !column.fixed;\n    });\n  });\n  var mainColumns = computed(function () {\n    var ret = [];\n    unref(fixedColumnsOnLeft).forEach(function (column) {\n      ret.push(_objectSpread(_objectSpread({}, column), {}, {\n        placeholderSign: placeholderSign\n      }));\n    });\n    unref(normalColumns).forEach(function (column) {\n      ret.push(column);\n    });\n    unref(fixedColumnsOnRight).forEach(function (column) {\n      ret.push(_objectSpread(_objectSpread({}, column), {}, {\n        placeholderSign: placeholderSign\n      }));\n    });\n    return ret;\n  });\n  var hasFixedColumns = computed(function () {\n    return unref(fixedColumnsOnLeft).length || unref(fixedColumnsOnRight).length;\n  });\n  var columnsStyles = computed(function () {\n    return unref(_columns).reduce(function (style, column) {\n      style[column.key] = calcColumnStyle(column, unref(fixed), props.fixed);\n      return style;\n    }, {});\n  });\n  var columnsTotalWidth = computed(function () {\n    return unref(visibleColumns).reduce(function (width, column) {\n      return width + column.width;\n    }, 0);\n  });\n  var getColumn = function getColumn(key) {\n    return unref(_columns).find(function (column) {\n      return column.key === key;\n    });\n  };\n  var getColumnStyle = function getColumnStyle(key) {\n    return unref(columnsStyles)[key];\n  };\n  var updateColumnWidth = function updateColumnWidth(column, width) {\n    column.width = width;\n  };\n  function onColumnSorted(e) {\n    var _a;\n    var key = e.currentTarget.dataset.key;\n    if (!key) return;\n    var sortState = props.sortState,\n      sortBy = props.sortBy;\n    var order = SortOrder.ASC;\n    if (isObject(sortState)) {\n      order = oppositeOrderMap[sortState[key]];\n    } else {\n      order = oppositeOrderMap[sortBy.order];\n    }\n    (_a = props.onColumnSort) == null ? void 0 : _a.call(props, {\n      column: getColumn(key),\n      key: key,\n      order: order\n    });\n  }\n  return {\n    columns: _columns,\n    columnsStyles: columnsStyles,\n    columnsTotalWidth: columnsTotalWidth,\n    fixedColumnsOnLeft: fixedColumnsOnLeft,\n    fixedColumnsOnRight: fixedColumnsOnRight,\n    hasFixedColumns: hasFixedColumns,\n    mainColumns: mainColumns,\n    normalColumns: normalColumns,\n    visibleColumns: visibleColumns,\n    getColumn: getColumn,\n    getColumnStyle: getColumnStyle,\n    updateColumnWidth: updateColumnWidth,\n    onColumnSorted: onColumnSorted\n  };\n}\nexport { useColumns };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}