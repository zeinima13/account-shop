{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _objectSpread from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _asyncToGenerator from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _slicedToArray from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/web.timers.js\";\nimport { defineComponent, ref, provide, watch, unref, onMounted, onBeforeUnmount, nextTick, renderSlot } from 'vue';\nimport { isNil } from 'lodash-unified';\nimport { useFocusReason, tryFocus, createFocusOutPreventedEvent, getEdges, focusableStack, focusFirstDescendant, obtainAllFocusableElements, isFocusCausedByUserEvent } from './utils.mjs';\nimport { ON_TRAP_FOCUS_EVT, ON_RELEASE_FOCUS_EVT, FOCUS_TRAP_INJECTION_KEY, FOCUS_AFTER_TRAPPED, FOCUS_AFTER_TRAPPED_OPTS, FOCUS_AFTER_RELEASED } from './tokens.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useEscapeKeydown } from '../../../hooks/use-escape-keydown/index.mjs';\nimport { EVENT_CODE } from '../../../constants/aria.mjs';\nimport { isString } from '@vue/shared';\nvar _sfc_main = defineComponent({\n  name: \"ElFocusTrap\",\n  inheritAttrs: false,\n  props: {\n    loop: Boolean,\n    trapped: Boolean,\n    focusTrapEl: Object,\n    focusStartEl: {\n      type: [Object, String],\n      \"default\": \"first\"\n    }\n  },\n  emits: [ON_TRAP_FOCUS_EVT, ON_RELEASE_FOCUS_EVT, \"focusin\", \"focusout\", \"focusout-prevented\", \"release-requested\"],\n  setup: function setup(props, _ref) {\n    var emit = _ref.emit;\n    var forwardRef = ref();\n    var lastFocusBeforeTrapped;\n    var lastFocusAfterTrapped;\n    var _useFocusReason = useFocusReason(),\n      focusReason = _useFocusReason.focusReason;\n    useEscapeKeydown(function (event) {\n      if (props.trapped && !focusLayer.paused) {\n        emit(\"release-requested\", event);\n      }\n    });\n    var focusLayer = {\n      paused: false,\n      pause: function pause() {\n        this.paused = true;\n      },\n      resume: function resume() {\n        this.paused = false;\n      }\n    };\n    var onKeydown = function onKeydown(e) {\n      if (!props.loop && !props.trapped) return;\n      if (focusLayer.paused) return;\n      var code = e.code,\n        altKey = e.altKey,\n        ctrlKey = e.ctrlKey,\n        metaKey = e.metaKey,\n        currentTarget = e.currentTarget,\n        shiftKey = e.shiftKey;\n      var loop = props.loop;\n      var isTabbing = code === EVENT_CODE.tab && !altKey && !ctrlKey && !metaKey;\n      var currentFocusingEl = document.activeElement;\n      if (isTabbing && currentFocusingEl) {\n        var container = currentTarget;\n        var _getEdges = getEdges(container),\n          _getEdges2 = _slicedToArray(_getEdges, 2),\n          first = _getEdges2[0],\n          last = _getEdges2[1];\n        var isTabbable = first && last;\n        if (!isTabbable) {\n          if (currentFocusingEl === container) {\n            var focusoutPreventedEvent = createFocusOutPreventedEvent({\n              focusReason: focusReason.value\n            });\n            emit(\"focusout-prevented\", focusoutPreventedEvent);\n            if (!focusoutPreventedEvent.defaultPrevented) {\n              e.preventDefault();\n            }\n          }\n        } else {\n          if (!shiftKey && currentFocusingEl === last) {\n            var _focusoutPreventedEvent = createFocusOutPreventedEvent({\n              focusReason: focusReason.value\n            });\n            emit(\"focusout-prevented\", _focusoutPreventedEvent);\n            if (!_focusoutPreventedEvent.defaultPrevented) {\n              e.preventDefault();\n              if (loop) tryFocus(first, true);\n            }\n          } else if (shiftKey && [first, container].includes(currentFocusingEl)) {\n            var _focusoutPreventedEvent2 = createFocusOutPreventedEvent({\n              focusReason: focusReason.value\n            });\n            emit(\"focusout-prevented\", _focusoutPreventedEvent2);\n            if (!_focusoutPreventedEvent2.defaultPrevented) {\n              e.preventDefault();\n              if (loop) tryFocus(last, true);\n            }\n          }\n        }\n      }\n    };\n    provide(FOCUS_TRAP_INJECTION_KEY, {\n      focusTrapRef: forwardRef,\n      onKeydown: onKeydown\n    });\n    watch(function () {\n      return props.focusTrapEl;\n    }, function (focusTrapEl) {\n      if (focusTrapEl) {\n        forwardRef.value = focusTrapEl;\n      }\n    }, {\n      immediate: true\n    });\n    watch([forwardRef], function (_ref2, _ref3) {\n      var _ref4 = _slicedToArray(_ref2, 1),\n        forwardRef2 = _ref4[0];\n      var _ref5 = _slicedToArray(_ref3, 1),\n        oldForwardRef = _ref5[0];\n      if (forwardRef2) {\n        forwardRef2.addEventListener(\"keydown\", onKeydown);\n        forwardRef2.addEventListener(\"focusin\", onFocusIn);\n        forwardRef2.addEventListener(\"focusout\", onFocusOut);\n      }\n      if (oldForwardRef) {\n        oldForwardRef.removeEventListener(\"keydown\", onKeydown);\n        oldForwardRef.removeEventListener(\"focusin\", onFocusIn);\n        oldForwardRef.removeEventListener(\"focusout\", onFocusOut);\n      }\n    });\n    var trapOnFocus = function trapOnFocus(e) {\n      emit(ON_TRAP_FOCUS_EVT, e);\n    };\n    var releaseOnFocus = function releaseOnFocus(e) {\n      return emit(ON_RELEASE_FOCUS_EVT, e);\n    };\n    var onFocusIn = function onFocusIn(e) {\n      var trapContainer = unref(forwardRef);\n      if (!trapContainer) return;\n      var target = e.target;\n      var relatedTarget = e.relatedTarget;\n      var isFocusedInTrap = target && trapContainer.contains(target);\n      if (!props.trapped) {\n        var isPrevFocusedInTrap = relatedTarget && trapContainer.contains(relatedTarget);\n        if (!isPrevFocusedInTrap) {\n          lastFocusBeforeTrapped = relatedTarget;\n        }\n      }\n      if (isFocusedInTrap) emit(\"focusin\", e);\n      if (focusLayer.paused) return;\n      if (props.trapped) {\n        if (isFocusedInTrap) {\n          lastFocusAfterTrapped = target;\n        } else {\n          tryFocus(lastFocusAfterTrapped, true);\n        }\n      }\n    };\n    var onFocusOut = function onFocusOut(e) {\n      var trapContainer = unref(forwardRef);\n      if (focusLayer.paused || !trapContainer) return;\n      if (props.trapped) {\n        var relatedTarget = e.relatedTarget;\n        if (!isNil(relatedTarget) && !trapContainer.contains(relatedTarget)) {\n          setTimeout(function () {\n            if (!focusLayer.paused && props.trapped) {\n              var focusoutPreventedEvent = createFocusOutPreventedEvent({\n                focusReason: focusReason.value\n              });\n              emit(\"focusout-prevented\", focusoutPreventedEvent);\n              if (!focusoutPreventedEvent.defaultPrevented) {\n                tryFocus(lastFocusAfterTrapped, true);\n              }\n            }\n          }, 0);\n        }\n      } else {\n        var target = e.target;\n        var isFocusedInTrap = target && trapContainer.contains(target);\n        if (!isFocusedInTrap) emit(\"focusout\", e);\n      }\n    };\n    function startTrap() {\n      return _startTrap.apply(this, arguments);\n    }\n    function _startTrap() {\n      _startTrap = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var trapContainer, prevFocusedElement, isPrevFocusContained, focusEvent;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return nextTick();\n            case 2:\n              trapContainer = unref(forwardRef);\n              if (trapContainer) {\n                focusableStack.push(focusLayer);\n                prevFocusedElement = trapContainer.contains(document.activeElement) ? lastFocusBeforeTrapped : document.activeElement;\n                lastFocusBeforeTrapped = prevFocusedElement;\n                isPrevFocusContained = trapContainer.contains(prevFocusedElement);\n                if (!isPrevFocusContained) {\n                  focusEvent = new Event(FOCUS_AFTER_TRAPPED, FOCUS_AFTER_TRAPPED_OPTS);\n                  trapContainer.addEventListener(FOCUS_AFTER_TRAPPED, trapOnFocus);\n                  trapContainer.dispatchEvent(focusEvent);\n                  if (!focusEvent.defaultPrevented) {\n                    nextTick(function () {\n                      var focusStartEl = props.focusStartEl;\n                      if (!isString(focusStartEl)) {\n                        tryFocus(focusStartEl);\n                        if (document.activeElement !== focusStartEl) {\n                          focusStartEl = \"first\";\n                        }\n                      }\n                      if (focusStartEl === \"first\") {\n                        focusFirstDescendant(obtainAllFocusableElements(trapContainer), true);\n                      }\n                      if (document.activeElement === prevFocusedElement || focusStartEl === \"container\") {\n                        tryFocus(trapContainer);\n                      }\n                    });\n                  }\n                }\n              }\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n      return _startTrap.apply(this, arguments);\n    }\n    function stopTrap() {\n      var trapContainer = unref(forwardRef);\n      if (trapContainer) {\n        trapContainer.removeEventListener(FOCUS_AFTER_TRAPPED, trapOnFocus);\n        var releasedEvent = new CustomEvent(FOCUS_AFTER_RELEASED, _objectSpread(_objectSpread({}, FOCUS_AFTER_TRAPPED_OPTS), {}, {\n          detail: {\n            focusReason: focusReason.value\n          }\n        }));\n        trapContainer.addEventListener(FOCUS_AFTER_RELEASED, releaseOnFocus);\n        trapContainer.dispatchEvent(releasedEvent);\n        if (!releasedEvent.defaultPrevented && (focusReason.value == \"keyboard\" || !isFocusCausedByUserEvent() || trapContainer.contains(document.activeElement))) {\n          tryFocus(lastFocusBeforeTrapped != null ? lastFocusBeforeTrapped : document.body);\n        }\n        trapContainer.removeEventListener(FOCUS_AFTER_RELEASED, releaseOnFocus);\n        focusableStack.remove(focusLayer);\n      }\n    }\n    onMounted(function () {\n      if (props.trapped) {\n        startTrap();\n      }\n      watch(function () {\n        return props.trapped;\n      }, function (trapped) {\n        if (trapped) {\n          startTrap();\n        } else {\n          stopTrap();\n        }\n      });\n    });\n    onBeforeUnmount(function () {\n      if (props.trapped) {\n        stopTrap();\n      }\n      if (forwardRef.value) {\n        forwardRef.value.removeEventListener(\"keydown\", onKeydown);\n        forwardRef.value.removeEventListener(\"focusin\", onFocusIn);\n        forwardRef.value.removeEventListener(\"focusout\", onFocusOut);\n        forwardRef.value = void 0;\n      }\n    });\n    return {\n      onKeydown: onKeydown\n    };\n  }\n});\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  return renderSlot(_ctx.$slots, \"default\", {\n    handleKeydown: _ctx.onKeydown\n  });\n}\nvar ElFocusTrap = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render], [\"__file\", \"focus-trap.vue\"]]);\nexport { ElFocusTrap as default };","map":{"version":3,"names":["_sfc_main","defineComponent","name","inheritAttrs","props","loop","Boolean","trapped","focusTrapEl","Object","focusStartEl","type","String","emits","ON_TRAP_FOCUS_EVT","ON_RELEASE_FOCUS_EVT","setup","_ref","emit","forwardRef","ref","lastFocusBeforeTrapped","lastFocusAfterTrapped","_useFocusReason","useFocusReason","focusReason","useEscapeKeydown","event","focusLayer","paused","pause","resume","onKeydown","e","code","altKey","ctrlKey","metaKey","currentTarget","shiftKey","isTabbing","EVENT_CODE","tab","currentFocusingEl","document","activeElement","container","_getEdges","getEdges","_getEdges2","_slicedToArray","first","last","isTabbable","focusoutPreventedEvent","createFocusOutPreventedEvent","value","defaultPrevented","preventDefault","tryFocus","includes","provide","FOCUS_TRAP_INJECTION_KEY","focusTrapRef","watch","immediate","_ref2","_ref3","_ref4","forwardRef2","_ref5","oldForwardRef","addEventListener","onFocusIn","onFocusOut","removeEventListener","trapOnFocus","releaseOnFocus","trapContainer","unref","target","relatedTarget","isFocusedInTrap","contains","isPrevFocusedInTrap","isNil","setTimeout","startTrap","_startTrap","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","prevFocusedElement","isPrevFocusContained","focusEvent","wrap","_callee$","_context","prev","next","nextTick","focusableStack","push","Event","FOCUS_AFTER_TRAPPED","FOCUS_AFTER_TRAPPED_OPTS","dispatchEvent","isString","focusFirstDescendant","obtainAllFocusableElements","stop","stopTrap","releasedEvent","CustomEvent","FOCUS_AFTER_RELEASED","_objectSpread","detail","isFocusCausedByUserEvent","body","remove","onMounted","onBeforeUnmount","_sfc_render","_ctx","_cache","$props","$setup","$data","$options","renderSlot","$slots","handleKeydown","ElFocusTrap","_export_sfc"],"sources":["../../../../../../packages/components/focus-trap/src/focus-trap.vue"],"sourcesContent":["<template>\n  <slot :handle-keydown=\"onKeydown\" />\n</template>\n<script lang=\"ts\">\nimport {\n  defineComponent,\n  nextTick,\n  onBeforeUnmount,\n  onMounted,\n  provide,\n  ref,\n  unref,\n  watch,\n} from 'vue'\nimport { isNil } from 'lodash-unified'\nimport { EVENT_CODE } from '@element-plus/constants'\nimport { useEscapeKeydown } from '@element-plus/hooks'\nimport { isString } from '@element-plus/utils'\nimport {\n  createFocusOutPreventedEvent,\n  focusFirstDescendant,\n  focusableStack,\n  getEdges,\n  isFocusCausedByUserEvent,\n  obtainAllFocusableElements,\n  tryFocus,\n  useFocusReason,\n} from './utils'\nimport {\n  FOCUS_AFTER_RELEASED,\n  FOCUS_AFTER_TRAPPED,\n  FOCUS_AFTER_TRAPPED_OPTS,\n  FOCUS_TRAP_INJECTION_KEY,\n  ON_RELEASE_FOCUS_EVT,\n  ON_TRAP_FOCUS_EVT,\n} from './tokens'\n\nimport type { PropType } from 'vue'\nimport type { FocusLayer } from './utils'\n\nexport default defineComponent({\n  name: 'ElFocusTrap',\n  inheritAttrs: false,\n  props: {\n    loop: Boolean,\n    trapped: Boolean,\n    focusTrapEl: Object as PropType<HTMLElement>,\n    focusStartEl: {\n      type: [Object, String] as PropType<'container' | 'first' | HTMLElement>,\n      default: 'first',\n    },\n  },\n  emits: [\n    ON_TRAP_FOCUS_EVT,\n    ON_RELEASE_FOCUS_EVT,\n    'focusin',\n    'focusout',\n    'focusout-prevented',\n    'release-requested',\n  ],\n  setup(props, { emit }) {\n    const forwardRef = ref<HTMLElement | undefined>()\n    let lastFocusBeforeTrapped: HTMLElement | null\n    let lastFocusAfterTrapped: HTMLElement | null\n\n    const { focusReason } = useFocusReason()\n\n    useEscapeKeydown((event) => {\n      if (props.trapped && !focusLayer.paused) {\n        emit('release-requested', event)\n      }\n    })\n\n    const focusLayer: FocusLayer = {\n      paused: false,\n      pause() {\n        this.paused = true\n      },\n      resume() {\n        this.paused = false\n      },\n    }\n\n    const onKeydown = (e: KeyboardEvent) => {\n      if (!props.loop && !props.trapped) return\n      if (focusLayer.paused) return\n\n      const { code, altKey, ctrlKey, metaKey, currentTarget, shiftKey } = e\n      const { loop } = props\n      const isTabbing =\n        code === EVENT_CODE.tab && !altKey && !ctrlKey && !metaKey\n\n      const currentFocusingEl = document.activeElement\n      if (isTabbing && currentFocusingEl) {\n        const container = currentTarget as HTMLElement\n        const [first, last] = getEdges(container)\n        const isTabbable = first && last\n        if (!isTabbable) {\n          if (currentFocusingEl === container) {\n            const focusoutPreventedEvent = createFocusOutPreventedEvent({\n              focusReason: focusReason.value,\n            })\n            emit('focusout-prevented', focusoutPreventedEvent)\n            if (!focusoutPreventedEvent.defaultPrevented) {\n              e.preventDefault()\n            }\n          }\n        } else {\n          if (!shiftKey && currentFocusingEl === last) {\n            const focusoutPreventedEvent = createFocusOutPreventedEvent({\n              focusReason: focusReason.value,\n            })\n            emit('focusout-prevented', focusoutPreventedEvent)\n            if (!focusoutPreventedEvent.defaultPrevented) {\n              e.preventDefault()\n              if (loop) tryFocus(first, true)\n            }\n          } else if (\n            shiftKey &&\n            [first, container].includes(currentFocusingEl as HTMLElement)\n          ) {\n            const focusoutPreventedEvent = createFocusOutPreventedEvent({\n              focusReason: focusReason.value,\n            })\n            emit('focusout-prevented', focusoutPreventedEvent)\n            if (!focusoutPreventedEvent.defaultPrevented) {\n              e.preventDefault()\n              if (loop) tryFocus(last, true)\n            }\n          }\n        }\n      }\n    }\n\n    provide(FOCUS_TRAP_INJECTION_KEY, {\n      focusTrapRef: forwardRef,\n      onKeydown,\n    })\n\n    watch(\n      () => props.focusTrapEl,\n      (focusTrapEl) => {\n        if (focusTrapEl) {\n          forwardRef.value = focusTrapEl\n        }\n      },\n      { immediate: true }\n    )\n\n    watch([forwardRef], ([forwardRef], [oldForwardRef]) => {\n      if (forwardRef) {\n        forwardRef.addEventListener('keydown', onKeydown)\n        forwardRef.addEventListener('focusin', onFocusIn)\n        forwardRef.addEventListener('focusout', onFocusOut)\n      }\n      if (oldForwardRef) {\n        oldForwardRef.removeEventListener('keydown', onKeydown)\n        oldForwardRef.removeEventListener('focusin', onFocusIn)\n        oldForwardRef.removeEventListener('focusout', onFocusOut)\n      }\n    })\n\n    const trapOnFocus = (e: Event) => {\n      emit(ON_TRAP_FOCUS_EVT, e)\n    }\n    const releaseOnFocus = (e: Event) => emit(ON_RELEASE_FOCUS_EVT, e)\n\n    const onFocusIn = (e: FocusEvent) => {\n      const trapContainer = unref(forwardRef)\n      if (!trapContainer) return\n\n      const target = e.target as HTMLElement | null\n      const relatedTarget = e.relatedTarget as HTMLElement | null\n      const isFocusedInTrap = target && trapContainer.contains(target)\n\n      if (!props.trapped) {\n        const isPrevFocusedInTrap =\n          relatedTarget && trapContainer.contains(relatedTarget)\n        if (!isPrevFocusedInTrap) {\n          lastFocusBeforeTrapped = relatedTarget\n        }\n      }\n\n      if (isFocusedInTrap) emit('focusin', e)\n\n      if (focusLayer.paused) return\n\n      if (props.trapped) {\n        if (isFocusedInTrap) {\n          lastFocusAfterTrapped = target\n        } else {\n          tryFocus(lastFocusAfterTrapped, true)\n        }\n      }\n    }\n\n    const onFocusOut = (e: Event) => {\n      const trapContainer = unref(forwardRef)\n      if (focusLayer.paused || !trapContainer) return\n\n      if (props.trapped) {\n        const relatedTarget = (e as FocusEvent)\n          .relatedTarget as HTMLElement | null\n        if (!isNil(relatedTarget) && !trapContainer.contains(relatedTarget)) {\n          // Give embedded focus layer time to pause this layer before reclaiming focus\n          // And only reclaim focus if it should currently be trapping\n          setTimeout(() => {\n            if (!focusLayer.paused && props.trapped) {\n              const focusoutPreventedEvent = createFocusOutPreventedEvent({\n                focusReason: focusReason.value,\n              })\n              emit('focusout-prevented', focusoutPreventedEvent)\n              if (!focusoutPreventedEvent.defaultPrevented) {\n                tryFocus(lastFocusAfterTrapped, true)\n              }\n            }\n          }, 0)\n        }\n      } else {\n        const target = e.target as HTMLElement | null\n        const isFocusedInTrap = target && trapContainer.contains(target)\n        if (!isFocusedInTrap) emit('focusout', e)\n      }\n    }\n\n    async function startTrap() {\n      // Wait for forwardRef to resolve\n      await nextTick()\n      const trapContainer = unref(forwardRef)\n      if (trapContainer) {\n        focusableStack.push(focusLayer)\n        const prevFocusedElement = trapContainer.contains(\n          document.activeElement\n        )\n          ? lastFocusBeforeTrapped\n          : document.activeElement\n        lastFocusBeforeTrapped = prevFocusedElement as HTMLElement | null\n        const isPrevFocusContained = trapContainer.contains(prevFocusedElement)\n        if (!isPrevFocusContained) {\n          const focusEvent = new Event(\n            FOCUS_AFTER_TRAPPED,\n            FOCUS_AFTER_TRAPPED_OPTS\n          )\n          trapContainer.addEventListener(FOCUS_AFTER_TRAPPED, trapOnFocus)\n          trapContainer.dispatchEvent(focusEvent)\n          if (!focusEvent.defaultPrevented) {\n            nextTick(() => {\n              let focusStartEl = props.focusStartEl\n              if (!isString(focusStartEl)) {\n                tryFocus(focusStartEl)\n                if (document.activeElement !== focusStartEl) {\n                  focusStartEl = 'first'\n                }\n              }\n              if (focusStartEl === 'first') {\n                focusFirstDescendant(\n                  obtainAllFocusableElements(trapContainer),\n                  true\n                )\n              }\n              if (\n                document.activeElement === prevFocusedElement ||\n                focusStartEl === 'container'\n              ) {\n                tryFocus(trapContainer)\n              }\n            })\n          }\n        }\n      }\n    }\n\n    function stopTrap() {\n      const trapContainer = unref(forwardRef)\n\n      if (trapContainer) {\n        trapContainer.removeEventListener(FOCUS_AFTER_TRAPPED, trapOnFocus)\n\n        const releasedEvent = new CustomEvent(FOCUS_AFTER_RELEASED, {\n          ...FOCUS_AFTER_TRAPPED_OPTS,\n          detail: {\n            focusReason: focusReason.value,\n          },\n        })\n        trapContainer.addEventListener(FOCUS_AFTER_RELEASED, releaseOnFocus)\n        trapContainer.dispatchEvent(releasedEvent)\n        if (\n          !releasedEvent.defaultPrevented &&\n          (focusReason.value == 'keyboard' ||\n            !isFocusCausedByUserEvent() ||\n            trapContainer.contains(document.activeElement))\n        ) {\n          tryFocus(lastFocusBeforeTrapped ?? document.body)\n        }\n\n        trapContainer.removeEventListener(FOCUS_AFTER_RELEASED, releaseOnFocus)\n        focusableStack.remove(focusLayer)\n      }\n    }\n\n    onMounted(() => {\n      if (props.trapped) {\n        startTrap()\n      }\n\n      watch(\n        () => props.trapped,\n        (trapped) => {\n          if (trapped) {\n            startTrap()\n          } else {\n            stopTrap()\n          }\n        }\n      )\n    })\n\n    onBeforeUnmount(() => {\n      if (props.trapped) {\n        stopTrap()\n      }\n\n      if (forwardRef.value) {\n        forwardRef.value.removeEventListener('keydown', onKeydown)\n        forwardRef.value.removeEventListener('focusin', onFocusIn)\n        forwardRef.value.removeEventListener('focusout', onFocusOut)\n        forwardRef.value = undefined\n      }\n    })\n\n    return {\n      onKeydown,\n    }\n  },\n})\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}