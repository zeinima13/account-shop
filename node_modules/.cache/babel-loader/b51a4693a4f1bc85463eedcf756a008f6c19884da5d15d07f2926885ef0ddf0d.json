{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, reactive } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { ElMessage } from 'element-plus';\nimport { User, Lock } from '@element-plus/icons-vue';\nexport default {\n  name: 'AdminLogin',\n  components: {\n    User: User,\n    Lock: Lock\n  },\n  setup: function setup() {\n    var router = useRouter();\n    var loginForm = reactive({\n      username: '',\n      password: ''\n    });\n    var loginRules = {\n      username: [{\n        required: true,\n        message: '请输入用户名',\n        trigger: 'blur'\n      }],\n      password: [{\n        required: true,\n        message: '请输入密码',\n        trigger: 'blur'\n      }]\n    };\n    var handleLogin = function handleLogin() {\n      // 这里应该调用真实的登录API\n      // 现在为了演示，使用硬编码的用户名和密码\n      if (loginForm.username === 'admin' && loginForm.password === 'admin123') {\n        localStorage.setItem('adminToken', 'demo-token');\n        router.push('/admin/products');\n        ElMessage.success('登录成功');\n      } else {\n        ElMessage.error('用户名或密码错误');\n      }\n    };\n    return {\n      loginForm: loginForm,\n      loginRules: loginRules,\n      handleLogin: handleLogin\n    };\n  }\n};","map":{"version":3,"names":["ref","reactive","useRouter","ElMessage","User","Lock","name","components","setup","router","loginForm","username","password","loginRules","required","message","trigger","handleLogin","localStorage","setItem","push","success","error"],"sources":["C:\\Users\\ASUS\\CascadeProjects\\account-shop\\src\\views\\admin\\Login.vue"],"sourcesContent":["<template>\n  <div class=\"login-container\">\n    <div class=\"login-box\">\n      <h2>管理员登录</h2>\n      <el-form \n        ref=\"loginForm\"\n        :model=\"loginForm\"\n        :rules=\"loginRules\"\n        @submit.prevent=\"handleLogin\"\n      >\n        <el-form-item prop=\"username\">\n          <el-input\n            v-model=\"loginForm.username\"\n            placeholder=\"用户名\"\n            prefix-icon=\"User\"\n          />\n        </el-form-item>\n        <el-form-item prop=\"password\">\n          <el-input\n            v-model=\"loginForm.password\"\n            type=\"password\"\n            placeholder=\"密码\"\n            prefix-icon=\"Lock\"\n            show-password\n          />\n        </el-form-item>\n        <el-form-item>\n          <el-button \n            type=\"primary\" \n            style=\"width: 100%\"\n            @click=\"handleLogin\"\n          >\n            登录\n          </el-button>\n        </el-form-item>\n      </el-form>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, reactive } from 'vue'\nimport { useRouter } from 'vue-router'\nimport { ElMessage } from 'element-plus'\nimport { User, Lock } from '@element-plus/icons-vue'\n\nexport default {\n  name: 'AdminLogin',\n  components: {\n    User,\n    Lock\n  },\n  setup() {\n    const router = useRouter()\n    const loginForm = reactive({\n      username: '',\n      password: ''\n    })\n\n    const loginRules = {\n      username: [\n        { required: true, message: '请输入用户名', trigger: 'blur' }\n      ],\n      password: [\n        { required: true, message: '请输入密码', trigger: 'blur' }\n      ]\n    }\n\n    const handleLogin = () => {\n      // 这里应该调用真实的登录API\n      // 现在为了演示，使用硬编码的用户名和密码\n      if (loginForm.username === 'admin' && loginForm.password === 'admin123') {\n        localStorage.setItem('adminToken', 'demo-token')\n        router.push('/admin/products')\n        ElMessage.success('登录成功')\n      } else {\n        ElMessage.error('用户名或密码错误')\n      }\n    }\n\n    return {\n      loginForm,\n      loginRules,\n      handleLogin\n    }\n  }\n}\n</script>\n\n<style scoped>\n.login-container {\n  min-height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: #f5f7fa;\n}\n\n.login-box {\n  width: 100%;\n  max-width: 400px;\n  padding: 30px;\n  background: white;\n  border-radius: 8px;\n  box-shadow: 0 2px 12px 0 rgba(0,0,0,0.1);\n}\n\n.login-box h2 {\n  text-align: center;\n  margin-bottom: 30px;\n  color: #303133;\n}\n\n@media screen and (max-width: 768px) {\n  .login-box {\n    margin: 20px;\n    padding: 20px;\n  }\n}\n</style>\n"],"mappings":";AAyCA,SAASA,GAAG,EAAEC,QAAO,QAAS,KAAI;AAClC,SAASC,SAAQ,QAAS,YAAW;AACrC,SAASC,SAAQ,QAAS,cAAa;AACvC,SAASC,IAAI,EAAEC,IAAG,QAAS,yBAAwB;AAEnD,eAAe;EACbC,IAAI,EAAE,YAAY;EAClBC,UAAU,EAAE;IACVH,IAAI,EAAJA,IAAI;IACJC,IAAG,EAAHA;EACF,CAAC;EACDG,KAAK,WAALA,KAAKA,CAAA,EAAG;IACN,IAAMC,MAAK,GAAIP,SAAS,CAAC;IACzB,IAAMQ,SAAQ,GAAIT,QAAQ,CAAC;MACzBU,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE;IACZ,CAAC;IAED,IAAMC,UAAS,GAAI;MACjBF,QAAQ,EAAE,CACR;QAAEG,QAAQ,EAAE,IAAI;QAAEC,OAAO,EAAE,QAAQ;QAAEC,OAAO,EAAE;MAAO,EACtD;MACDJ,QAAQ,EAAE,CACR;QAAEE,QAAQ,EAAE,IAAI;QAAEC,OAAO,EAAE,OAAO;QAAEC,OAAO,EAAE;MAAO;IAExD;IAEA,IAAMC,WAAU,GAAI,SAAdA,WAAUA,CAAA,EAAU;MACxB;MACA;MACA,IAAIP,SAAS,CAACC,QAAO,KAAM,OAAM,IAAKD,SAAS,CAACE,QAAO,KAAM,UAAU,EAAE;QACvEM,YAAY,CAACC,OAAO,CAAC,YAAY,EAAE,YAAY;QAC/CV,MAAM,CAACW,IAAI,CAAC,iBAAiB;QAC7BjB,SAAS,CAACkB,OAAO,CAAC,MAAM;MAC1B,OAAO;QACLlB,SAAS,CAACmB,KAAK,CAAC,UAAU;MAC5B;IACF;IAEA,OAAO;MACLZ,SAAS,EAATA,SAAS;MACTG,UAAU,EAAVA,UAAU;MACVI,WAAU,EAAVA;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}