{"ast":null,"code":"import _defineProperty from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.every.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.every.js\";\nimport { placements } from '@popperjs/core';\nimport { buildProps, definePropType } from '../../../utils/vue/props/runtime.mjs';\nimport { useSizeProp } from '../../../hooks/use-size/index.mjs';\nimport { useAriaProps } from '../../../hooks/use-aria/index.mjs';\nimport { UPDATE_MODEL_EVENT, INPUT_EVENT, CHANGE_EVENT } from '../../../constants/event.mjs';\nimport { isNumber } from '../../../utils/types.mjs';\nimport { isArray } from '@vue/shared';\nvar sliderProps = buildProps(_objectSpread({\n  modelValue: {\n    type: definePropType([Number, Array]),\n    \"default\": 0\n  },\n  id: {\n    type: String,\n    \"default\": void 0\n  },\n  min: {\n    type: Number,\n    \"default\": 0\n  },\n  max: {\n    type: Number,\n    \"default\": 100\n  },\n  step: {\n    type: Number,\n    \"default\": 1\n  },\n  showInput: Boolean,\n  showInputControls: {\n    type: Boolean,\n    \"default\": true\n  },\n  size: useSizeProp,\n  inputSize: useSizeProp,\n  showStops: Boolean,\n  showTooltip: {\n    type: Boolean,\n    \"default\": true\n  },\n  formatTooltip: {\n    type: definePropType(Function),\n    \"default\": void 0\n  },\n  disabled: Boolean,\n  range: Boolean,\n  vertical: Boolean,\n  height: String,\n  debounce: {\n    type: Number,\n    \"default\": 300\n  },\n  rangeStartLabel: {\n    type: String,\n    \"default\": void 0\n  },\n  rangeEndLabel: {\n    type: String,\n    \"default\": void 0\n  },\n  formatValueText: {\n    type: definePropType(Function),\n    \"default\": void 0\n  },\n  tooltipClass: {\n    type: String,\n    \"default\": void 0\n  },\n  placement: {\n    type: String,\n    values: placements,\n    \"default\": \"top\"\n  },\n  marks: {\n    type: definePropType(Object)\n  },\n  validateEvent: {\n    type: Boolean,\n    \"default\": true\n  }\n}, useAriaProps([\"ariaLabel\"])));\nvar isValidValue = function isValidValue(value) {\n  return isNumber(value) || isArray(value) && value.every(isNumber);\n};\nvar sliderEmits = _defineProperty(_defineProperty(_defineProperty({}, UPDATE_MODEL_EVENT, isValidValue), INPUT_EVENT, isValidValue), CHANGE_EVENT, isValidValue);\nexport { sliderEmits, sliderProps };","map":{"version":3,"names":["sliderProps","buildProps","_objectSpread","modelValue","type","definePropType","Number","Array","id","String","min","max","step","showInput","Boolean","showInputControls","size","useSizeProp","inputSize","showStops","showTooltip","formatTooltip","Function","disabled","range","vertical","height","debounce","rangeStartLabel","rangeEndLabel","formatValueText","tooltipClass","placement","values","placements","marks","Object","validateEvent","useAriaProps","isValidValue","value","isNumber","isArray","every","sliderEmits","_defineProperty","UPDATE_MODEL_EVENT","INPUT_EVENT","CHANGE_EVENT"],"sources":["../../../../../../packages/components/slider/src/slider.ts"],"sourcesContent":["import { placements } from '@popperjs/core'\nimport {\n  buildProps,\n  definePropType,\n  isArray,\n  isNumber,\n} from '@element-plus/utils'\nimport {\n  CHANGE_EVENT,\n  INPUT_EVENT,\n  UPDATE_MODEL_EVENT,\n} from '@element-plus/constants'\nimport { useAriaProps, useSizeProp } from '@element-plus/hooks'\nimport type { Arrayable } from '@element-plus/utils'\nimport type { ExtractPropTypes } from 'vue'\nimport type { SliderMarkerProps } from './marker'\nimport type Slider from './slider.vue'\n\ntype SliderMarks = Record<number, string | SliderMarkerProps['mark']>\n\nexport interface SliderInitData {\n  firstValue: number\n  secondValue: number\n  oldValue?: Arrayable<number>\n  dragging: boolean\n  sliderSize: number\n}\n\nexport const sliderProps = buildProps({\n  /**\n   * @description binding value\n   */\n  modelValue: {\n    type: definePropType<Arrayable<number>>([Number, Array]),\n    default: 0,\n  },\n  id: {\n    type: String,\n    default: undefined,\n  },\n  /**\n   * @description minimum value\n   */\n  min: {\n    type: Number,\n    default: 0,\n  },\n  /**\n   * @description maximum value\n   */\n  max: {\n    type: Number,\n    default: 100,\n  },\n  /**\n   * @description step size\n   */\n  step: {\n    type: Number,\n    default: 1,\n  },\n  /**\n   * @description whether to display an input box, works when `range` is false\n   */\n  showInput: Boolean,\n  /**\n   * @description whether to display control buttons when `show-input` is true\n   */\n  showInputControls: {\n    type: Boolean,\n    default: true,\n  },\n  /**\n   * @description size of the slider wrapper, will not work in vertical mode\n   */\n  size: useSizeProp,\n  /**\n   * @description size of the input box, when set `size`, the default is the value of `size`\n   */\n  inputSize: useSizeProp,\n  /**\n   * @description whether to display breakpoints\n   */\n  showStops: Boolean,\n  /**\n   * @description whether to display tooltip value\n   */\n  showTooltip: {\n    type: Boolean,\n    default: true,\n  },\n  /**\n   * @description format to display tooltip value\n   */\n  formatTooltip: {\n    type: definePropType<(val: number) => number | string>(Function),\n    default: undefined,\n  },\n  /**\n   * @description whether Slider is disabled\n   */\n  disabled: Boolean,\n  /**\n   * @description whether to select a range\n   */\n  range: Boolean,\n  /**\n   * @description vertical mode\n   */\n  vertical: Boolean,\n  /**\n   * @description slider height, required in vertical mode\n   */\n  height: String,\n  /**\n   * @description debounce delay when typing, in milliseconds, works when `show-input` is true\n   */\n  debounce: {\n    type: Number,\n    default: 300,\n  },\n  /**\n   * @description when `range` is true, screen reader label for the start of the range\n   */\n  rangeStartLabel: {\n    type: String,\n    default: undefined,\n  },\n  /**\n   * @description when `range` is true, screen reader label for the end of the range\n   */\n  rangeEndLabel: {\n    type: String,\n    default: undefined,\n  },\n  /**\n   * @description format to display the `aria-valuenow` attribute for screen readers\n   */\n  formatValueText: {\n    type: definePropType<(val: number) => string>(Function),\n    default: undefined,\n  },\n  /**\n   * @description custom class name for the tooltip\n   */\n  tooltipClass: {\n    type: String,\n    default: undefined,\n  },\n  /**\n   * @description position of Tooltip\n   */\n  placement: {\n    type: String,\n    values: placements,\n    default: 'top',\n  },\n  /**\n   * @description marks, type of key must be `number` and must in closed interval `[min, max]`, each mark can custom style\n   */\n  marks: {\n    type: definePropType<SliderMarks>(Object),\n  },\n  /**\n   * @description whether to trigger form validation\n   */\n  validateEvent: {\n    type: Boolean,\n    default: true,\n  },\n  ...useAriaProps(['ariaLabel']),\n} as const)\nexport type SliderProps = ExtractPropTypes<typeof sliderProps>\n\nconst isValidValue = (value: Arrayable<number>) =>\n  isNumber(value) || (isArray(value) && value.every(isNumber))\nexport const sliderEmits = {\n  [UPDATE_MODEL_EVENT]: isValidValue,\n  [INPUT_EVENT]: isValidValue,\n  [CHANGE_EVENT]: isValidValue,\n}\nexport type SliderEmits = typeof sliderEmits\n\nexport type SliderInstance = InstanceType<typeof Slider>\n"],"mappings":";;;;;;;;;;;;;;AAaY,IAACA,WAAW,GAAGC,UAAU,CAAAC,aAAA;EACnCC,UAAU,EAAE;IACVC,IAAI,EAAEC,cAAc,CAAC,CAACC,MAAM,EAAEC,KAAK,CAAC,CAAC;IACrC,WAAS;EACb,CAAG;EACDC,EAAE,EAAE;IACFJ,IAAI,EAAEK,MAAM;IACZ,WAAS,KAAK;EAClB,CAAG;EACDC,GAAG,EAAE;IACHN,IAAI,EAAEE,MAAM;IACZ,WAAS;EACb,CAAG;EACDK,GAAG,EAAE;IACHP,IAAI,EAAEE,MAAM;IACZ,WAAS;EACb,CAAG;EACDM,IAAI,EAAE;IACJR,IAAI,EAAEE,MAAM;IACZ,WAAS;EACb,CAAG;EACDO,SAAS,EAAEC,OAAO;EAClBC,iBAAiB,EAAE;IACjBX,IAAI,EAAEU,OAAO;IACb,WAAS;EACb,CAAG;EACDE,IAAI,EAAEC,WAAW;EACjBC,SAAS,EAAED,WAAW;EACtBE,SAAS,EAAEL,OAAO;EAClBM,WAAW,EAAE;IACXhB,IAAI,EAAEU,OAAO;IACb,WAAS;EACb,CAAG;EACDO,aAAa,EAAE;IACbjB,IAAI,EAAEC,cAAc,CAACiB,QAAQ,CAAC;IAC9B,WAAS,KAAK;EAClB,CAAG;EACDC,QAAQ,EAAET,OAAO;EACjBU,KAAK,EAAEV,OAAO;EACdW,QAAQ,EAAEX,OAAO;EACjBY,MAAM,EAAEjB,MAAM;EACdkB,QAAQ,EAAE;IACRvB,IAAI,EAAEE,MAAM;IACZ,WAAS;EACb,CAAG;EACDsB,eAAe,EAAE;IACfxB,IAAI,EAAEK,MAAM;IACZ,WAAS,KAAK;EAClB,CAAG;EACDoB,aAAa,EAAE;IACbzB,IAAI,EAAEK,MAAM;IACZ,WAAS,KAAK;EAClB,CAAG;EACDqB,eAAe,EAAE;IACf1B,IAAI,EAAEC,cAAc,CAACiB,QAAQ,CAAC;IAC9B,WAAS,KAAK;EAClB,CAAG;EACDS,YAAY,EAAE;IACZ3B,IAAI,EAAEK,MAAM;IACZ,WAAS,KAAK;EAClB,CAAG;EACDuB,SAAS,EAAE;IACT5B,IAAI,EAAEK,MAAM;IACZwB,MAAM,EAAEC,UAAU;IAClB,WAAS;EACb,CAAG;EACDC,KAAK,EAAE;IACL/B,IAAI,EAAEC,cAAc,CAAC+B,MAAM;EAC/B,CAAG;EACDC,aAAa,EAAE;IACbjC,IAAI,EAAEU,OAAO;IACb,WAAS;EACb;AAAG,GACEwB,YAAY,CAAC,CAAC,WAAW,CAAC,CAAC,CAC/B;AACD,IAAMC,YAAY,GAAG,SAAfA,YAAYA,CAAIC,KAAK;EAAA,OAAKC,QAAQ,CAACD,KAAK,CAAC,IAAIE,OAAO,CAACF,KAAK,CAAC,IAAIA,KAAK,CAACG,KAAK,CAACF,QAAQ,CAAC;AAAA;AAC9E,IAACG,WAAW,GAAAC,eAAA,CAAAA,eAAA,CAAAA,eAAA,KACrBC,kBAAkB,EAAGP,YAAY,GACjCQ,WAAW,EAAGR,YAAY,GAC1BS,YAAY,EAAGT,YAAY,CAC9B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}