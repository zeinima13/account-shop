{"ast":null,"code":"import \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.array.reduce.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.reduce.js\";\nimport { isVNode, h } from 'vue';\nimport { isArray, isFunction } from '@vue/shared';\nimport { addUnit } from '../../../utils/dom/style.mjs';\nvar sumReducer = function sumReducer(sum2, num) {\n  return sum2 + num;\n};\nvar sum = function sum(listLike) {\n  return isArray(listLike) ? listLike.reduce(sumReducer, 0) : listLike;\n};\nvar tryCall = function tryCall(fLike, params) {\n  var defaultRet = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return isFunction(fLike) ? fLike(params) : fLike != null ? fLike : defaultRet;\n};\nvar enforceUnit = function enforceUnit(style) {\n  [\"width\", \"maxWidth\", \"minWidth\", \"height\"].forEach(function (key) {\n    style[key] = addUnit(style[key]);\n  });\n  return style;\n};\nvar componentToSlot = function componentToSlot(ComponentLike) {\n  return isVNode(ComponentLike) ? function (props) {\n    return h(ComponentLike, props);\n  } : ComponentLike;\n};\nexport { componentToSlot, enforceUnit, sum, tryCall };","map":{"version":3,"names":["sumReducer","sum2","num","sum","listLike","isArray","reduce","tryCall","fLike","params","defaultRet","arguments","length","undefined","isFunction","enforceUnit","style","forEach","key","addUnit","componentToSlot","ComponentLike","isVNode","props","h"],"sources":["../../../../../../packages/components/table-v2/src/utils.ts"],"sourcesContent":["import { h, isVNode } from 'vue'\nimport { addUnit, isArray, isFunction } from '@element-plus/utils'\n\nimport type { CSSProperties, Component, Slot } from 'vue'\n\nconst sumReducer = (sum: number, num: number) => sum + num\n\nexport const sum = (listLike: number | number[]) => {\n  return isArray(listLike) ? listLike.reduce(sumReducer, 0) : listLike\n}\n\nexport const tryCall = <T>(\n  fLike: T,\n  params: T extends (...args: infer K) => unknown ? K : any,\n  defaultRet = {}\n) => {\n  return isFunction(fLike) ? fLike(params) : fLike ?? defaultRet\n}\n\nexport const enforceUnit = (style: CSSProperties) => {\n  ;(['width', 'maxWidth', 'minWidth', 'height'] as const).forEach((key) => {\n    style[key] = addUnit(style[key])\n  })\n\n  return style\n}\n\nexport const componentToSlot = <T extends object>(\n  ComponentLike: JSX.Element | ((props: T) => Component<T>) | undefined\n) =>\n  isVNode(ComponentLike)\n    ? (props: T) => h(ComponentLike, props)\n    : (ComponentLike as Slot)\n"],"mappings":";;;;;;;;AAEA,IAAMA,UAAU,GAAG,SAAbA,UAAUA,CAAIC,IAAI,EAAEC,GAAG;EAAA,OAAKD,IAAI,GAAGC,GAAG;AAAA;AAChC,IAACC,GAAG,GAAG,SAANA,GAAGA,CAAIC,QAAQ,EAAK;EAC/B,OAAOC,OAAO,CAACD,QAAQ,CAAC,GAAGA,QAAQ,CAACE,MAAM,CAACN,UAAU,EAAE,CAAC,CAAC,GAAGI,QAAQ;AACtE;AACY,IAACG,OAAO,GAAG,SAAVA,OAAOA,CAAIC,KAAK,EAAEC,MAAM,EAAsB;EAAA,IAApBC,UAAU,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAE;EACpD,OAAOG,UAAU,CAACN,KAAK,CAAC,GAAGA,KAAK,CAACC,MAAM,CAAC,GAAGD,KAAK,IAAI,IAAI,GAAGA,KAAK,GAAGE,UAAU;AAC/E;AACY,IAACK,WAAW,GAAG,SAAdA,WAAWA,CAAIC,KAAK,EAAK;EAEpC,CAAC,OAAO,EAAE,UAAU,EAAE,UAAU,EAAE,QAAQ,CAAC,CAACC,OAAO,CAAC,UAACC,GAAG,EAAK;IAC3DF,KAAK,CAACE,GAAG,CAAC,GAAGC,OAAO,CAACH,KAAK,CAACE,GAAG,CAAC,CAAC;EACpC,CAAG,CAAC;EACF,OAAOF,KAAK;AACd;AACY,IAACI,eAAe,GAAG,SAAlBA,eAAeA,CAAIC,aAAa;EAAA,OAAKC,OAAO,CAACD,aAAa,CAAC,GAAG,UAACE,KAAK;IAAA,OAAKC,CAAC,CAACH,aAAa,EAAEE,KAAK,CAAC;EAAA,IAAGF,aAAA;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}