{"ast":null,"code":"import _defineProperty from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { defineComponent, computed, ref, unref, openBlock, createBlock, mergeProps, withCtx, createElementBlock, normalizeClass, toDisplayString, createCommentVNode, renderSlot, createTextVNode } from 'vue';\nimport { ElTooltip } from '../../tooltip/index.mjs';\nimport { popoverProps, popoverEmits } from './popover2.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { addUnit } from '../../../utils/dom/style.mjs';\nvar updateEventKeyRaw = \"onUpdate:visible\";\nvar __default__ = defineComponent({\n  name: \"ElPopover\"\n});\nvar _sfc_main = /* @__PURE__ */defineComponent(_objectSpread(_objectSpread({}, __default__), {}, {\n  props: popoverProps,\n  emits: popoverEmits,\n  setup: function setup(__props, _ref) {\n    var expose = _ref.expose,\n      emit = _ref.emit;\n    var props = __props;\n    var onUpdateVisible = computed(function () {\n      return props[updateEventKeyRaw];\n    });\n    var ns = useNamespace(\"popover\");\n    var tooltipRef = ref();\n    var popperRef = computed(function () {\n      var _a;\n      return (_a = unref(tooltipRef)) == null ? void 0 : _a.popperRef;\n    });\n    var style = computed(function () {\n      return [{\n        width: addUnit(props.width)\n      }, props.popperStyle];\n    });\n    var kls = computed(function () {\n      return [ns.b(), props.popperClass, _defineProperty({}, ns.m(\"plain\"), !!props.content)];\n    });\n    var gpuAcceleration = computed(function () {\n      return props.transition === \"\".concat(ns.namespace.value, \"-fade-in-linear\");\n    });\n    var hide = function hide() {\n      var _a;\n      (_a = tooltipRef.value) == null ? void 0 : _a.hide();\n    };\n    var beforeEnter = function beforeEnter() {\n      emit(\"before-enter\");\n    };\n    var beforeLeave = function beforeLeave() {\n      emit(\"before-leave\");\n    };\n    var afterEnter = function afterEnter() {\n      emit(\"after-enter\");\n    };\n    var afterLeave = function afterLeave() {\n      emit(\"update:visible\", false);\n      emit(\"after-leave\");\n    };\n    expose({\n      popperRef: popperRef,\n      hide: hide\n    });\n    return function (_ctx, _cache) {\n      return openBlock(), createBlock(unref(ElTooltip), mergeProps({\n        ref_key: \"tooltipRef\",\n        ref: tooltipRef\n      }, _ctx.$attrs, {\n        trigger: _ctx.trigger,\n        placement: _ctx.placement,\n        disabled: _ctx.disabled,\n        visible: _ctx.visible,\n        transition: _ctx.transition,\n        \"popper-options\": _ctx.popperOptions,\n        tabindex: _ctx.tabindex,\n        content: _ctx.content,\n        offset: _ctx.offset,\n        \"show-after\": _ctx.showAfter,\n        \"hide-after\": _ctx.hideAfter,\n        \"auto-close\": _ctx.autoClose,\n        \"show-arrow\": _ctx.showArrow,\n        \"aria-label\": _ctx.title,\n        effect: _ctx.effect,\n        enterable: _ctx.enterable,\n        \"popper-class\": unref(kls),\n        \"popper-style\": unref(style),\n        teleported: _ctx.teleported,\n        persistent: _ctx.persistent,\n        \"gpu-acceleration\": unref(gpuAcceleration),\n        \"onUpdate:visible\": unref(onUpdateVisible),\n        onBeforeShow: beforeEnter,\n        onBeforeHide: beforeLeave,\n        onShow: afterEnter,\n        onHide: afterLeave\n      }), {\n        content: withCtx(function () {\n          return [_ctx.title ? (openBlock(), createElementBlock(\"div\", {\n            key: 0,\n            \"class\": normalizeClass(unref(ns).e(\"title\")),\n            role: \"title\"\n          }, toDisplayString(_ctx.title), 3)) : createCommentVNode(\"v-if\", true), renderSlot(_ctx.$slots, \"default\", {}, function () {\n            return [createTextVNode(toDisplayString(_ctx.content), 1)];\n          })];\n        }),\n        \"default\": withCtx(function () {\n          return [_ctx.$slots.reference ? renderSlot(_ctx.$slots, \"reference\", {\n            key: 0\n          }) : createCommentVNode(\"v-if\", true)];\n        }),\n        _: 3\n      }, 16, [\"trigger\", \"placement\", \"disabled\", \"visible\", \"transition\", \"popper-options\", \"tabindex\", \"content\", \"offset\", \"show-after\", \"hide-after\", \"auto-close\", \"show-arrow\", \"aria-label\", \"effect\", \"enterable\", \"popper-class\", \"popper-style\", \"teleported\", \"persistent\", \"gpu-acceleration\", \"onUpdate:visible\"]);\n    };\n  }\n}));\nvar Popover = /* @__PURE__ */_export_sfc(_sfc_main, [[\"__file\", \"popover.vue\"]]);\nexport { Popover as default };","map":{"version":3,"names":["name","onUpdateVisible","computed","props","updateEventKeyRaw","ns","useNamespace","tooltipRef","ref","popperRef","_a","unref","style","width","addUnit","popperStyle","kls","b","popperClass","_defineProperty","m","content","gpuAcceleration","transition","concat","namespace","value","hide","beforeEnter","emit","beforeLeave","afterEnter","afterLeave","expose"],"sources":["../../../../../../packages/components/popover/src/popover.vue"],"sourcesContent":["<template>\n  <el-tooltip\n    ref=\"tooltipRef\"\n    v-bind=\"$attrs\"\n    :trigger=\"trigger\"\n    :placement=\"placement\"\n    :disabled=\"disabled\"\n    :visible=\"visible\"\n    :transition=\"transition\"\n    :popper-options=\"popperOptions\"\n    :tabindex=\"tabindex\"\n    :content=\"content\"\n    :offset=\"offset\"\n    :show-after=\"showAfter\"\n    :hide-after=\"hideAfter\"\n    :auto-close=\"autoClose\"\n    :show-arrow=\"showArrow\"\n    :aria-label=\"title\"\n    :effect=\"effect\"\n    :enterable=\"enterable\"\n    :popper-class=\"kls\"\n    :popper-style=\"style\"\n    :teleported=\"teleported\"\n    :persistent=\"persistent\"\n    :gpu-acceleration=\"gpuAcceleration\"\n    @update:visible=\"onUpdateVisible\"\n    @before-show=\"beforeEnter\"\n    @before-hide=\"beforeLeave\"\n    @show=\"afterEnter\"\n    @hide=\"afterLeave\"\n  >\n    <template v-if=\"$slots.reference\">\n      <slot name=\"reference\" />\n    </template>\n\n    <template #content>\n      <div v-if=\"title\" :class=\"ns.e('title')\" role=\"title\">\n        {{ title }}\n      </div>\n      <slot>\n        {{ content }}\n      </slot>\n    </template>\n  </el-tooltip>\n</template>\n<script lang=\"ts\" setup>\nimport { computed, ref, unref } from 'vue'\nimport { ElTooltip } from '@element-plus/components/tooltip'\nimport { addUnit } from '@element-plus/utils'\nimport { useNamespace } from '@element-plus/hooks'\nimport { popoverEmits, popoverProps } from './popover'\nimport type { TooltipInstance } from '@element-plus/components/tooltip'\n\ndefineOptions({\n  name: 'ElPopover',\n})\n\nconst props = defineProps(popoverProps)\nconst emit = defineEmits(popoverEmits)\n\nconst updateEventKeyRaw = `onUpdate:visible` as const\n\nconst onUpdateVisible = computed(() => {\n  return props[updateEventKeyRaw]\n})\n\nconst ns = useNamespace('popover')\nconst tooltipRef = ref<TooltipInstance>()\nconst popperRef = computed(() => {\n  return unref(tooltipRef)?.popperRef\n})\n\nconst style = computed(() => {\n  return [\n    {\n      width: addUnit(props.width),\n    },\n    props.popperStyle!,\n  ]\n})\n\nconst kls = computed(() => {\n  return [ns.b(), props.popperClass!, { [ns.m('plain')]: !!props.content }]\n})\n\nconst gpuAcceleration = computed(() => {\n  return props.transition === `${ns.namespace.value}-fade-in-linear`\n})\n\nconst hide = () => {\n  tooltipRef.value?.hide()\n}\n\nconst beforeEnter = () => {\n  emit('before-enter')\n}\nconst beforeLeave = () => {\n  emit('before-leave')\n}\n\nconst afterEnter = () => {\n  emit('after-enter')\n}\n\nconst afterLeave = () => {\n  emit('update:visible', false)\n  emit('after-leave')\n}\n\ndefineExpose({\n  /** @description popper ref */\n  popperRef,\n  /** @description hide popover */\n  hide,\n})\n</script>\n"],"mappings":";;;;;;;;;iCAqDc;EACZA,IAAM;AACR;;;;;;;;IAOM,IAAAC,eAAA,GAAkBC,QAAA,CAAS,YAAM;MACrC,OAAOC,KAAA,CAAMC,iBAAiB;IAAA,CAC/B;IAEK,IAAAC,EAAA,GAAKC,YAAA,CAAa,SAAS;IACjC,IAAMC,UAAA,GAAaC,GAAqB;IAClC,IAAAC,SAAA,GAAYP,QAAA,CAAS,YAAM;MACxB,IAAAQ,EAAA;MACR,QAAAA,EAAA,GAAAC,KAAA,CAAAJ,UAAA,sBAAAG,EAAA,CAAAD,SAAA;IAED,CAAM;IACG,IAAAG,KAAA,GAAAV,QAAA;MACL,QACE;QACFW,KAAA,EAAAC,OAAA,CAAAX,KAAA,CAAAU,KAAA;MAAA,CACM,EACRV,KAAA,CAAAY,WAAA,CACD;IAED,CAAM;IACJ,IAAAC,GAAO,GAAId,QAAK;MACjB,QAAAG,EAAA,CAAAY,CAAA,IAAAd,KAAA,CAAAe,WAAA,EAAAC,eAAA,KAAAd,EAAA,CAAAe,CAAA,aAAAjB,KAAA,CAAAkB,OAAA;IAED,CAAM;IACJ,IAAAC,eAAa,GAAApB,QAAkB;MAChC,OAAAC,KAAA,CAAAoB,UAAA,QAAAC,MAAA,CAAAnB,EAAA,CAAAoB,SAAA,CAAAC,KAAA;IAED;IACE,IAAAC,IAAA,GAAW,SAAXA,KAAA,EAAW;MACb,IAAAjB,EAAA;MAEA,CAAAA,EAAA,GAAAH,UAAA,CAAAmB,KAA0B,qBAAAhB,EAAA,CAAAiB,IAAA;IACxB;IACF,IAAAC,WAAA,YAAAA,YAAA;MACAC,IAAM,eAAoB;IACxB;IACF,IAAAC,WAAA,YAAAA,YAAA;MAEAD,IAAM,eAAmB;IACvB;IACF,IAAAE,UAAA,YAAAA,WAAA;MAEAF,IAAM,cAAmB;IACvB;IACA,IAAAG,UAAkB,YAAlBA,UAAkBA,CAAA;MACpBH,IAAA;MAEaA,IAAA;IAAA;IAEXI,MAAA;MAAAxB,SAAA,EAAAA,SAAA;MAEAkB,IAAA,EAAAA;IAAA,CACD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}