{"ast":null,"code":"import _defineProperty from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { createVNode, renderSlot, mergeProps } from 'vue';\nimport { oppositeOrderMap, SortOrder, Alignment } from '../constants.mjs';\nimport { placeholderSign } from '../private.mjs';\nimport { enforceUnit, componentToSlot, tryCall } from '../utils.mjs';\nimport HeaderCell$1 from '../components/header-cell.mjs';\nimport SortIcon from '../components/sort-icon.mjs';\nvar HeaderCellRenderer = function HeaderCellRenderer(props, _ref) {\n  var slots = _ref.slots;\n  var column = props.column,\n    ns = props.ns,\n    style = props.style,\n    onColumnSorted = props.onColumnSorted;\n  var cellStyle = enforceUnit(style);\n  if (column.placeholderSign === placeholderSign) {\n    return createVNode(\"div\", {\n      \"class\": ns.em(\"header-row-cell\", \"placeholder\"),\n      \"style\": cellStyle\n    }, null);\n  }\n  var headerCellRenderer = column.headerCellRenderer,\n    headerClass = column.headerClass,\n    sortable = column.sortable;\n  var cellProps = _objectSpread(_objectSpread({}, props), {}, {\n    \"class\": ns.e(\"header-cell-text\")\n  });\n  var columnCellRenderer = componentToSlot(headerCellRenderer);\n  var Cell = columnCellRenderer ? columnCellRenderer(cellProps) : renderSlot(slots, \"default\", cellProps, function () {\n    return [createVNode(HeaderCell$1, cellProps, null)];\n  });\n  var sortBy = props.sortBy,\n    sortState = props.sortState,\n    headerCellProps = props.headerCellProps;\n  var sorting, sortOrder;\n  if (sortState) {\n    var order = sortState[column.key];\n    sorting = Boolean(oppositeOrderMap[order]);\n    sortOrder = sorting ? order : SortOrder.ASC;\n  } else {\n    sorting = column.key === sortBy.key;\n    sortOrder = sorting ? sortBy.order : SortOrder.ASC;\n  }\n  var cellKls = [ns.e(\"header-cell\"), tryCall(headerClass, props, \"\"), column.align === Alignment.CENTER && ns.is(\"align-center\"), column.align === Alignment.RIGHT && ns.is(\"align-right\"), sortable && ns.is(\"sortable\")];\n  var cellWrapperProps = _objectSpread(_objectSpread({}, tryCall(headerCellProps, props)), {}, _defineProperty({\n    onClick: column.sortable ? onColumnSorted : void 0,\n    \"class\": cellKls,\n    style: cellStyle\n  }, \"data-key\", column.key));\n  return createVNode(\"div\", mergeProps(cellWrapperProps, {\n    \"role\": \"columnheader\"\n  }), [Cell, sortable && createVNode(SortIcon, {\n    \"class\": [ns.e(\"sort-icon\"), sorting && ns.is(\"sorting\")],\n    \"sortOrder\": sortOrder\n  }, null)]);\n};\nvar HeaderCell = HeaderCellRenderer;\nexport { HeaderCell as default };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}