{"ast":null,"code":"import _defineProperty from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport { buildProps, definePropType } from '../../../utils/vue/props/runtime.mjs';\nimport { mutable } from '../../../utils/typescript.mjs';\nimport { iconPropType } from '../../../utils/vue/icon.mjs';\nimport { isBoolean } from '../../../utils/types.mjs';\nvar ROOT_TREE_INJECTION_KEY = Symbol();\nvar EMPTY_NODE = {\n  key: -1,\n  level: -1,\n  data: {}\n};\nvar TreeOptionsEnum = /* @__PURE__ */function (TreeOptionsEnum2) {\n  TreeOptionsEnum2[\"KEY\"] = \"id\";\n  TreeOptionsEnum2[\"LABEL\"] = \"label\";\n  TreeOptionsEnum2[\"CHILDREN\"] = \"children\";\n  TreeOptionsEnum2[\"DISABLED\"] = \"disabled\";\n  TreeOptionsEnum2[\"CLASS\"] = \"\";\n  return TreeOptionsEnum2;\n}(TreeOptionsEnum || {});\nvar SetOperationEnum = /* @__PURE__ */function (SetOperationEnum2) {\n  SetOperationEnum2[\"ADD\"] = \"add\";\n  SetOperationEnum2[\"DELETE\"] = \"delete\";\n  return SetOperationEnum2;\n}(SetOperationEnum || {});\nvar itemSize = {\n  type: Number,\n  \"default\": 26\n};\nvar treeProps = buildProps({\n  data: {\n    type: definePropType(Array),\n    \"default\": function _default() {\n      return mutable([]);\n    }\n  },\n  emptyText: {\n    type: String\n  },\n  height: {\n    type: Number,\n    \"default\": 200\n  },\n  props: {\n    type: definePropType(Object),\n    \"default\": function _default() {\n      return mutable({\n        children: \"children\" /* CHILDREN */,\n        label: \"label\" /* LABEL */,\n        disabled: \"disabled\" /* DISABLED */,\n        value: \"id\" /* KEY */,\n        \"class\": \"\" /* CLASS */\n      });\n    }\n  },\n  highlightCurrent: {\n    type: Boolean,\n    \"default\": false\n  },\n  showCheckbox: {\n    type: Boolean,\n    \"default\": false\n  },\n  defaultCheckedKeys: {\n    type: definePropType(Array),\n    \"default\": function _default() {\n      return mutable([]);\n    }\n  },\n  checkStrictly: {\n    type: Boolean,\n    \"default\": false\n  },\n  defaultExpandedKeys: {\n    type: definePropType(Array),\n    \"default\": function _default() {\n      return mutable([]);\n    }\n  },\n  indent: {\n    type: Number,\n    \"default\": 16\n  },\n  itemSize: itemSize,\n  icon: {\n    type: iconPropType\n  },\n  expandOnClickNode: {\n    type: Boolean,\n    \"default\": true\n  },\n  checkOnClickNode: {\n    type: Boolean,\n    \"default\": false\n  },\n  currentNodeKey: {\n    type: definePropType([String, Number])\n  },\n  accordion: {\n    type: Boolean,\n    \"default\": false\n  },\n  filterMethod: {\n    type: definePropType(Function)\n  },\n  perfMode: {\n    type: Boolean,\n    \"default\": true\n  }\n});\nvar treeNodeProps = buildProps({\n  node: {\n    type: definePropType(Object),\n    \"default\": function _default() {\n      return mutable(EMPTY_NODE);\n    }\n  },\n  expanded: {\n    type: Boolean,\n    \"default\": false\n  },\n  checked: {\n    type: Boolean,\n    \"default\": false\n  },\n  indeterminate: {\n    type: Boolean,\n    \"default\": false\n  },\n  showCheckbox: {\n    type: Boolean,\n    \"default\": false\n  },\n  disabled: {\n    type: Boolean,\n    \"default\": false\n  },\n  current: {\n    type: Boolean,\n    \"default\": false\n  },\n  hiddenExpandIcon: {\n    type: Boolean,\n    \"default\": false\n  },\n  itemSize: itemSize\n});\nvar treeNodeContentProps = buildProps({\n  node: {\n    type: definePropType(Object),\n    required: true\n  }\n});\nvar NODE_CLICK = \"node-click\";\nvar NODE_DROP = \"node-drop\";\nvar NODE_EXPAND = \"node-expand\";\nvar NODE_COLLAPSE = \"node-collapse\";\nvar CURRENT_CHANGE = \"current-change\";\nvar NODE_CHECK = \"check\";\nvar NODE_CHECK_CHANGE = \"check-change\";\nvar NODE_CONTEXTMENU = \"node-contextmenu\";\nvar treeEmits = _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty({}, NODE_CLICK, function (data, node, e) {\n  return data && node && e;\n}), NODE_DROP, function (data, node, e) {\n  return data && node && e;\n}), NODE_EXPAND, function (data, node) {\n  return data && node;\n}), NODE_COLLAPSE, function (data, node) {\n  return data && node;\n}), CURRENT_CHANGE, function (data, node) {\n  return data && node;\n}), NODE_CHECK, function (data, checkedInfo) {\n  return data && checkedInfo;\n}), NODE_CHECK_CHANGE, function (data, checked) {\n  return data && isBoolean(checked);\n}), NODE_CONTEXTMENU, function (evt, data, node) {\n  return evt && data && node;\n});\nvar treeNodeEmits = {\n  click: function click(node, e) {\n    return !!(node && e);\n  },\n  drop: function drop(node, e) {\n    return !!(node && e);\n  },\n  toggle: function toggle(node) {\n    return !!node;\n  },\n  check: function check(node, checked) {\n    return node && isBoolean(checked);\n  }\n};\nexport { CURRENT_CHANGE, NODE_CHECK, NODE_CHECK_CHANGE, NODE_CLICK, NODE_COLLAPSE, NODE_CONTEXTMENU, NODE_DROP, NODE_EXPAND, ROOT_TREE_INJECTION_KEY, SetOperationEnum, TreeOptionsEnum, treeEmits, treeNodeContentProps, treeNodeEmits, treeNodeProps, treeProps };","map":{"version":3,"names":["ROOT_TREE_INJECTION_KEY","Symbol","EMPTY_NODE","key","level","data","TreeOptionsEnum","TreeOptionsEnum2","SetOperationEnum","SetOperationEnum2","itemSize","type","Number","treeProps","buildProps","definePropType","Array","default","mutable","emptyText","String","height","props","Object","children","label","disabled","value","highlightCurrent","Boolean","showCheckbox","defaultCheckedKeys","checkStrictly","defaultExpandedKeys","indent","icon","iconPropType","expandOnClickNode","checkOnClickNode","currentNodeKey","accordion","filterMethod","Function","perfMode","treeNodeProps","node","expanded","checked","indeterminate","current","hiddenExpandIcon","treeNodeContentProps","required","NODE_CLICK","NODE_DROP","NODE_EXPAND","NODE_COLLAPSE","CURRENT_CHANGE","NODE_CHECK","NODE_CHECK_CHANGE","NODE_CONTEXTMENU","treeEmits","_defineProperty","e","checkedInfo","isBoolean","evt","treeNodeEmits","click","drop","toggle","check"],"sources":["../../../../../../packages/components/tree-v2/src/virtual-tree.ts"],"sourcesContent":["import {\n  buildProps,\n  definePropType,\n  iconPropType,\n  isBoolean,\n  mutable,\n} from '@element-plus/utils'\nimport type { CheckboxValueType } from '@element-plus/components/checkbox'\nimport type { InjectionKey } from 'vue'\nimport type { TreeNodeData } from '@element-plus/components/tree/src/tree.type'\nimport type {\n  CheckedInfo,\n  FilterMethod,\n  TreeContext,\n  TreeData,\n  TreeKey,\n  TreeNode,\n  TreeOptionProps,\n} from './types'\n\n// constants\nexport const ROOT_TREE_INJECTION_KEY: InjectionKey<TreeContext> = Symbol()\nconst EMPTY_NODE = {\n  key: -1,\n  level: -1,\n  data: {},\n} as const\n\n// enums\nexport enum TreeOptionsEnum {\n  KEY = 'id',\n  LABEL = 'label',\n  CHILDREN = 'children',\n  DISABLED = 'disabled',\n  CLASS = '',\n}\n\nexport const enum SetOperationEnum {\n  ADD = 'add',\n  DELETE = 'delete',\n}\n\nconst itemSize = {\n  type: Number,\n  default: 26,\n}\n\n// props\nexport const treeProps = buildProps({\n  data: {\n    type: definePropType<TreeData>(Array),\n    default: () => mutable([] as const),\n  },\n  emptyText: {\n    type: String,\n  },\n  height: {\n    type: Number,\n    default: 200,\n  },\n  props: {\n    type: definePropType<TreeOptionProps>(Object),\n    default: () =>\n      mutable({\n        children: TreeOptionsEnum.CHILDREN,\n        label: TreeOptionsEnum.LABEL,\n        disabled: TreeOptionsEnum.DISABLED,\n        value: TreeOptionsEnum.KEY,\n        class: TreeOptionsEnum.CLASS,\n      } as const),\n  },\n  highlightCurrent: {\n    type: Boolean,\n    default: false,\n  },\n  showCheckbox: {\n    type: Boolean,\n    default: false,\n  },\n  defaultCheckedKeys: {\n    type: definePropType<TreeKey[]>(Array),\n    default: () => mutable([] as const),\n  },\n  // Whether checked state of a node not affects its father and\n  // child nodes when show-checkbox is true\n  checkStrictly: {\n    type: Boolean,\n    default: false,\n  },\n  defaultExpandedKeys: {\n    type: definePropType<TreeKey[]>(Array),\n    default: () => mutable([] as const),\n  },\n  indent: {\n    type: Number,\n    default: 16,\n  },\n  itemSize,\n  icon: {\n    type: iconPropType,\n  },\n  expandOnClickNode: {\n    type: Boolean,\n    default: true,\n  },\n  checkOnClickNode: {\n    type: Boolean,\n    default: false,\n  },\n  currentNodeKey: {\n    type: definePropType<TreeKey>([String, Number]),\n  },\n  // TODO need to optimization\n  accordion: {\n    type: Boolean,\n    default: false,\n  },\n  filterMethod: {\n    type: definePropType<FilterMethod>(Function),\n  },\n  // Performance mode will increase memory usage, but scrolling will be smoother\n  perfMode: {\n    type: Boolean,\n    default: true,\n  },\n} as const)\n\nexport const treeNodeProps = buildProps({\n  node: {\n    type: definePropType<TreeNode>(Object),\n    default: () => mutable(EMPTY_NODE),\n  },\n  expanded: {\n    type: Boolean,\n    default: false,\n  },\n  checked: {\n    type: Boolean,\n    default: false,\n  },\n  indeterminate: {\n    type: Boolean,\n    default: false,\n  },\n  showCheckbox: {\n    type: Boolean,\n    default: false,\n  },\n  disabled: {\n    type: Boolean,\n    default: false,\n  },\n  current: {\n    type: Boolean,\n    default: false,\n  },\n  hiddenExpandIcon: {\n    type: Boolean,\n    default: false,\n  },\n  itemSize,\n} as const)\n\nexport const treeNodeContentProps = buildProps({\n  node: {\n    type: definePropType<TreeNode>(Object),\n    required: true,\n  },\n} as const)\n\n// emits\nexport const NODE_CLICK = 'node-click'\nexport const NODE_DROP = 'node-drop'\nexport const NODE_EXPAND = 'node-expand'\nexport const NODE_COLLAPSE = 'node-collapse'\nexport const CURRENT_CHANGE = 'current-change'\nexport const NODE_CHECK = 'check'\nexport const NODE_CHECK_CHANGE = 'check-change'\nexport const NODE_CONTEXTMENU = 'node-contextmenu'\n\nexport const treeEmits = {\n  [NODE_CLICK]: (data: TreeNodeData, node: TreeNode, e: MouseEvent) =>\n    data && node && e,\n  [NODE_DROP]: (data: TreeNodeData, node: TreeNode, e: DragEvent) =>\n    data && node && e,\n  [NODE_EXPAND]: (data: TreeNodeData, node: TreeNode) => data && node,\n  [NODE_COLLAPSE]: (data: TreeNodeData, node: TreeNode) => data && node,\n  [CURRENT_CHANGE]: (data: TreeNodeData, node: TreeNode) => data && node,\n  [NODE_CHECK]: (data: TreeNodeData, checkedInfo: CheckedInfo) =>\n    data && checkedInfo,\n  [NODE_CHECK_CHANGE]: (data: TreeNodeData, checked: boolean) =>\n    data && isBoolean(checked),\n  [NODE_CONTEXTMENU]: (evt: Event, data: TreeNodeData, node: TreeNode) =>\n    evt && data && node,\n}\n\nexport const treeNodeEmits = {\n  click: (node: TreeNode, e: MouseEvent) => !!(node && e),\n  drop: (node: TreeNode, e: DragEvent) => !!(node && e),\n  toggle: (node: TreeNode) => !!node,\n  check: (node: TreeNode, checked: CheckboxValueType) =>\n    node && isBoolean(checked),\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}