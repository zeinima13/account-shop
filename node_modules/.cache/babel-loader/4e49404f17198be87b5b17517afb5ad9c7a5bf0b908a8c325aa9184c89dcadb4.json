{"ast":null,"code":"import _slicedToArray from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { defineComponent, ref, createVNode, Fragment } from 'vue';\nimport { ensureOnlyChild } from '../../../utils/vue/vnode.mjs';\nimport { buildProps, definePropType } from '../../../utils/vue/props/runtime.mjs';\nimport { composeRefs } from '../../../utils/vue/refs.mjs';\nvar forwardRefProps = buildProps({\n  setRef: {\n    type: definePropType(Function),\n    required: true\n  },\n  onlyChild: Boolean\n});\nvar ForwardRef = defineComponent({\n  props: forwardRefProps,\n  setup: function setup(props, _ref) {\n    var slots = _ref.slots;\n    var fragmentRef = ref();\n    var setRef = composeRefs(fragmentRef, function (el) {\n      if (el) {\n        props.setRef(el.nextElementSibling);\n      } else {\n        props.setRef(null);\n      }\n    });\n    return function () {\n      var _a;\n      var _ref2 = ((_a = slots[\"default\"]) == null ? void 0 : _a.call(slots)) || [],\n        _ref3 = _slicedToArray(_ref2, 1),\n        firstChild = _ref3[0];\n      var child = props.onlyChild ? ensureOnlyChild(firstChild.children) : firstChild.children;\n      return createVNode(Fragment, {\n        \"ref\": setRef\n      }, [child]);\n    };\n  }\n});\nexport { ForwardRef as default, forwardRefProps };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}