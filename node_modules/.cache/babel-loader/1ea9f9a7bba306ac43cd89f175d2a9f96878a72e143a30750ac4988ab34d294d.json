{"ast":null,"code":"import _slicedToArray from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { defineComponent, ref, createVNode, Fragment } from 'vue';\nimport { ensureOnlyChild } from '../../../utils/vue/vnode.mjs';\nimport { buildProps, definePropType } from '../../../utils/vue/props/runtime.mjs';\nimport { composeRefs } from '../../../utils/vue/refs.mjs';\nvar forwardRefProps = buildProps({\n  setRef: {\n    type: definePropType(Function),\n    required: true\n  },\n  onlyChild: Boolean\n});\nvar ForwardRef = defineComponent({\n  props: forwardRefProps,\n  setup: function setup(props, _ref) {\n    var slots = _ref.slots;\n    var fragmentRef = ref();\n    var setRef = composeRefs(fragmentRef, function (el) {\n      if (el) {\n        props.setRef(el.nextElementSibling);\n      } else {\n        props.setRef(null);\n      }\n    });\n    return function () {\n      var _a;\n      var _ref2 = ((_a = slots[\"default\"]) == null ? void 0 : _a.call(slots)) || [],\n        _ref3 = _slicedToArray(_ref2, 1),\n        firstChild = _ref3[0];\n      var child = props.onlyChild ? ensureOnlyChild(firstChild.children) : firstChild.children;\n      return createVNode(Fragment, {\n        \"ref\": setRef\n      }, [child]);\n    };\n  }\n});\nexport { ForwardRef as default, forwardRefProps };","map":{"version":3,"names":["forwardRefProps","buildProps","setRef","type","definePropType","Function","required","onlyChild","Boolean","ForwardRef","defineComponent","props","setup","_ref","fragmentRef","ref","composeRefs","el","nextElementSibling","_a","slots","call","_ref3","_slicedToArray","_ref2","firstChild","child","ensureOnlyChild","children","createVNode","Fragment"],"sources":["../../../../../../packages/components/tooltip-v2/src/forward-ref.tsx"],"sourcesContent":["import { Fragment, defineComponent, ref } from 'vue'\nimport {\n  buildProps,\n  composeRefs,\n  definePropType,\n  ensureOnlyChild,\n} from '@element-plus/utils'\n\nimport type { ExtractPropTypes, VNodeArrayChildren } from 'vue'\n\nexport type RefSetter = (el: HTMLElement | null) => void\n\nexport const forwardRefProps = buildProps({\n  setRef: { type: definePropType<RefSetter>(Function), required: true },\n  onlyChild: Boolean,\n} as const)\n\nexport type ForwardRefProps = ExtractPropTypes<typeof forwardRefProps>\n\n// TODO: consider make this component a reusable component without the only child feature.\nexport default defineComponent({\n  props: forwardRefProps,\n  setup(props, { slots }) {\n    const fragmentRef = ref()\n    const setRef = composeRefs(fragmentRef, (el) => {\n      // vue fragments is represented as a text element.\n      // The first element sibling should be the first element children of fragment.\n      // This is how we get the element.\n      if (el) {\n        props.setRef(\n          (el as HTMLElement).nextElementSibling as HTMLElement | null\n        )\n      } else {\n        props.setRef(null)\n      }\n    })\n    return () => {\n      const [firstChild] = slots.default?.() || []\n      const child = props.onlyChild\n        ? ensureOnlyChild(firstChild.children as VNodeArrayChildren)\n        : firstChild.children\n      // Dunno why the ref for jsx complains about the typing issue which was not\n      // in template\n      return <Fragment ref={setRef as any}>{child}</Fragment>\n    }\n  },\n})\n"],"mappings":";;;;;AAYa,IAAAA,eAAe,GAAGC,UAAU,CAAC;EACxCC,MAAM,EAAE;IAAEC,IAAI,EAAEC,cAAc,CAAYC,QAAZ,CAAtB;IAA6CC,QAAQ,EAAE;GADvB;EAExCC,SAAS,EAAEC;AAF6B,CAAD;AAOzC,IAAAC,UAAA,GAAAC,eAAA;EACAC,KAAA,EAAAX,eAAA;EACEY,KAAK,WAALA,KAAKD,MADwB,EAAAE,IAAA,EAExB;IAAA,I;IAAU,IAAAC,WAAA,GAAAC,GAAA;IAAS,IAAAb,MAAA,GAAAc,WAAA,CAAAF,WAAA,YAAAG,EAAA;MAChB,IAAAA,EAAA;QACNN,KAAA,CAAAT,MAAe,CAAAe,EAAA,CAAAC,kBAAW;MACxB;QACAP,KAAA,CAAAT,MAAA;MACA;IACA;IACE,mBAAM;MAGP,IAAMiB,EAAA;kBACL,EAAAA,EAAA,GAAAC,KAAA,gCAAAD,EAAA,CAAAE,IAAA,CAAAD,KAAA;QAAAE,KAAA,GAAAC,cAAA,CAAAC,KAAA;QAAKC,UAAL,GAAAH,KAAA;MACD,IAAAI,KAAA,GAAAf,KAAA,CAAAJ,SAAA,GAAAoB,eAAA,CAAAF,UAAA,CAAAG,QAAA,IAAAH,UAAA,CAAAG,QAAA;MAVH,OAAAC,WAAA,CAAAC,QAAA;QAYA,KAAa,EAAA5B;MACX,IAAAwB,KAAM;IACN;EAIA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}