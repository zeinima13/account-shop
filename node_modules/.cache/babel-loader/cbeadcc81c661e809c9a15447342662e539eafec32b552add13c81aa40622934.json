{"ast":null,"code":"import \"core-js/modules/es.array.every.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/es.string.trim.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.every.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport dayjs from 'dayjs';\nimport { isEmpty } from '../../../utils/types.mjs';\nimport { isArray, isDate } from '@vue/shared';\nvar buildTimeList = function buildTimeList(value, bound) {\n  return [value > 0 ? value - 1 : void 0, value, value < bound ? value + 1 : void 0];\n};\nvar rangeArr = function rangeArr(n) {\n  return Array.from(Array.from({\n    length: n\n  }).keys());\n};\nvar extractDateFormat = function extractDateFormat(format) {\n  return format.replace(/\\W?m{1,2}|\\W?ZZ/g, \"\").replace(/\\W?h{1,2}|\\W?s{1,3}|\\W?a/gi, \"\").trim();\n};\nvar extractTimeFormat = function extractTimeFormat(format) {\n  return format.replace(/\\W?D{1,2}|\\W?Do|\\W?d{1,4}|\\W?M{1,4}|\\W?Y{2,4}/g, \"\").trim();\n};\nvar dateEquals = function dateEquals(a, b) {\n  var aIsDate = isDate(a);\n  var bIsDate = isDate(b);\n  if (aIsDate && bIsDate) {\n    return a.getTime() === b.getTime();\n  }\n  if (!aIsDate && !bIsDate) {\n    return a === b;\n  }\n  return false;\n};\nvar valueEquals = function valueEquals(a, b) {\n  var aIsArray = isArray(a);\n  var bIsArray = isArray(b);\n  if (aIsArray && bIsArray) {\n    if (a.length !== b.length) {\n      return false;\n    }\n    return a.every(function (item, index) {\n      return dateEquals(item, b[index]);\n    });\n  }\n  if (!aIsArray && !bIsArray) {\n    return dateEquals(a, b);\n  }\n  return false;\n};\nvar parseDate = function parseDate(date, format, lang) {\n  var day = isEmpty(format) || format === \"x\" ? dayjs(date).locale(lang) : dayjs(date, format).locale(lang);\n  return day.isValid() ? day : void 0;\n};\nvar formatter = function formatter(date, format, lang) {\n  if (isEmpty(format)) return date;\n  if (format === \"x\") return +date;\n  return dayjs(date).locale(lang).format(format);\n};\nvar makeList = function makeList(total, method) {\n  var _a;\n  var arr = [];\n  var disabledArr = method == null ? void 0 : method();\n  for (var i = 0; i < total; i++) {\n    arr.push((_a = disabledArr == null ? void 0 : disabledArr.includes(i)) != null ? _a : false);\n  }\n  return arr;\n};\nvar dayOrDaysToDate = function dayOrDaysToDate(dayOrDays) {\n  return isArray(dayOrDays) ? dayOrDays.map(function (d) {\n    return d.toDate();\n  }) : dayOrDays.toDate();\n};\nexport { buildTimeList, dateEquals, dayOrDaysToDate, extractDateFormat, extractTimeFormat, formatter, makeList, parseDate, rangeArr, valueEquals };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}