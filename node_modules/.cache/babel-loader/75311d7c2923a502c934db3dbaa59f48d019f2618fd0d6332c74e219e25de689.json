{"ast":null,"code":"import _objectSpread from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { defineComponent, reactive, toRefs, openBlock, createElementBlock, normalizeClass, unref, normalizeStyle, createVNode, withCtx, createElementVNode, toDisplayString } from 'vue';\nimport { ElTooltip } from '../../tooltip/index.mjs';\nimport { sliderButtonProps, sliderButtonEmits } from './button.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useSliderButton } from './composables/use-slider-button.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nvar __default__ = defineComponent({\n  name: \"ElSliderButton\"\n});\nvar _sfc_main = /* @__PURE__ */defineComponent(_objectSpread(_objectSpread({}, __default__), {}, {\n  props: sliderButtonProps,\n  emits: sliderButtonEmits,\n  setup: function setup(__props, _ref) {\n    var expose = _ref.expose,\n      emit = _ref.emit;\n    var props = __props;\n    var ns = useNamespace(\"slider\");\n    var initData = reactive({\n      hovering: false,\n      dragging: false,\n      isClick: false,\n      startX: 0,\n      currentX: 0,\n      startY: 0,\n      currentY: 0,\n      startPosition: 0,\n      newPosition: 0,\n      oldValue: props.modelValue\n    });\n    var _useSliderButton = useSliderButton(props, initData, emit),\n      disabled = _useSliderButton.disabled,\n      button = _useSliderButton.button,\n      tooltip = _useSliderButton.tooltip,\n      showTooltip = _useSliderButton.showTooltip,\n      tooltipVisible = _useSliderButton.tooltipVisible,\n      wrapperStyle = _useSliderButton.wrapperStyle,\n      formatValue = _useSliderButton.formatValue,\n      handleMouseEnter = _useSliderButton.handleMouseEnter,\n      handleMouseLeave = _useSliderButton.handleMouseLeave,\n      onButtonDown = _useSliderButton.onButtonDown,\n      onKeyDown = _useSliderButton.onKeyDown,\n      setPosition = _useSliderButton.setPosition;\n    var _toRefs = toRefs(initData),\n      hovering = _toRefs.hovering,\n      dragging = _toRefs.dragging;\n    expose({\n      onButtonDown: onButtonDown,\n      onKeyDown: onKeyDown,\n      setPosition: setPosition,\n      hovering: hovering,\n      dragging: dragging\n    });\n    return function (_ctx, _cache) {\n      return openBlock(), createElementBlock(\"div\", {\n        ref_key: \"button\",\n        ref: button,\n        \"class\": normalizeClass([unref(ns).e(\"button-wrapper\"), {\n          hover: unref(hovering),\n          dragging: unref(dragging)\n        }]),\n        style: normalizeStyle(unref(wrapperStyle)),\n        tabindex: unref(disabled) ? -1 : 0,\n        onMouseenter: unref(handleMouseEnter),\n        onMouseleave: unref(handleMouseLeave),\n        onMousedown: unref(onButtonDown),\n        onFocus: unref(handleMouseEnter),\n        onBlur: unref(handleMouseLeave),\n        onKeydown: unref(onKeyDown)\n      }, [createVNode(unref(ElTooltip), {\n        ref_key: \"tooltip\",\n        ref: tooltip,\n        visible: unref(tooltipVisible),\n        placement: _ctx.placement,\n        \"fallback-placements\": [\"top\", \"bottom\", \"right\", \"left\"],\n        \"stop-popper-mouse-event\": false,\n        \"popper-class\": _ctx.tooltipClass,\n        disabled: !unref(showTooltip),\n        persistent: unref(showTooltip)\n      }, {\n        content: withCtx(function () {\n          return [createElementVNode(\"span\", null, toDisplayString(unref(formatValue)), 1)];\n        }),\n        \"default\": withCtx(function () {\n          return [createElementVNode(\"div\", {\n            \"class\": normalizeClass([unref(ns).e(\"button\"), {\n              hover: unref(hovering),\n              dragging: unref(dragging)\n            }])\n          }, null, 2)];\n        }),\n        _: 1\n      }, 8, [\"visible\", \"placement\", \"popper-class\", \"disabled\", \"persistent\"])], 46, [\"tabindex\", \"onMouseenter\", \"onMouseleave\", \"onMousedown\", \"onFocus\", \"onBlur\", \"onKeydown\"]);\n    };\n  }\n}));\nvar SliderButton = /* @__PURE__ */_export_sfc(_sfc_main, [[\"__file\", \"button.vue\"]]);\nexport { SliderButton as default };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}