{"ast":null,"code":"import _createForOfIteratorHelper from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport { inject, provide } from 'vue';\nfunction useNodeExpandEventBroadcast(props) {\n  var parentNodeMap = inject(\"TreeNodeMap\", null);\n  var currentNodeMap = {\n    treeNodeExpand: function treeNodeExpand(node) {\n      if (props.node !== node) {\n        props.node.collapse();\n      }\n    },\n    children: []\n  };\n  if (parentNodeMap) {\n    parentNodeMap.children.push(currentNodeMap);\n  }\n  provide(\"TreeNodeMap\", currentNodeMap);\n  return {\n    broadcastExpanded: function broadcastExpanded(node) {\n      if (!props.accordion) return;\n      var _iterator = _createForOfIteratorHelper(currentNodeMap.children),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var childNode = _step.value;\n          childNode.treeNodeExpand(node);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n  };\n}\nexport { useNodeExpandEventBroadcast };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}