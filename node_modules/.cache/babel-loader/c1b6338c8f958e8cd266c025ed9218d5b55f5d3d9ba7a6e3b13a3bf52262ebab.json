{"ast":null,"code":"import _objectSpread from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { defineComponent, ref, computed, toRef, watch, useSlots, provide, openBlock, createElementBlock, Fragment, createVNode, unref, withCtx, createElementVNode, mergeProps, normalizeStyle, createBlock, renderSlot, createCommentVNode } from 'vue';\nimport { useVModel } from '@vueuse/core';\nimport { ElTeleport } from '../../teleport/index.mjs';\nimport ElTourMask from './mask2.mjs';\nimport ElTourContent from './content2.mjs';\nimport ElTourSteps from './steps.mjs';\nimport { tourProps, tourEmits } from './tour.mjs';\nimport { useTarget, tourKey } from './helper.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { isBoolean } from '../../../utils/types.mjs';\nimport { useZIndex } from '../../../hooks/use-z-index/index.mjs';\nvar __default__ = defineComponent({\n  name: \"ElTour\"\n});\nvar _sfc_main = /* @__PURE__ */defineComponent(_objectSpread(_objectSpread({}, __default__), {}, {\n  props: tourProps,\n  emits: tourEmits,\n  setup: function setup(__props, _ref) {\n    var emit = _ref.emit;\n    var props = __props;\n    var ns = useNamespace(\"tour\");\n    var total = ref(0);\n    var currentStep = ref();\n    var current = useVModel(props, \"current\", emit, {\n      passive: true\n    });\n    var currentTarget = computed(function () {\n      var _a;\n      return (_a = currentStep.value) == null ? void 0 : _a.target;\n    });\n    var kls = computed(function () {\n      return [ns.b(), mergedType.value === \"primary\" ? ns.m(\"primary\") : \"\"];\n    });\n    var mergedPlacement = computed(function () {\n      var _a;\n      return ((_a = currentStep.value) == null ? void 0 : _a.placement) || props.placement;\n    });\n    var mergedContentStyle = computed(function () {\n      var _a, _b;\n      return (_b = (_a = currentStep.value) == null ? void 0 : _a.contentStyle) != null ? _b : props.contentStyle;\n    });\n    var mergedMask = computed(function () {\n      var _a, _b;\n      return (_b = (_a = currentStep.value) == null ? void 0 : _a.mask) != null ? _b : props.mask;\n    });\n    var mergedShowMask = computed(function () {\n      return !!mergedMask.value && props.modelValue;\n    });\n    var mergedMaskStyle = computed(function () {\n      return isBoolean(mergedMask.value) ? void 0 : mergedMask.value;\n    });\n    var mergedShowArrow = computed(function () {\n      var _a, _b;\n      return !!currentTarget.value && ((_b = (_a = currentStep.value) == null ? void 0 : _a.showArrow) != null ? _b : props.showArrow);\n    });\n    var mergedScrollIntoViewOptions = computed(function () {\n      var _a, _b;\n      return (_b = (_a = currentStep.value) == null ? void 0 : _a.scrollIntoViewOptions) != null ? _b : props.scrollIntoViewOptions;\n    });\n    var mergedType = computed(function () {\n      var _a, _b;\n      return (_b = (_a = currentStep.value) == null ? void 0 : _a.type) != null ? _b : props.type;\n    });\n    var _useZIndex = useZIndex(),\n      nextZIndex = _useZIndex.nextZIndex;\n    var nowZIndex = nextZIndex();\n    var mergedZIndex = computed(function () {\n      var _a;\n      return (_a = props.zIndex) != null ? _a : nowZIndex;\n    });\n    var _useTarget = useTarget(currentTarget, toRef(props, \"modelValue\"), toRef(props, \"gap\"), mergedMask, mergedScrollIntoViewOptions),\n      pos = _useTarget.mergedPosInfo,\n      triggerTarget = _useTarget.triggerTarget;\n    watch(function () {\n      return props.modelValue;\n    }, function (val) {\n      if (!val) {\n        current.value = 0;\n      }\n    });\n    var onEscClose = function onEscClose() {\n      if (props.closeOnPressEscape) {\n        emit(\"update:modelValue\", false);\n        emit(\"close\", current.value);\n      }\n    };\n    var onUpdateTotal = function onUpdateTotal(val) {\n      total.value = val;\n    };\n    var slots = useSlots();\n    provide(tourKey, {\n      currentStep: currentStep,\n      current: current,\n      total: total,\n      showClose: toRef(props, \"showClose\"),\n      closeIcon: toRef(props, \"closeIcon\"),\n      mergedType: mergedType,\n      ns: ns,\n      slots: slots,\n      updateModelValue: function updateModelValue(modelValue) {\n        emit(\"update:modelValue\", modelValue);\n      },\n      onClose: function onClose() {\n        emit(\"close\", current.value);\n      },\n      onFinish: function onFinish() {\n        emit(\"finish\");\n      },\n      onChange: function onChange() {\n        emit(\"change\", current.value);\n      }\n    });\n    return function (_ctx, _cache) {\n      return openBlock(), createElementBlock(Fragment, null, [createVNode(unref(ElTeleport), {\n        to: _ctx.appendTo\n      }, {\n        \"default\": withCtx(function () {\n          var _a, _b;\n          return [createElementVNode(\"div\", mergeProps({\n            \"class\": unref(kls)\n          }, _ctx.$attrs), [createVNode(ElTourMask, {\n            visible: unref(mergedShowMask),\n            fill: (_a = unref(mergedMaskStyle)) == null ? void 0 : _a.color,\n            style: normalizeStyle((_b = unref(mergedMaskStyle)) == null ? void 0 : _b.style),\n            pos: unref(pos),\n            \"z-index\": unref(mergedZIndex),\n            \"target-area-clickable\": _ctx.targetAreaClickable\n          }, null, 8, [\"visible\", \"fill\", \"style\", \"pos\", \"z-index\", \"target-area-clickable\"]), _ctx.modelValue ? (openBlock(), createBlock(ElTourContent, {\n            key: unref(current),\n            reference: unref(triggerTarget),\n            placement: unref(mergedPlacement),\n            \"show-arrow\": unref(mergedShowArrow),\n            \"z-index\": unref(mergedZIndex),\n            style: normalizeStyle(unref(mergedContentStyle)),\n            onClose: onEscClose\n          }, {\n            \"default\": withCtx(function () {\n              return [createVNode(unref(ElTourSteps), {\n                current: unref(current),\n                onUpdateTotal: onUpdateTotal\n              }, {\n                \"default\": withCtx(function () {\n                  return [renderSlot(_ctx.$slots, \"default\")];\n                }),\n                _: 3\n              }, 8, [\"current\"])];\n            }),\n            _: 3\n          }, 8, [\"reference\", \"placement\", \"show-arrow\", \"z-index\", \"style\"])) : createCommentVNode(\"v-if\", true)], 16)];\n        }),\n        _: 3\n      }, 8, [\"to\"]), createCommentVNode(\" just for IDE \"), createCommentVNode(\"v-if\", true)], 64);\n    };\n  }\n}));\nvar Tour = /* @__PURE__ */_export_sfc(_sfc_main, [[\"__file\", \"tour.vue\"]]);\nexport { Tour as default };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}