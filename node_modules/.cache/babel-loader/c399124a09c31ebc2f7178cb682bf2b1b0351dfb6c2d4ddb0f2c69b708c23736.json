{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _slicedToArray from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.number.is-nan.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/es.string.starts-with.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport { ref, watchEffect, watch, unref, computed, onMounted, nextTick } from 'vue';\nimport { useEventListener, useResizeObserver } from '@vueuse/core';\nimport { useFormSize } from '../../../form/src/hooks/use-form-common-props.mjs';\nfunction useStyle(props, layout, store, table) {\n  var isHidden = ref(false);\n  var renderExpanded = ref(null);\n  var resizeProxyVisible = ref(false);\n  var setDragVisible = function setDragVisible(visible) {\n    resizeProxyVisible.value = visible;\n  };\n  var resizeState = ref({\n    width: null,\n    height: null,\n    headerHeight: null\n  });\n  var isGroup = ref(false);\n  var scrollbarViewStyle = {\n    display: \"inline-block\",\n    verticalAlign: \"middle\"\n  };\n  var tableWidth = ref();\n  var tableScrollHeight = ref(0);\n  var bodyScrollHeight = ref(0);\n  var headerScrollHeight = ref(0);\n  var footerScrollHeight = ref(0);\n  var appendScrollHeight = ref(0);\n  watchEffect(function () {\n    layout.setHeight(props.height);\n  });\n  watchEffect(function () {\n    layout.setMaxHeight(props.maxHeight);\n  });\n  watch(function () {\n    return [props.currentRowKey, store.states.rowKey];\n  }, function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n      currentRowKey = _ref2[0],\n      rowKey = _ref2[1];\n    if (!unref(rowKey) || !unref(currentRowKey)) return;\n    store.setCurrentRowKey(\"\".concat(currentRowKey));\n  }, {\n    immediate: true\n  });\n  watch(function () {\n    return props.data;\n  }, function (data) {\n    table.store.commit(\"setData\", data);\n  }, {\n    immediate: true,\n    deep: true\n  });\n  watchEffect(function () {\n    if (props.expandRowKeys) {\n      store.setExpandRowKeysAdapter(props.expandRowKeys);\n    }\n  });\n  var handleMouseLeave = function handleMouseLeave() {\n    table.store.commit(\"setHoverRow\", null);\n    if (table.hoverState) table.hoverState = null;\n  };\n  var handleHeaderFooterMousewheel = function handleHeaderFooterMousewheel(event, data) {\n    var pixelX = data.pixelX,\n      pixelY = data.pixelY;\n    if (Math.abs(pixelX) >= Math.abs(pixelY)) {\n      table.refs.bodyWrapper.scrollLeft += data.pixelX / 5;\n    }\n  };\n  var shouldUpdateHeight = computed(function () {\n    return props.height || props.maxHeight || store.states.fixedColumns.value.length > 0 || store.states.rightFixedColumns.value.length > 0;\n  });\n  var tableBodyStyles = computed(function () {\n    return {\n      width: layout.bodyWidth.value ? \"\".concat(layout.bodyWidth.value, \"px\") : \"\"\n    };\n  });\n  var doLayout = function doLayout() {\n    if (shouldUpdateHeight.value) {\n      layout.updateElsHeight();\n    }\n    layout.updateColumnsWidth();\n    requestAnimationFrame(syncPosition);\n  };\n  onMounted(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n    var el, tableHeader;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return nextTick();\n        case 2:\n          store.updateColumns();\n          bindEvents();\n          requestAnimationFrame(doLayout);\n          el = table.vnode.el;\n          tableHeader = table.refs.headerWrapper;\n          if (props.flexible && el && el.parentElement) {\n            el.parentElement.style.minWidth = \"0\";\n          }\n          resizeState.value = {\n            width: tableWidth.value = el.offsetWidth,\n            height: el.offsetHeight,\n            headerHeight: props.showHeader && tableHeader ? tableHeader.offsetHeight : null\n          };\n          store.states.columns.value.forEach(function (column) {\n            if (column.filteredValue && column.filteredValue.length) {\n              table.store.commit(\"filterChange\", {\n                column: column,\n                values: column.filteredValue,\n                silent: true\n              });\n            }\n          });\n          table.$ready = true;\n        case 11:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  })));\n  var setScrollClassByEl = function setScrollClassByEl(el, className) {\n    if (!el) return;\n    var classList = Array.from(el.classList).filter(function (item) {\n      return !item.startsWith(\"is-scrolling-\");\n    });\n    classList.push(layout.scrollX.value ? className : \"is-scrolling-none\");\n    el.className = classList.join(\" \");\n  };\n  var setScrollClass = function setScrollClass(className) {\n    var tableWrapper = table.refs.tableWrapper;\n    setScrollClassByEl(tableWrapper, className);\n  };\n  var hasScrollClass = function hasScrollClass(className) {\n    var tableWrapper = table.refs.tableWrapper;\n    return !!(tableWrapper && tableWrapper.classList.contains(className));\n  };\n  var syncPosition = function syncPosition() {\n    if (!table.refs.scrollBarRef) return;\n    if (!layout.scrollX.value) {\n      var scrollingNoneClass = \"is-scrolling-none\";\n      if (!hasScrollClass(scrollingNoneClass)) {\n        setScrollClass(scrollingNoneClass);\n      }\n      return;\n    }\n    var scrollContainer = table.refs.scrollBarRef.wrapRef;\n    if (!scrollContainer) return;\n    var scrollLeft = scrollContainer.scrollLeft,\n      offsetWidth = scrollContainer.offsetWidth,\n      scrollWidth = scrollContainer.scrollWidth;\n    var _table$refs = table.refs,\n      headerWrapper = _table$refs.headerWrapper,\n      footerWrapper = _table$refs.footerWrapper;\n    if (headerWrapper) headerWrapper.scrollLeft = scrollLeft;\n    if (footerWrapper) footerWrapper.scrollLeft = scrollLeft;\n    var maxScrollLeftPosition = scrollWidth - offsetWidth - 1;\n    if (scrollLeft >= maxScrollLeftPosition) {\n      setScrollClass(\"is-scrolling-right\");\n    } else if (scrollLeft === 0) {\n      setScrollClass(\"is-scrolling-left\");\n    } else {\n      setScrollClass(\"is-scrolling-middle\");\n    }\n  };\n  var bindEvents = function bindEvents() {\n    if (!table.refs.scrollBarRef) return;\n    if (table.refs.scrollBarRef.wrapRef) {\n      useEventListener(table.refs.scrollBarRef.wrapRef, \"scroll\", syncPosition, {\n        passive: true\n      });\n    }\n    if (props.fit) {\n      useResizeObserver(table.vnode.el, resizeListener);\n    } else {\n      useEventListener(window, \"resize\", resizeListener);\n    }\n    useResizeObserver(table.refs.bodyWrapper, function () {\n      var _a, _b;\n      resizeListener();\n      (_b = (_a = table.refs) == null ? void 0 : _a.scrollBarRef) == null ? void 0 : _b.update();\n    });\n  };\n  var resizeListener = function resizeListener() {\n    var _a, _b, _c, _d;\n    var el = table.vnode.el;\n    if (!table.$ready || !el) return;\n    var shouldUpdateLayout = false;\n    var _resizeState$value = resizeState.value,\n      oldWidth = _resizeState$value.width,\n      oldHeight = _resizeState$value.height,\n      oldHeaderHeight = _resizeState$value.headerHeight;\n    var width = tableWidth.value = el.offsetWidth;\n    if (oldWidth !== width) {\n      shouldUpdateLayout = true;\n    }\n    var height = el.offsetHeight;\n    if ((props.height || shouldUpdateHeight.value) && oldHeight !== height) {\n      shouldUpdateLayout = true;\n    }\n    var tableHeader = props.tableLayout === \"fixed\" ? table.refs.headerWrapper : (_a = table.refs.tableHeaderRef) == null ? void 0 : _a.$el;\n    if (props.showHeader && (tableHeader == null ? void 0 : tableHeader.offsetHeight) !== oldHeaderHeight) {\n      shouldUpdateLayout = true;\n    }\n    tableScrollHeight.value = ((_b = table.refs.tableWrapper) == null ? void 0 : _b.scrollHeight) || 0;\n    headerScrollHeight.value = (tableHeader == null ? void 0 : tableHeader.scrollHeight) || 0;\n    footerScrollHeight.value = ((_c = table.refs.footerWrapper) == null ? void 0 : _c.offsetHeight) || 0;\n    appendScrollHeight.value = ((_d = table.refs.appendWrapper) == null ? void 0 : _d.offsetHeight) || 0;\n    bodyScrollHeight.value = tableScrollHeight.value - headerScrollHeight.value - footerScrollHeight.value - appendScrollHeight.value;\n    if (shouldUpdateLayout) {\n      resizeState.value = {\n        width: width,\n        height: height,\n        headerHeight: props.showHeader && (tableHeader == null ? void 0 : tableHeader.offsetHeight) || 0\n      };\n      doLayout();\n    }\n  };\n  var tableSize = useFormSize();\n  var bodyWidth = computed(function () {\n    var bodyWidth_ = layout.bodyWidth,\n      scrollY = layout.scrollY,\n      gutterWidth = layout.gutterWidth;\n    return bodyWidth_.value ? \"\".concat(bodyWidth_.value - (scrollY.value ? gutterWidth : 0), \"px\") : \"\";\n  });\n  var tableLayout = computed(function () {\n    if (props.maxHeight) return \"fixed\";\n    return props.tableLayout;\n  });\n  var emptyBlockStyle = computed(function () {\n    if (props.data && props.data.length) return null;\n    var height = \"100%\";\n    if (props.height && bodyScrollHeight.value) {\n      height = \"\".concat(bodyScrollHeight.value, \"px\");\n    }\n    var width = tableWidth.value;\n    return {\n      width: width ? \"\".concat(width, \"px\") : \"\",\n      height: height\n    };\n  });\n  var scrollbarStyle = computed(function () {\n    if (props.height) {\n      return {\n        height: \"100%\"\n      };\n    }\n    if (props.maxHeight) {\n      if (!Number.isNaN(Number(props.maxHeight))) {\n        return {\n          maxHeight: \"\".concat(props.maxHeight - headerScrollHeight.value - footerScrollHeight.value, \"px\")\n        };\n      } else {\n        return {\n          maxHeight: \"calc(\".concat(props.maxHeight, \" - \").concat(headerScrollHeight.value + footerScrollHeight.value, \"px)\")\n        };\n      }\n    }\n    return {};\n  });\n  var handleFixedMousewheel = function handleFixedMousewheel(event, data) {\n    var bodyWrapper = table.refs.bodyWrapper;\n    if (Math.abs(data.spinY) > 0) {\n      var currentScrollTop = bodyWrapper.scrollTop;\n      if (data.pixelY < 0 && currentScrollTop !== 0) {\n        event.preventDefault();\n      }\n      if (data.pixelY > 0 && bodyWrapper.scrollHeight - bodyWrapper.clientHeight > currentScrollTop) {\n        event.preventDefault();\n      }\n      bodyWrapper.scrollTop += Math.ceil(data.pixelY / 5);\n    } else {\n      bodyWrapper.scrollLeft += Math.ceil(data.pixelX / 5);\n    }\n  };\n  return {\n    isHidden: isHidden,\n    renderExpanded: renderExpanded,\n    setDragVisible: setDragVisible,\n    isGroup: isGroup,\n    handleMouseLeave: handleMouseLeave,\n    handleHeaderFooterMousewheel: handleHeaderFooterMousewheel,\n    tableSize: tableSize,\n    emptyBlockStyle: emptyBlockStyle,\n    handleFixedMousewheel: handleFixedMousewheel,\n    resizeProxyVisible: resizeProxyVisible,\n    bodyWidth: bodyWidth,\n    resizeState: resizeState,\n    doLayout: doLayout,\n    tableBodyStyles: tableBodyStyles,\n    tableLayout: tableLayout,\n    scrollbarViewStyle: scrollbarViewStyle,\n    scrollbarStyle: scrollbarStyle\n  };\n}\nexport { useStyle as default };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}