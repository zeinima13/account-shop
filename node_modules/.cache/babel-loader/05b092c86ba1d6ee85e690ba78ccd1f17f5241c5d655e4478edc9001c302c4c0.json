{"ast":null,"code":"import { useAttrs, useSlots, computed } from 'vue';\nimport { useNamespace } from '../../../../hooks/use-namespace/index.mjs';\nfunction useInputTagDom(_ref) {\n  var props = _ref.props,\n    isFocused = _ref.isFocused,\n    hovering = _ref.hovering,\n    disabled = _ref.disabled,\n    inputValue = _ref.inputValue,\n    size = _ref.size,\n    validateState = _ref.validateState,\n    validateIcon = _ref.validateIcon,\n    needStatusIcon = _ref.needStatusIcon;\n  var attrs = useAttrs();\n  var slots = useSlots();\n  var ns = useNamespace(\"input-tag\");\n  var nsInput = useNamespace(\"input\");\n  var containerKls = computed(function () {\n    return [ns.b(), ns.is(\"focused\", isFocused.value), ns.is(\"hovering\", hovering.value), ns.is(\"disabled\", disabled.value), ns.m(size.value), ns.e(\"wrapper\"), attrs[\"class\"]];\n  });\n  var containerStyle = computed(function () {\n    return [attrs.style];\n  });\n  var innerKls = computed(function () {\n    var _a, _b;\n    return [ns.e(\"inner\"), ns.is(\"draggable\", props.draggable), ns.is(\"left-space\", !((_a = props.modelValue) == null ? void 0 : _a.length) && !slots.prefix), ns.is(\"right-space\", !((_b = props.modelValue) == null ? void 0 : _b.length) && !showSuffix.value)];\n  });\n  var showClear = computed(function () {\n    var _a;\n    return props.clearable && !disabled.value && !props.readonly && (((_a = props.modelValue) == null ? void 0 : _a.length) || inputValue.value) && (isFocused.value || hovering.value);\n  });\n  var showSuffix = computed(function () {\n    return slots.suffix || showClear.value || validateState.value && validateIcon.value && needStatusIcon.value;\n  });\n  return {\n    ns: ns,\n    nsInput: nsInput,\n    containerKls: containerKls,\n    containerStyle: containerStyle,\n    innerKls: innerKls,\n    showClear: showClear,\n    showSuffix: showSuffix\n  };\n}\nexport { useInputTagDom };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}