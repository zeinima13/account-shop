{"ast":null,"code":"import _objectSpread from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.find-index.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.number.parse-float.js\";\nimport \"core-js/modules/es.number.to-fixed.js\";\nimport \"core-js/modules/es.object.values.js\";\nimport { defineComponent, markRaw, ref, effectScope, shallowRef, computed, watch, nextTick, onMounted, openBlock, createBlock, unref, withCtx, createVNode, Transition, createElementVNode, normalizeClass, normalizeStyle, withModifiers, createCommentVNode, createElementBlock, Fragment, resolveDynamicComponent, renderList, withDirectives, vShow, renderSlot } from 'vue';\nimport { useEventListener } from '@vueuse/core';\nimport { throttle } from 'lodash-unified';\nimport ElFocusTrap from '../../focus-trap/src/focus-trap.mjs';\nimport { ElTeleport } from '../../teleport/index.mjs';\nimport { ElIcon } from '../../icon/index.mjs';\nimport { FullScreen, ScaleToOriginal, Close, ArrowLeft, ArrowRight, ZoomOut, ZoomIn, RefreshLeft, RefreshRight } from '@element-plus/icons-vue';\nimport { imageViewerProps, imageViewerEmits } from './image-viewer.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useLocale } from '../../../hooks/use-locale/index.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { useZIndex } from '../../../hooks/use-z-index/index.mjs';\nimport { EVENT_CODE } from '../../../constants/aria.mjs';\nimport { keysOf } from '../../../utils/objects.mjs';\nvar __default__ = defineComponent({\n  name: \"ElImageViewer\"\n});\nvar _sfc_main = /* @__PURE__ */defineComponent(_objectSpread(_objectSpread({}, __default__), {}, {\n  props: imageViewerProps,\n  emits: imageViewerEmits,\n  setup: function setup(__props, _ref) {\n    var expose = _ref.expose,\n      emit = _ref.emit;\n    var _a;\n    var props = __props;\n    var modes = {\n      CONTAIN: {\n        name: \"contain\",\n        icon: markRaw(FullScreen)\n      },\n      ORIGINAL: {\n        name: \"original\",\n        icon: markRaw(ScaleToOriginal)\n      }\n    };\n    var _useLocale = useLocale(),\n      t = _useLocale.t;\n    var ns = useNamespace(\"image-viewer\");\n    var _useZIndex = useZIndex(),\n      nextZIndex = _useZIndex.nextZIndex;\n    var wrapper = ref();\n    var imgRefs = ref([]);\n    var scopeEventListener = effectScope();\n    var loading = ref(true);\n    var activeIndex = ref(props.initialIndex);\n    var mode = shallowRef(modes.CONTAIN);\n    var transform = ref({\n      scale: 1,\n      deg: 0,\n      offsetX: 0,\n      offsetY: 0,\n      enableTransition: false\n    });\n    var zIndex = ref((_a = props.zIndex) != null ? _a : nextZIndex());\n    var isSingle = computed(function () {\n      var urlList = props.urlList;\n      return urlList.length <= 1;\n    });\n    var isFirst = computed(function () {\n      return activeIndex.value === 0;\n    });\n    var isLast = computed(function () {\n      return activeIndex.value === props.urlList.length - 1;\n    });\n    var currentImg = computed(function () {\n      return props.urlList[activeIndex.value];\n    });\n    var arrowPrevKls = computed(function () {\n      return [ns.e(\"btn\"), ns.e(\"prev\"), ns.is(\"disabled\", !props.infinite && isFirst.value)];\n    });\n    var arrowNextKls = computed(function () {\n      return [ns.e(\"btn\"), ns.e(\"next\"), ns.is(\"disabled\", !props.infinite && isLast.value)];\n    });\n    var imgStyle = computed(function () {\n      var _transform$value = transform.value,\n        scale = _transform$value.scale,\n        deg = _transform$value.deg,\n        offsetX = _transform$value.offsetX,\n        offsetY = _transform$value.offsetY,\n        enableTransition = _transform$value.enableTransition;\n      var translateX = offsetX / scale;\n      var translateY = offsetY / scale;\n      var radian = deg * Math.PI / 180;\n      var cosRadian = Math.cos(radian);\n      var sinRadian = Math.sin(radian);\n      translateX = translateX * cosRadian + translateY * sinRadian;\n      translateY = translateY * cosRadian - offsetX / scale * sinRadian;\n      var style = {\n        transform: \"scale(\".concat(scale, \") rotate(\").concat(deg, \"deg) translate(\").concat(translateX, \"px, \").concat(translateY, \"px)\"),\n        transition: enableTransition ? \"transform .3s\" : \"\"\n      };\n      if (mode.value.name === modes.CONTAIN.name) {\n        style.maxWidth = style.maxHeight = \"100%\";\n      }\n      return style;\n    });\n    function hide() {\n      unregisterEventListener();\n      emit(\"close\");\n    }\n    function registerEventListener() {\n      var keydownHandler = throttle(function (e) {\n        switch (e.code) {\n          case EVENT_CODE.esc:\n            props.closeOnPressEscape && hide();\n            break;\n          case EVENT_CODE.space:\n            toggleMode();\n            break;\n          case EVENT_CODE.left:\n            prev();\n            break;\n          case EVENT_CODE.up:\n            handleActions(\"zoomIn\");\n            break;\n          case EVENT_CODE.right:\n            next();\n            break;\n          case EVENT_CODE.down:\n            handleActions(\"zoomOut\");\n            break;\n        }\n      });\n      var mousewheelHandler = throttle(function (e) {\n        var delta = e.deltaY || e.deltaX;\n        handleActions(delta < 0 ? \"zoomIn\" : \"zoomOut\", {\n          zoomRate: props.zoomRate,\n          enableTransition: false\n        });\n      });\n      scopeEventListener.run(function () {\n        useEventListener(document, \"keydown\", keydownHandler);\n        useEventListener(document, \"wheel\", mousewheelHandler);\n      });\n    }\n    function unregisterEventListener() {\n      scopeEventListener.stop();\n    }\n    function handleImgLoad() {\n      loading.value = false;\n    }\n    function handleImgError(e) {\n      loading.value = false;\n      e.target.alt = t(\"el.image.error\");\n    }\n    function handleMouseDown(e) {\n      if (loading.value || e.button !== 0 || !wrapper.value) return;\n      transform.value.enableTransition = false;\n      var _transform$value2 = transform.value,\n        offsetX = _transform$value2.offsetX,\n        offsetY = _transform$value2.offsetY;\n      var startX = e.pageX;\n      var startY = e.pageY;\n      var dragHandler = throttle(function (ev) {\n        transform.value = _objectSpread(_objectSpread({}, transform.value), {}, {\n          offsetX: offsetX + ev.pageX - startX,\n          offsetY: offsetY + ev.pageY - startY\n        });\n      });\n      var removeMousemove = useEventListener(document, \"mousemove\", dragHandler);\n      useEventListener(document, \"mouseup\", function () {\n        removeMousemove();\n      });\n      e.preventDefault();\n    }\n    function reset() {\n      transform.value = {\n        scale: 1,\n        deg: 0,\n        offsetX: 0,\n        offsetY: 0,\n        enableTransition: false\n      };\n    }\n    function toggleMode() {\n      if (loading.value) return;\n      var modeNames = keysOf(modes);\n      var modeValues = Object.values(modes);\n      var currentMode = mode.value.name;\n      var index = modeValues.findIndex(function (i) {\n        return i.name === currentMode;\n      });\n      var nextIndex = (index + 1) % modeNames.length;\n      mode.value = modes[modeNames[nextIndex]];\n      reset();\n    }\n    function setActiveItem(index) {\n      var len = props.urlList.length;\n      activeIndex.value = (index + len) % len;\n    }\n    function prev() {\n      if (isFirst.value && !props.infinite) return;\n      setActiveItem(activeIndex.value - 1);\n    }\n    function next() {\n      if (isLast.value && !props.infinite) return;\n      setActiveItem(activeIndex.value + 1);\n    }\n    function handleActions(action) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      if (loading.value) return;\n      var minScale = props.minScale,\n        maxScale = props.maxScale;\n      var _zoomRate$rotateDeg$e = _objectSpread({\n          zoomRate: props.zoomRate,\n          rotateDeg: 90,\n          enableTransition: true\n        }, options),\n        zoomRate = _zoomRate$rotateDeg$e.zoomRate,\n        rotateDeg = _zoomRate$rotateDeg$e.rotateDeg,\n        enableTransition = _zoomRate$rotateDeg$e.enableTransition;\n      switch (action) {\n        case \"zoomOut\":\n          if (transform.value.scale > minScale) {\n            transform.value.scale = Number.parseFloat((transform.value.scale / zoomRate).toFixed(3));\n          }\n          break;\n        case \"zoomIn\":\n          if (transform.value.scale < maxScale) {\n            transform.value.scale = Number.parseFloat((transform.value.scale * zoomRate).toFixed(3));\n          }\n          break;\n        case \"clockwise\":\n          transform.value.deg += rotateDeg;\n          emit(\"rotate\", transform.value.deg);\n          break;\n        case \"anticlockwise\":\n          transform.value.deg -= rotateDeg;\n          emit(\"rotate\", transform.value.deg);\n          break;\n      }\n      transform.value.enableTransition = enableTransition;\n    }\n    function onFocusoutPrevented(event) {\n      var _a2;\n      if (((_a2 = event.detail) == null ? void 0 : _a2.focusReason) === \"pointer\") {\n        event.preventDefault();\n      }\n    }\n    function onCloseRequested() {\n      if (props.closeOnPressEscape) {\n        hide();\n      }\n    }\n    watch(currentImg, function () {\n      nextTick(function () {\n        var $img = imgRefs.value[0];\n        if (!($img == null ? void 0 : $img.complete)) {\n          loading.value = true;\n        }\n      });\n    });\n    watch(activeIndex, function (val) {\n      reset();\n      emit(\"switch\", val);\n    });\n    onMounted(function () {\n      registerEventListener();\n    });\n    expose({\n      setActiveItem: setActiveItem\n    });\n    return function (_ctx, _cache) {\n      return openBlock(), createBlock(unref(ElTeleport), {\n        to: \"body\",\n        disabled: !_ctx.teleported\n      }, {\n        \"default\": withCtx(function () {\n          return [createVNode(Transition, {\n            name: \"viewer-fade\",\n            appear: \"\"\n          }, {\n            \"default\": withCtx(function () {\n              return [createElementVNode(\"div\", {\n                ref_key: \"wrapper\",\n                ref: wrapper,\n                tabindex: -1,\n                \"class\": normalizeClass(unref(ns).e(\"wrapper\")),\n                style: normalizeStyle({\n                  zIndex: zIndex.value\n                })\n              }, [createVNode(unref(ElFocusTrap), {\n                loop: \"\",\n                trapped: \"\",\n                \"focus-trap-el\": wrapper.value,\n                \"focus-start-el\": \"container\",\n                onFocusoutPrevented: onFocusoutPrevented,\n                onReleaseRequested: onCloseRequested\n              }, {\n                \"default\": withCtx(function () {\n                  return [createElementVNode(\"div\", {\n                    \"class\": normalizeClass(unref(ns).e(\"mask\")),\n                    onClick: withModifiers(function ($event) {\n                      return _ctx.hideOnClickModal && hide();\n                    }, [\"self\"])\n                  }, null, 10, [\"onClick\"]), createCommentVNode(\" CLOSE \"), createElementVNode(\"span\", {\n                    \"class\": normalizeClass([unref(ns).e(\"btn\"), unref(ns).e(\"close\")]),\n                    onClick: hide\n                  }, [createVNode(unref(ElIcon), null, {\n                    \"default\": withCtx(function () {\n                      return [createVNode(unref(Close))];\n                    }),\n                    _: 1\n                  })], 2), createCommentVNode(\" ARROW \"), !unref(isSingle) ? (openBlock(), createElementBlock(Fragment, {\n                    key: 0\n                  }, [createElementVNode(\"span\", {\n                    \"class\": normalizeClass(unref(arrowPrevKls)),\n                    onClick: prev\n                  }, [createVNode(unref(ElIcon), null, {\n                    \"default\": withCtx(function () {\n                      return [createVNode(unref(ArrowLeft))];\n                    }),\n                    _: 1\n                  })], 2), createElementVNode(\"span\", {\n                    \"class\": normalizeClass(unref(arrowNextKls)),\n                    onClick: next\n                  }, [createVNode(unref(ElIcon), null, {\n                    \"default\": withCtx(function () {\n                      return [createVNode(unref(ArrowRight))];\n                    }),\n                    _: 1\n                  })], 2)], 64)) : createCommentVNode(\"v-if\", true), createCommentVNode(\" ACTIONS \"), createElementVNode(\"div\", {\n                    \"class\": normalizeClass([unref(ns).e(\"btn\"), unref(ns).e(\"actions\")])\n                  }, [createElementVNode(\"div\", {\n                    \"class\": normalizeClass(unref(ns).e(\"actions__inner\"))\n                  }, [createVNode(unref(ElIcon), {\n                    onClick: function onClick($event) {\n                      return handleActions(\"zoomOut\");\n                    }\n                  }, {\n                    \"default\": withCtx(function () {\n                      return [createVNode(unref(ZoomOut))];\n                    }),\n                    _: 1\n                  }, 8, [\"onClick\"]), createVNode(unref(ElIcon), {\n                    onClick: function onClick($event) {\n                      return handleActions(\"zoomIn\");\n                    }\n                  }, {\n                    \"default\": withCtx(function () {\n                      return [createVNode(unref(ZoomIn))];\n                    }),\n                    _: 1\n                  }, 8, [\"onClick\"]), createElementVNode(\"i\", {\n                    \"class\": normalizeClass(unref(ns).e(\"actions__divider\"))\n                  }, null, 2), createVNode(unref(ElIcon), {\n                    onClick: toggleMode\n                  }, {\n                    \"default\": withCtx(function () {\n                      return [(openBlock(), createBlock(resolveDynamicComponent(unref(mode).icon)))];\n                    }),\n                    _: 1\n                  }), createElementVNode(\"i\", {\n                    \"class\": normalizeClass(unref(ns).e(\"actions__divider\"))\n                  }, null, 2), createVNode(unref(ElIcon), {\n                    onClick: function onClick($event) {\n                      return handleActions(\"anticlockwise\");\n                    }\n                  }, {\n                    \"default\": withCtx(function () {\n                      return [createVNode(unref(RefreshLeft))];\n                    }),\n                    _: 1\n                  }, 8, [\"onClick\"]), createVNode(unref(ElIcon), {\n                    onClick: function onClick($event) {\n                      return handleActions(\"clockwise\");\n                    }\n                  }, {\n                    \"default\": withCtx(function () {\n                      return [createVNode(unref(RefreshRight))];\n                    }),\n                    _: 1\n                  }, 8, [\"onClick\"])], 2)], 2), createCommentVNode(\" CANVAS \"), createElementVNode(\"div\", {\n                    \"class\": normalizeClass(unref(ns).e(\"canvas\"))\n                  }, [(openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.urlList, function (url, i) {\n                    return withDirectives((openBlock(), createElementBlock(\"img\", {\n                      ref_for: true,\n                      ref: function ref(el) {\n                        return imgRefs.value[i] = el;\n                      },\n                      key: url,\n                      src: url,\n                      style: normalizeStyle(unref(imgStyle)),\n                      \"class\": normalizeClass(unref(ns).e(\"img\")),\n                      crossorigin: _ctx.crossorigin,\n                      onLoad: handleImgLoad,\n                      onError: handleImgError,\n                      onMousedown: handleMouseDown\n                    }, null, 46, [\"src\", \"crossorigin\"])), [[vShow, i === activeIndex.value]]);\n                  }), 128))], 2), renderSlot(_ctx.$slots, \"default\")];\n                }),\n                _: 3\n              }, 8, [\"focus-trap-el\"])], 6)];\n            }),\n            _: 3\n          })];\n        }),\n        _: 3\n      }, 8, [\"disabled\"]);\n    };\n  }\n}));\nvar ImageViewer = /* @__PURE__ */_export_sfc(_sfc_main, [[\"__file\", \"image-viewer.vue\"]]);\nexport { ImageViewer as default };","map":{"version":3,"names":["name","props","__props","modes","CONTAIN","icon","markRaw","FullScreen","ORIGINAL","ScaleToOriginal","_useLocale","useLocale","t","ns","useNamespace","_useZIndex","useZIndex","nextZIndex","wrapper","ref","imgRefs","scopeEventListener","effectScope","loading","activeIndex","initialIndex","mode","shallowRef","transform","scale","deg","offsetX","offsetY","enableTransition","zIndex","_a","isSingle","computed","urlList","length","isFirst","value","isLast","currentImg","arrowPrevKls","e","is","infinite","arrowNextKls","imgStyle","_transform$value","translateX","translateY","radian","Math","PI","cosRadian","cos","sinRadian","sin","style","concat","transition","maxWidth","maxHeight","hide","unregisterEventListener","emit","registerEventListener","keydownHandler","throttle","code","EVENT_CODE","esc","closeOnPressEscape","space","toggleMode","left","prev","up","handleActions","right","next","down","mousewheelHandler","delta","deltaY","deltaX","zoomRate","run","useEventListener","document","stop","handleImgLoad","handleImgError","target","alt","handleMouseDown","button","_transform$value2","startX","pageX","startY","pageY","dragHandler","ev","_objectSpread","removeMousemove","preventDefault","reset","modeNames","keysOf","modeValues","Object","values","currentMode","index","findIndex","i","nextIndex","setActiveItem","len","action","options","arguments","undefined","minScale","maxScale","_zoomRate$rotateDeg$e","rotateDeg","Number","parseFloat","toFixed","onFocusoutPrevented","event","_a2","detail","focusReason","onCloseRequested","watch","nextTick","$img","complete","val","onMounted","expose"],"sources":["../../../../../../packages/components/image-viewer/src/image-viewer.vue"],"sourcesContent":["<template>\n  <el-teleport to=\"body\" :disabled=\"!teleported\">\n    <transition name=\"viewer-fade\" appear>\n      <div\n        ref=\"wrapper\"\n        :tabindex=\"-1\"\n        :class=\"ns.e('wrapper')\"\n        :style=\"{ zIndex }\"\n      >\n        <el-focus-trap\n          loop\n          trapped\n          :focus-trap-el=\"wrapper\"\n          focus-start-el=\"container\"\n          @focusout-prevented=\"onFocusoutPrevented\"\n          @release-requested=\"onCloseRequested\"\n        >\n          <div :class=\"ns.e('mask')\" @click.self=\"hideOnClickModal && hide()\" />\n\n          <!-- CLOSE -->\n          <span :class=\"[ns.e('btn'), ns.e('close')]\" @click=\"hide\">\n            <el-icon>\n              <Close />\n            </el-icon>\n          </span>\n\n          <!-- ARROW -->\n          <template v-if=\"!isSingle\">\n            <span :class=\"arrowPrevKls\" @click=\"prev\">\n              <el-icon>\n                <ArrowLeft />\n              </el-icon>\n            </span>\n            <span :class=\"arrowNextKls\" @click=\"next\">\n              <el-icon>\n                <ArrowRight />\n              </el-icon>\n            </span>\n          </template>\n          <!-- ACTIONS -->\n          <div :class=\"[ns.e('btn'), ns.e('actions')]\">\n            <div :class=\"ns.e('actions__inner')\">\n              <el-icon @click=\"handleActions('zoomOut')\">\n                <ZoomOut />\n              </el-icon>\n              <el-icon @click=\"handleActions('zoomIn')\">\n                <ZoomIn />\n              </el-icon>\n              <i :class=\"ns.e('actions__divider')\" />\n              <el-icon @click=\"toggleMode\">\n                <component :is=\"mode.icon\" />\n              </el-icon>\n              <i :class=\"ns.e('actions__divider')\" />\n              <el-icon @click=\"handleActions('anticlockwise')\">\n                <RefreshLeft />\n              </el-icon>\n              <el-icon @click=\"handleActions('clockwise')\">\n                <RefreshRight />\n              </el-icon>\n            </div>\n          </div>\n          <!-- CANVAS -->\n          <div :class=\"ns.e('canvas')\">\n            <img\n              v-for=\"(url, i) in urlList\"\n              v-show=\"i === activeIndex\"\n              :ref=\"(el) => (imgRefs[i] = el as HTMLImageElement)\"\n              :key=\"url\"\n              :src=\"url\"\n              :style=\"imgStyle\"\n              :class=\"ns.e('img')\"\n              :crossorigin=\"crossorigin\"\n              @load=\"handleImgLoad\"\n              @error=\"handleImgError\"\n              @mousedown=\"handleMouseDown\"\n            />\n          </div>\n          <slot />\n        </el-focus-trap>\n      </div>\n    </transition>\n  </el-teleport>\n</template>\n\n<script lang=\"ts\" setup>\nimport {\n  computed,\n  effectScope,\n  markRaw,\n  nextTick,\n  onMounted,\n  ref,\n  shallowRef,\n  watch,\n} from 'vue'\nimport { useEventListener } from '@vueuse/core'\nimport { throttle } from 'lodash-unified'\nimport { useLocale, useNamespace, useZIndex } from '@element-plus/hooks'\nimport { EVENT_CODE } from '@element-plus/constants'\nimport { keysOf } from '@element-plus/utils'\nimport ElFocusTrap from '@element-plus/components/focus-trap'\nimport ElTeleport from '@element-plus/components/teleport'\nimport ElIcon from '@element-plus/components/icon'\nimport {\n  ArrowLeft,\n  ArrowRight,\n  Close,\n  FullScreen,\n  RefreshLeft,\n  RefreshRight,\n  ScaleToOriginal,\n  ZoomIn,\n  ZoomOut,\n} from '@element-plus/icons-vue'\nimport { imageViewerEmits, imageViewerProps } from './image-viewer'\n\nimport type { CSSProperties } from 'vue'\nimport type { ImageViewerAction, ImageViewerMode } from './image-viewer'\n\nconst modes: Record<'CONTAIN' | 'ORIGINAL', ImageViewerMode> = {\n  CONTAIN: {\n    name: 'contain',\n    icon: markRaw(FullScreen),\n  },\n  ORIGINAL: {\n    name: 'original',\n    icon: markRaw(ScaleToOriginal),\n  },\n}\n\ndefineOptions({\n  name: 'ElImageViewer',\n})\n\nconst props = defineProps(imageViewerProps)\nconst emit = defineEmits(imageViewerEmits)\n\nconst { t } = useLocale()\nconst ns = useNamespace('image-viewer')\nconst { nextZIndex } = useZIndex()\nconst wrapper = ref<HTMLDivElement>()\nconst imgRefs = ref<HTMLImageElement[]>([])\n\nconst scopeEventListener = effectScope()\n\nconst loading = ref(true)\nconst activeIndex = ref(props.initialIndex)\nconst mode = shallowRef<ImageViewerMode>(modes.CONTAIN)\nconst transform = ref({\n  scale: 1,\n  deg: 0,\n  offsetX: 0,\n  offsetY: 0,\n  enableTransition: false,\n})\nconst zIndex = ref(props.zIndex ?? nextZIndex())\n\nconst isSingle = computed(() => {\n  const { urlList } = props\n  return urlList.length <= 1\n})\n\nconst isFirst = computed(() => {\n  return activeIndex.value === 0\n})\n\nconst isLast = computed(() => {\n  return activeIndex.value === props.urlList.length - 1\n})\n\nconst currentImg = computed(() => {\n  return props.urlList[activeIndex.value]\n})\n\nconst arrowPrevKls = computed(() => [\n  ns.e('btn'),\n  ns.e('prev'),\n  ns.is('disabled', !props.infinite && isFirst.value),\n])\n\nconst arrowNextKls = computed(() => [\n  ns.e('btn'),\n  ns.e('next'),\n  ns.is('disabled', !props.infinite && isLast.value),\n])\n\nconst imgStyle = computed(() => {\n  const { scale, deg, offsetX, offsetY, enableTransition } = transform.value\n  let translateX = offsetX / scale\n  let translateY = offsetY / scale\n\n  const radian = (deg * Math.PI) / 180\n  const cosRadian = Math.cos(radian)\n  const sinRadian = Math.sin(radian)\n  translateX = translateX * cosRadian + translateY * sinRadian\n  translateY = translateY * cosRadian - (offsetX / scale) * sinRadian\n\n  const style: CSSProperties = {\n    transform: `scale(${scale}) rotate(${deg}deg) translate(${translateX}px, ${translateY}px)`,\n    transition: enableTransition ? 'transform .3s' : '',\n  }\n  if (mode.value.name === modes.CONTAIN.name) {\n    style.maxWidth = style.maxHeight = '100%'\n  }\n  return style\n})\n\nfunction hide() {\n  unregisterEventListener()\n  emit('close')\n}\n\nfunction registerEventListener() {\n  const keydownHandler = throttle((e: KeyboardEvent) => {\n    switch (e.code) {\n      // ESC\n      case EVENT_CODE.esc:\n        props.closeOnPressEscape && hide()\n        break\n      // SPACE\n      case EVENT_CODE.space:\n        toggleMode()\n        break\n      // LEFT_ARROW\n      case EVENT_CODE.left:\n        prev()\n        break\n      // UP_ARROW\n      case EVENT_CODE.up:\n        handleActions('zoomIn')\n        break\n      // RIGHT_ARROW\n      case EVENT_CODE.right:\n        next()\n        break\n      // DOWN_ARROW\n      case EVENT_CODE.down:\n        handleActions('zoomOut')\n        break\n    }\n  })\n  const mousewheelHandler = throttle((e: WheelEvent) => {\n    const delta = e.deltaY || e.deltaX\n    handleActions(delta < 0 ? 'zoomIn' : 'zoomOut', {\n      zoomRate: props.zoomRate,\n      enableTransition: false,\n    })\n  })\n\n  scopeEventListener.run(() => {\n    useEventListener(document, 'keydown', keydownHandler)\n    useEventListener(document, 'wheel', mousewheelHandler)\n  })\n}\n\nfunction unregisterEventListener() {\n  scopeEventListener.stop()\n}\n\nfunction handleImgLoad() {\n  loading.value = false\n}\n\nfunction handleImgError(e: Event) {\n  loading.value = false\n  ;(e.target as HTMLImageElement).alt = t('el.image.error')\n}\n\nfunction handleMouseDown(e: MouseEvent) {\n  if (loading.value || e.button !== 0 || !wrapper.value) return\n  transform.value.enableTransition = false\n\n  const { offsetX, offsetY } = transform.value\n  const startX = e.pageX\n  const startY = e.pageY\n\n  const dragHandler = throttle((ev: MouseEvent) => {\n    transform.value = {\n      ...transform.value,\n      offsetX: offsetX + ev.pageX - startX,\n      offsetY: offsetY + ev.pageY - startY,\n    }\n  })\n  const removeMousemove = useEventListener(document, 'mousemove', dragHandler)\n  useEventListener(document, 'mouseup', () => {\n    removeMousemove()\n  })\n\n  e.preventDefault()\n}\n\nfunction reset() {\n  transform.value = {\n    scale: 1,\n    deg: 0,\n    offsetX: 0,\n    offsetY: 0,\n    enableTransition: false,\n  }\n}\n\nfunction toggleMode() {\n  if (loading.value) return\n\n  const modeNames = keysOf(modes)\n  const modeValues = Object.values(modes)\n  const currentMode = mode.value.name\n  const index = modeValues.findIndex((i) => i.name === currentMode)\n  const nextIndex = (index + 1) % modeNames.length\n  mode.value = modes[modeNames[nextIndex]]\n  reset()\n}\n\nfunction setActiveItem(index: number) {\n  const len = props.urlList.length\n  activeIndex.value = (index + len) % len\n}\n\nfunction prev() {\n  if (isFirst.value && !props.infinite) return\n  setActiveItem(activeIndex.value - 1)\n}\n\nfunction next() {\n  if (isLast.value && !props.infinite) return\n  setActiveItem(activeIndex.value + 1)\n}\n\nfunction handleActions(action: ImageViewerAction, options = {}) {\n  if (loading.value) return\n  const { minScale, maxScale } = props\n  const { zoomRate, rotateDeg, enableTransition } = {\n    zoomRate: props.zoomRate,\n    rotateDeg: 90,\n    enableTransition: true,\n    ...options,\n  }\n  switch (action) {\n    case 'zoomOut':\n      if (transform.value.scale > minScale) {\n        transform.value.scale = Number.parseFloat(\n          (transform.value.scale / zoomRate).toFixed(3)\n        )\n      }\n      break\n    case 'zoomIn':\n      if (transform.value.scale < maxScale) {\n        transform.value.scale = Number.parseFloat(\n          (transform.value.scale * zoomRate).toFixed(3)\n        )\n      }\n      break\n    case 'clockwise':\n      transform.value.deg += rotateDeg\n      emit('rotate', transform.value.deg)\n      break\n    case 'anticlockwise':\n      transform.value.deg -= rotateDeg\n      emit('rotate', transform.value.deg)\n      break\n  }\n  transform.value.enableTransition = enableTransition\n}\n\nfunction onFocusoutPrevented(event: CustomEvent) {\n  if (event.detail?.focusReason === 'pointer') {\n    event.preventDefault()\n  }\n}\n\nfunction onCloseRequested() {\n  if (props.closeOnPressEscape) {\n    hide()\n  }\n}\n\nwatch(currentImg, () => {\n  nextTick(() => {\n    const $img = imgRefs.value[0]\n    if (!$img?.complete) {\n      loading.value = true\n    }\n  })\n})\n\nwatch(activeIndex, (val) => {\n  reset()\n  emit('switch', val)\n})\n\nonMounted(() => {\n  registerEventListener()\n})\n\ndefineExpose({\n  /**\n   * @description manually switch image\n   */\n  setActiveItem,\n})\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}