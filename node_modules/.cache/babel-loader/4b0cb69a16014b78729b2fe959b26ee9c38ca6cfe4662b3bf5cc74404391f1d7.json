{"ast":null,"code":"import { inject, computed } from 'vue';\nimport { checkboxGroupContextKey } from '../constants.mjs';\nimport { isUndefined } from '../../../../utils/types.mjs';\nimport { useFormDisabled } from '../../../form/src/hooks/use-form-common-props.mjs';\nvar useCheckboxDisabled = function useCheckboxDisabled(_ref) {\n  var model = _ref.model,\n    isChecked = _ref.isChecked;\n  var checkboxGroup = inject(checkboxGroupContextKey, void 0);\n  var isLimitDisabled = computed(function () {\n    var _a, _b;\n    var max = (_a = checkboxGroup == null ? void 0 : checkboxGroup.max) == null ? void 0 : _a.value;\n    var min = (_b = checkboxGroup == null ? void 0 : checkboxGroup.min) == null ? void 0 : _b.value;\n    return !isUndefined(max) && model.value.length >= max && !isChecked.value || !isUndefined(min) && model.value.length <= min && isChecked.value;\n  });\n  var isDisabled = useFormDisabled(computed(function () {\n    return (checkboxGroup == null ? void 0 : checkboxGroup.disabled.value) || isLimitDisabled.value;\n  }));\n  return {\n    isDisabled: isDisabled,\n    isLimitDisabled: isLimitDisabled\n  };\n};\nexport { useCheckboxDisabled };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}