{"ast":null,"code":"import _toConsumableArray from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _defineProperty from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.every.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.array.index-of.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.number.parse-int.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.every.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/web.timers.js\";\nimport { defineComponent, getCurrentInstance, ref, computed, watch, watchEffect, provide, reactive, onMounted, h, withDirectives, nextTick } from 'vue';\nimport { useResizeObserver } from '@vueuse/core';\nimport { isNil } from 'lodash-unified';\nimport { ElIcon } from '../../icon/index.mjs';\nimport { More } from '@element-plus/icons-vue';\nimport Menu$1 from './utils/menu-bar.mjs';\nimport ElMenuCollapseTransition from './menu-collapse-transition.mjs';\nimport SubMenu from './sub-menu.mjs';\nimport { useMenuCssVar } from './use-menu-css-var.mjs';\nimport ClickOutside from '../../../directives/click-outside/index.mjs';\nimport { buildProps, definePropType } from '../../../utils/vue/props/runtime.mjs';\nimport { mutable } from '../../../utils/typescript.mjs';\nimport { iconPropType } from '../../../utils/vue/icon.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { flattedChildren } from '../../../utils/vue/vnode.mjs';\nimport { isString, isArray, isObject } from '@vue/shared';\nvar menuProps = buildProps({\n  mode: {\n    type: String,\n    values: [\"horizontal\", \"vertical\"],\n    \"default\": \"vertical\"\n  },\n  defaultActive: {\n    type: String,\n    \"default\": \"\"\n  },\n  defaultOpeneds: {\n    type: definePropType(Array),\n    \"default\": function _default() {\n      return mutable([]);\n    }\n  },\n  uniqueOpened: Boolean,\n  router: Boolean,\n  menuTrigger: {\n    type: String,\n    values: [\"hover\", \"click\"],\n    \"default\": \"hover\"\n  },\n  collapse: Boolean,\n  backgroundColor: String,\n  textColor: String,\n  activeTextColor: String,\n  closeOnClickOutside: Boolean,\n  collapseTransition: {\n    type: Boolean,\n    \"default\": true\n  },\n  ellipsis: {\n    type: Boolean,\n    \"default\": true\n  },\n  popperOffset: {\n    type: Number,\n    \"default\": 6\n  },\n  ellipsisIcon: {\n    type: iconPropType,\n    \"default\": function _default() {\n      return More;\n    }\n  },\n  popperEffect: {\n    type: definePropType(String),\n    \"default\": \"dark\"\n  },\n  popperClass: String,\n  showTimeout: {\n    type: Number,\n    \"default\": 300\n  },\n  hideTimeout: {\n    type: Number,\n    \"default\": 300\n  }\n});\nvar checkIndexPath = function checkIndexPath(indexPath) {\n  return isArray(indexPath) && indexPath.every(function (path) {\n    return isString(path);\n  });\n};\nvar menuEmits = {\n  close: function close(index, indexPath) {\n    return isString(index) && checkIndexPath(indexPath);\n  },\n  open: function open(index, indexPath) {\n    return isString(index) && checkIndexPath(indexPath);\n  },\n  select: function select(index, indexPath, item, routerResult) {\n    return isString(index) && checkIndexPath(indexPath) && isObject(item) && (routerResult === void 0 || routerResult instanceof Promise);\n  }\n};\nvar Menu = defineComponent({\n  name: \"ElMenu\",\n  props: menuProps,\n  emits: menuEmits,\n  setup: function setup(props, _ref) {\n    var emit = _ref.emit,\n      slots = _ref.slots,\n      expose = _ref.expose;\n    var instance = getCurrentInstance();\n    var router = instance.appContext.config.globalProperties.$router;\n    var menu = ref();\n    var nsMenu = useNamespace(\"menu\");\n    var nsSubMenu = useNamespace(\"sub-menu\");\n    var sliceIndex = ref(-1);\n    var openedMenus = ref(props.defaultOpeneds && !props.collapse ? props.defaultOpeneds.slice(0) : []);\n    var activeIndex = ref(props.defaultActive);\n    var items = ref({});\n    var subMenus = ref({});\n    var isMenuPopup = computed(function () {\n      return props.mode === \"horizontal\" || props.mode === \"vertical\" && props.collapse;\n    });\n    var initMenu = function initMenu() {\n      var activeItem = activeIndex.value && items.value[activeIndex.value];\n      if (!activeItem || props.mode === \"horizontal\" || props.collapse) return;\n      var indexPath = activeItem.indexPath;\n      indexPath.forEach(function (index) {\n        var subMenu = subMenus.value[index];\n        subMenu && openMenu(index, subMenu.indexPath);\n      });\n    };\n    var openMenu = function openMenu(index, indexPath) {\n      if (openedMenus.value.includes(index)) return;\n      if (props.uniqueOpened) {\n        openedMenus.value = openedMenus.value.filter(function (index2) {\n          return indexPath.includes(index2);\n        });\n      }\n      openedMenus.value.push(index);\n      emit(\"open\", index, indexPath);\n    };\n    var close = function close(index) {\n      var i = openedMenus.value.indexOf(index);\n      if (i !== -1) {\n        openedMenus.value.splice(i, 1);\n      }\n    };\n    var closeMenu = function closeMenu(index, indexPath) {\n      close(index);\n      emit(\"close\", index, indexPath);\n    };\n    var handleSubMenuClick = function handleSubMenuClick(_ref2) {\n      var index = _ref2.index,\n        indexPath = _ref2.indexPath;\n      var isOpened = openedMenus.value.includes(index);\n      if (isOpened) {\n        closeMenu(index, indexPath);\n      } else {\n        openMenu(index, indexPath);\n      }\n    };\n    var handleMenuItemClick = function handleMenuItemClick(menuItem) {\n      if (props.mode === \"horizontal\" || props.collapse) {\n        openedMenus.value = [];\n      }\n      var index = menuItem.index,\n        indexPath = menuItem.indexPath;\n      if (isNil(index) || isNil(indexPath)) return;\n      if (props.router && router) {\n        var route = menuItem.route || index;\n        var routerResult = router.push(route).then(function (res) {\n          if (!res) activeIndex.value = index;\n          return res;\n        });\n        emit(\"select\", index, indexPath, {\n          index: index,\n          indexPath: indexPath,\n          route: route\n        }, routerResult);\n      } else {\n        activeIndex.value = index;\n        emit(\"select\", index, indexPath, {\n          index: index,\n          indexPath: indexPath\n        });\n      }\n    };\n    var updateActiveIndex = function updateActiveIndex(val) {\n      var itemsInData = items.value;\n      var item = itemsInData[val] || activeIndex.value && itemsInData[activeIndex.value] || itemsInData[props.defaultActive];\n      if (item) {\n        activeIndex.value = item.index;\n      } else {\n        activeIndex.value = val;\n      }\n    };\n    var calcMenuItemWidth = function calcMenuItemWidth(menuItem) {\n      var computedStyle = getComputedStyle(menuItem);\n      var marginLeft = Number.parseInt(computedStyle.marginLeft, 10);\n      var marginRight = Number.parseInt(computedStyle.marginRight, 10);\n      return menuItem.offsetWidth + marginLeft + marginRight || 0;\n    };\n    var calcSliceIndex = function calcSliceIndex() {\n      var _a, _b;\n      if (!menu.value) return -1;\n      var items2 = Array.from((_b = (_a = menu.value) == null ? void 0 : _a.childNodes) != null ? _b : []).filter(function (item) {\n        return item.nodeName !== \"#text\" || item.nodeValue;\n      });\n      var moreItemWidth = 64;\n      var computedMenuStyle = getComputedStyle(menu.value);\n      var paddingLeft = Number.parseInt(computedMenuStyle.paddingLeft, 10);\n      var paddingRight = Number.parseInt(computedMenuStyle.paddingRight, 10);\n      var menuWidth = menu.value.clientWidth - paddingLeft - paddingRight;\n      var calcWidth = 0;\n      var sliceIndex2 = 0;\n      items2.forEach(function (item, index) {\n        if (item.nodeName === \"#comment\") return;\n        calcWidth += calcMenuItemWidth(item);\n        if (calcWidth <= menuWidth - moreItemWidth) {\n          sliceIndex2 = index + 1;\n        }\n      });\n      return sliceIndex2 === items2.length ? -1 : sliceIndex2;\n    };\n    var getIndexPath = function getIndexPath(index) {\n      return subMenus.value[index].indexPath;\n    };\n    var debounce = function debounce(fn) {\n      var wait = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 33.34;\n      var timmer;\n      return function () {\n        timmer && clearTimeout(timmer);\n        timmer = setTimeout(function () {\n          fn();\n        }, wait);\n      };\n    };\n    var isFirstTimeRender = true;\n    var handleResize = function handleResize() {\n      if (sliceIndex.value === calcSliceIndex()) return;\n      var callback = function callback() {\n        sliceIndex.value = -1;\n        nextTick(function () {\n          sliceIndex.value = calcSliceIndex();\n        });\n      };\n      isFirstTimeRender ? callback() : debounce(callback)();\n      isFirstTimeRender = false;\n    };\n    watch(function () {\n      return props.defaultActive;\n    }, function (currentActive) {\n      if (!items.value[currentActive]) {\n        activeIndex.value = \"\";\n      }\n      updateActiveIndex(currentActive);\n    });\n    watch(function () {\n      return props.collapse;\n    }, function (value) {\n      if (value) openedMenus.value = [];\n    });\n    watch(items.value, initMenu);\n    var resizeStopper;\n    watchEffect(function () {\n      if (props.mode === \"horizontal\" && props.ellipsis) resizeStopper = useResizeObserver(menu, handleResize).stop;else resizeStopper == null ? void 0 : resizeStopper();\n    });\n    var mouseInChild = ref(false);\n    {\n      var addSubMenu = function addSubMenu(item) {\n        subMenus.value[item.index] = item;\n      };\n      var removeSubMenu = function removeSubMenu(item) {\n        delete subMenus.value[item.index];\n      };\n      var addMenuItem = function addMenuItem(item) {\n        items.value[item.index] = item;\n      };\n      var removeMenuItem = function removeMenuItem(item) {\n        delete items.value[item.index];\n      };\n      provide(\"rootMenu\", reactive({\n        props: props,\n        openedMenus: openedMenus,\n        items: items,\n        subMenus: subMenus,\n        activeIndex: activeIndex,\n        isMenuPopup: isMenuPopup,\n        addMenuItem: addMenuItem,\n        removeMenuItem: removeMenuItem,\n        addSubMenu: addSubMenu,\n        removeSubMenu: removeSubMenu,\n        openMenu: openMenu,\n        closeMenu: closeMenu,\n        handleMenuItemClick: handleMenuItemClick,\n        handleSubMenuClick: handleSubMenuClick\n      }));\n      provide(\"subMenu:\".concat(instance.uid), {\n        addSubMenu: addSubMenu,\n        removeSubMenu: removeSubMenu,\n        mouseInChild: mouseInChild,\n        level: 0\n      });\n    }\n    onMounted(function () {\n      if (props.mode === \"horizontal\") {\n        new Menu$1(instance.vnode.el, nsMenu.namespace.value);\n      }\n    });\n    {\n      var open = function open(index) {\n        var indexPath = subMenus.value[index].indexPath;\n        indexPath.forEach(function (i) {\n          return openMenu(i, indexPath);\n        });\n      };\n      expose({\n        open: open,\n        close: close,\n        handleResize: handleResize\n      });\n    }\n    var ulStyle = useMenuCssVar(props, 0);\n    return function () {\n      var _a, _b;\n      var slot = (_b = (_a = slots[\"default\"]) == null ? void 0 : _a.call(slots)) != null ? _b : [];\n      var vShowMore = [];\n      if (props.mode === \"horizontal\" && menu.value) {\n        var originalSlot = flattedChildren(slot);\n        var slotDefault = sliceIndex.value === -1 ? originalSlot : originalSlot.slice(0, sliceIndex.value);\n        var slotMore = sliceIndex.value === -1 ? [] : originalSlot.slice(sliceIndex.value);\n        if ((slotMore == null ? void 0 : slotMore.length) && props.ellipsis) {\n          slot = slotDefault;\n          vShowMore.push(h(SubMenu, {\n            index: \"sub-menu-more\",\n            \"class\": nsSubMenu.e(\"hide-arrow\"),\n            popperOffset: props.popperOffset\n          }, {\n            title: function title() {\n              return h(ElIcon, {\n                \"class\": nsSubMenu.e(\"icon-more\")\n              }, {\n                \"default\": function _default() {\n                  return h(props.ellipsisIcon);\n                }\n              });\n            },\n            \"default\": function _default() {\n              return slotMore;\n            }\n          }));\n        }\n      }\n      var directives = props.closeOnClickOutside ? [[ClickOutside, function () {\n        if (!openedMenus.value.length) return;\n        if (!mouseInChild.value) {\n          openedMenus.value.forEach(function (openedMenu) {\n            return emit(\"close\", openedMenu, getIndexPath(openedMenu));\n          });\n          openedMenus.value = [];\n        }\n      }]] : [];\n      var vMenu = withDirectives(h(\"ul\", {\n        key: String(props.collapse),\n        role: \"menubar\",\n        ref: menu,\n        style: ulStyle.value,\n        \"class\": _defineProperty(_defineProperty(_defineProperty({}, nsMenu.b(), true), nsMenu.m(props.mode), true), nsMenu.m(\"collapse\"), props.collapse)\n      }, [].concat(_toConsumableArray(slot), vShowMore)), directives);\n      if (props.collapseTransition && props.mode === \"vertical\") {\n        return h(ElMenuCollapseTransition, function () {\n          return vMenu;\n        });\n      }\n      return vMenu;\n    };\n  }\n});\nexport { Menu as default, menuEmits, menuProps };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}