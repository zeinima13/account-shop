{"ast":null,"code":"import _objectSpread from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { defineComponent, ref, inject, computed, onBeforeUnmount, unref, watch, openBlock, createBlock, withCtx, createVNode, Transition, withDirectives, mergeProps, renderSlot, vShow, createCommentVNode } from 'vue';\nimport { onClickOutside } from '@vueuse/core';\nimport '../../popper/index.mjs';\nimport { ElTeleport } from '../../teleport/index.mjs';\nimport { TOOLTIP_INJECTION_KEY } from './constants.mjs';\nimport { useTooltipContentProps } from './content.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { usePopperContainerId } from '../../../hooks/use-popper-container/index.mjs';\nimport ElPopperContent from '../../popper/src/content2.mjs';\nimport { tryFocus } from '../../focus-trap/src/utils.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { composeEventHandlers } from '../../../utils/dom/event.mjs';\nvar __default__ = defineComponent({\n  name: \"ElTooltipContent\",\n  inheritAttrs: false\n});\nvar _sfc_main = /* @__PURE__ */defineComponent(_objectSpread(_objectSpread({}, __default__), {}, {\n  props: useTooltipContentProps,\n  setup: function setup(__props, _ref) {\n    var expose = _ref.expose;\n    var props = __props;\n    var _usePopperContainerId = usePopperContainerId(),\n      selector = _usePopperContainerId.selector;\n    var ns = useNamespace(\"tooltip\");\n    var contentRef = ref();\n    var stopHandle;\n    var _inject = inject(TOOLTIP_INJECTION_KEY, void 0),\n      controlled = _inject.controlled,\n      id = _inject.id,\n      open = _inject.open,\n      trigger = _inject.trigger,\n      onClose = _inject.onClose,\n      onOpen = _inject.onOpen,\n      onShow = _inject.onShow,\n      onHide = _inject.onHide,\n      onBeforeShow = _inject.onBeforeShow,\n      onBeforeHide = _inject.onBeforeHide;\n    var transitionClass = computed(function () {\n      return props.transition || \"\".concat(ns.namespace.value, \"-fade-in-linear\");\n    });\n    var persistentRef = computed(function () {\n      if (process.env.NODE_ENV === \"test\") {\n        return true;\n      }\n      return props.persistent;\n    });\n    onBeforeUnmount(function () {\n      stopHandle == null ? void 0 : stopHandle();\n    });\n    var shouldRender = computed(function () {\n      return unref(persistentRef) ? true : unref(open);\n    });\n    var shouldShow = computed(function () {\n      return props.disabled ? false : unref(open);\n    });\n    var appendTo = computed(function () {\n      return props.appendTo || selector.value;\n    });\n    var contentStyle = computed(function () {\n      var _a;\n      return (_a = props.style) != null ? _a : {};\n    });\n    var ariaHidden = ref(true);\n    var onTransitionLeave = function onTransitionLeave() {\n      onHide();\n      isFocusInsideContent() && tryFocus(document.body);\n      ariaHidden.value = true;\n    };\n    var stopWhenControlled = function stopWhenControlled() {\n      if (unref(controlled)) return true;\n    };\n    var onContentEnter = composeEventHandlers(stopWhenControlled, function () {\n      if (props.enterable && unref(trigger) === \"hover\") {\n        onOpen();\n      }\n    });\n    var onContentLeave = composeEventHandlers(stopWhenControlled, function () {\n      if (unref(trigger) === \"hover\") {\n        onClose();\n      }\n    });\n    var onBeforeEnter = function onBeforeEnter() {\n      var _a, _b;\n      (_b = (_a = contentRef.value) == null ? void 0 : _a.updatePopper) == null ? void 0 : _b.call(_a);\n      onBeforeShow == null ? void 0 : onBeforeShow();\n    };\n    var onBeforeLeave = function onBeforeLeave() {\n      onBeforeHide == null ? void 0 : onBeforeHide();\n    };\n    var onAfterShow = function onAfterShow() {\n      onShow();\n      stopHandle = onClickOutside(computed(function () {\n        var _a;\n        return (_a = contentRef.value) == null ? void 0 : _a.popperContentRef;\n      }), function () {\n        if (unref(controlled)) return;\n        var $trigger = unref(trigger);\n        if ($trigger !== \"hover\") {\n          onClose();\n        }\n      });\n    };\n    var onBlur = function onBlur() {\n      if (!props.virtualTriggering) {\n        onClose();\n      }\n    };\n    var isFocusInsideContent = function isFocusInsideContent(event) {\n      var _a;\n      var popperContent = (_a = contentRef.value) == null ? void 0 : _a.popperContentRef;\n      var activeElement = (event == null ? void 0 : event.relatedTarget) || document.activeElement;\n      return popperContent == null ? void 0 : popperContent.contains(activeElement);\n    };\n    watch(function () {\n      return unref(open);\n    }, function (val) {\n      if (!val) {\n        stopHandle == null ? void 0 : stopHandle();\n      } else {\n        ariaHidden.value = false;\n      }\n    }, {\n      flush: \"post\"\n    });\n    watch(function () {\n      return props.content;\n    }, function () {\n      var _a, _b;\n      (_b = (_a = contentRef.value) == null ? void 0 : _a.updatePopper) == null ? void 0 : _b.call(_a);\n    });\n    expose({\n      contentRef: contentRef,\n      isFocusInsideContent: isFocusInsideContent\n    });\n    return function (_ctx, _cache) {\n      return openBlock(), createBlock(unref(ElTeleport), {\n        disabled: !_ctx.teleported,\n        to: unref(appendTo)\n      }, {\n        \"default\": withCtx(function () {\n          return [createVNode(Transition, {\n            name: unref(transitionClass),\n            onAfterLeave: onTransitionLeave,\n            onBeforeEnter: onBeforeEnter,\n            onAfterEnter: onAfterShow,\n            onBeforeLeave: onBeforeLeave\n          }, {\n            \"default\": withCtx(function () {\n              return [unref(shouldRender) ? withDirectives((openBlock(), createBlock(unref(ElPopperContent), mergeProps({\n                key: 0,\n                id: unref(id),\n                ref_key: \"contentRef\",\n                ref: contentRef\n              }, _ctx.$attrs, {\n                \"aria-label\": _ctx.ariaLabel,\n                \"aria-hidden\": ariaHidden.value,\n                \"boundaries-padding\": _ctx.boundariesPadding,\n                \"fallback-placements\": _ctx.fallbackPlacements,\n                \"gpu-acceleration\": _ctx.gpuAcceleration,\n                offset: _ctx.offset,\n                placement: _ctx.placement,\n                \"popper-options\": _ctx.popperOptions,\n                strategy: _ctx.strategy,\n                effect: _ctx.effect,\n                enterable: _ctx.enterable,\n                pure: _ctx.pure,\n                \"popper-class\": _ctx.popperClass,\n                \"popper-style\": [_ctx.popperStyle, unref(contentStyle)],\n                \"reference-el\": _ctx.referenceEl,\n                \"trigger-target-el\": _ctx.triggerTargetEl,\n                visible: unref(shouldShow),\n                \"z-index\": _ctx.zIndex,\n                onMouseenter: unref(onContentEnter),\n                onMouseleave: unref(onContentLeave),\n                onBlur: onBlur,\n                onClose: unref(onClose)\n              }), {\n                \"default\": withCtx(function () {\n                  return [renderSlot(_ctx.$slots, \"default\")];\n                }),\n                _: 3\n              }, 16, [\"id\", \"aria-label\", \"aria-hidden\", \"boundaries-padding\", \"fallback-placements\", \"gpu-acceleration\", \"offset\", \"placement\", \"popper-options\", \"strategy\", \"effect\", \"enterable\", \"pure\", \"popper-class\", \"popper-style\", \"reference-el\", \"trigger-target-el\", \"visible\", \"z-index\", \"onMouseenter\", \"onMouseleave\", \"onClose\"])), [[vShow, unref(shouldShow)]]) : createCommentVNode(\"v-if\", true)];\n            }),\n            _: 3\n          }, 8, [\"name\"])];\n        }),\n        _: 3\n      }, 8, [\"disabled\", \"to\"]);\n    };\n  }\n}));\nvar ElTooltipContent = /* @__PURE__ */_export_sfc(_sfc_main, [[\"__file\", \"content.vue\"]]);\nexport { ElTooltipContent as default };","map":{"version":3,"names":["name","inheritAttrs","_usePopperContainerId","usePopperContainerId","selector","ns","useNamespace","contentRef","ref","stopHandle","_inject","inject","TOOLTIP_INJECTION_KEY","controlled","id","open","trigger","onClose","onOpen","onShow","onHide","onBeforeShow","onBeforeHide","transitionClass","computed","props","transition","concat","namespace","value","persistentRef","process","env","NODE_ENV","persistent","onBeforeUnmount","shouldRender","unref","shouldShow","disabled","appendTo","contentStyle","_a","style","ariaHidden","onTransitionLeave","isFocusInsideContent","tryFocus","document","body","stopWhenControlled","onContentEnter","composeEventHandlers","enterable","onContentLeave","onBeforeEnter","_b","updatePopper","call","onBeforeLeave","onAfterShow","onClickOutside","popperContentRef","$trigger","onBlur","virtualTriggering","event","popperContent","activeElement","relatedTarget","contains","watch","val","flush","content","expose","_ctx","_cache","openBlock","createBlock","ElTeleport","teleported","to","withCtx","createVNode","Transition"],"sources":["../../../../../../packages/components/tooltip/src/content.vue"],"sourcesContent":["<template>\n  <el-teleport :disabled=\"!teleported\" :to=\"appendTo\">\n    <transition\n      :name=\"transitionClass\"\n      @after-leave=\"onTransitionLeave\"\n      @before-enter=\"onBeforeEnter\"\n      @after-enter=\"onAfterShow\"\n      @before-leave=\"onBeforeLeave\"\n    >\n      <el-popper-content\n        v-if=\"shouldRender\"\n        v-show=\"shouldShow\"\n        :id=\"id\"\n        ref=\"contentRef\"\n        v-bind=\"$attrs\"\n        :aria-label=\"ariaLabel\"\n        :aria-hidden=\"ariaHidden\"\n        :boundaries-padding=\"boundariesPadding\"\n        :fallback-placements=\"fallbackPlacements\"\n        :gpu-acceleration=\"gpuAcceleration\"\n        :offset=\"offset\"\n        :placement=\"placement\"\n        :popper-options=\"popperOptions\"\n        :strategy=\"strategy\"\n        :effect=\"effect\"\n        :enterable=\"enterable\"\n        :pure=\"pure\"\n        :popper-class=\"popperClass\"\n        :popper-style=\"[popperStyle, contentStyle]\"\n        :reference-el=\"referenceEl\"\n        :trigger-target-el=\"triggerTargetEl\"\n        :visible=\"shouldShow\"\n        :z-index=\"zIndex\"\n        @mouseenter=\"onContentEnter\"\n        @mouseleave=\"onContentLeave\"\n        @blur=\"onBlur\"\n        @close=\"onClose\"\n      >\n        <slot />\n      </el-popper-content>\n    </transition>\n  </el-teleport>\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed, inject, onBeforeUnmount, ref, unref, watch } from 'vue'\nimport { onClickOutside } from '@vueuse/core'\nimport { useNamespace, usePopperContainerId } from '@element-plus/hooks'\nimport { composeEventHandlers } from '@element-plus/utils'\nimport { ElPopperContent } from '@element-plus/components/popper'\nimport ElTeleport from '@element-plus/components/teleport'\nimport { tryFocus } from '@element-plus/components/focus-trap'\nimport { TOOLTIP_INJECTION_KEY } from './constants'\nimport { useTooltipContentProps } from './content'\nimport type { PopperContentInstance } from '@element-plus/components/popper'\n\ndefineOptions({\n  name: 'ElTooltipContent',\n  inheritAttrs: false,\n})\n\nconst props = defineProps(useTooltipContentProps)\n\nconst { selector } = usePopperContainerId()\nconst ns = useNamespace('tooltip')\n\nconst contentRef = ref<PopperContentInstance>()\nlet stopHandle: ReturnType<typeof onClickOutside>\nconst {\n  controlled,\n  id,\n  open,\n  trigger,\n  onClose,\n  onOpen,\n  onShow,\n  onHide,\n  onBeforeShow,\n  onBeforeHide,\n} = inject(TOOLTIP_INJECTION_KEY, undefined)!\nconst transitionClass = computed(() => {\n  return props.transition || `${ns.namespace.value}-fade-in-linear`\n})\nconst persistentRef = computed(() => {\n  // For testing, we would always want the content to be rendered\n  // to the DOM, so we need to return true here.\n  if (process.env.NODE_ENV === 'test') {\n    return true\n  }\n  return props.persistent\n})\n\nonBeforeUnmount(() => {\n  stopHandle?.()\n})\n\nconst shouldRender = computed(() => {\n  return unref(persistentRef) ? true : unref(open)\n})\n\nconst shouldShow = computed(() => {\n  return props.disabled ? false : unref(open)\n})\n\nconst appendTo = computed(() => {\n  return props.appendTo || selector.value\n})\n\nconst contentStyle = computed(() => (props.style ?? {}) as any)\n\nconst ariaHidden = ref(true)\n\nconst onTransitionLeave = () => {\n  onHide()\n  isFocusInsideContent() && tryFocus(document.body)\n  ariaHidden.value = true\n}\n\nconst stopWhenControlled = () => {\n  if (unref(controlled)) return true\n}\n\nconst onContentEnter = composeEventHandlers(stopWhenControlled, () => {\n  if (props.enterable && unref(trigger) === 'hover') {\n    onOpen()\n  }\n})\n\nconst onContentLeave = composeEventHandlers(stopWhenControlled, () => {\n  if (unref(trigger) === 'hover') {\n    onClose()\n  }\n})\n\nconst onBeforeEnter = () => {\n  contentRef.value?.updatePopper?.()\n  onBeforeShow?.()\n}\n\nconst onBeforeLeave = () => {\n  onBeforeHide?.()\n}\n\nconst onAfterShow = () => {\n  onShow()\n  stopHandle = onClickOutside(\n    computed(() => {\n      return contentRef.value?.popperContentRef\n    }),\n    () => {\n      if (unref(controlled)) return\n      const $trigger = unref(trigger)\n      if ($trigger !== 'hover') {\n        onClose()\n      }\n    }\n  )\n}\n\nconst onBlur = () => {\n  if (!props.virtualTriggering) {\n    onClose()\n  }\n}\n\nconst isFocusInsideContent = (event?: FocusEvent) => {\n  const popperContent: HTMLElement | undefined =\n    contentRef.value?.popperContentRef\n  const activeElement = (event?.relatedTarget as Node) || document.activeElement\n\n  return popperContent?.contains(activeElement)\n}\n\nwatch(\n  () => unref(open),\n  (val) => {\n    if (!val) {\n      stopHandle?.()\n    } else {\n      ariaHidden.value = false\n    }\n  },\n  {\n    flush: 'post',\n  }\n)\n\nwatch(\n  () => props.content,\n  () => {\n    contentRef.value?.updatePopper?.()\n  }\n)\n\ndefineExpose({\n  /**\n   * @description el-popper-content component instance\n   */\n  contentRef,\n  /**\n   * @description validate current focus event is trigger inside el-popper-content\n   */\n  isFocusInsideContent,\n})\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}