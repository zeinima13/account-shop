{"ast":null,"code":"import _defineProperty from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { defineComponent, ref, computed, onMounted, watch, openBlock, createBlock, Transition, unref, withCtx, withDirectives, createElementVNode, normalizeClass, normalizeStyle, createCommentVNode, resolveDynamicComponent, renderSlot, createElementBlock, toDisplayString, Fragment, withModifiers, createVNode, vShow } from 'vue';\nimport { useEventListener, useResizeObserver, useTimeoutFn } from '@vueuse/core';\nimport { ElBadge } from '../../badge/index.mjs';\nimport { ElIcon } from '../../icon/index.mjs';\nimport { messageProps, messageEmits } from './message.mjs';\nimport { getLastOffset, getOffsetOrSpace } from './instance.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useGlobalComponentSettings } from '../../config-provider/src/hooks/use-global-config.mjs';\nimport { TypeComponentsMap, TypeComponents } from '../../../utils/vue/icon.mjs';\nimport { EVENT_CODE } from '../../../constants/aria.mjs';\nvar __default__ = defineComponent({\n  name: \"ElMessage\"\n});\nvar _sfc_main = /* @__PURE__ */defineComponent(_objectSpread(_objectSpread({}, __default__), {}, {\n  props: messageProps,\n  emits: messageEmits,\n  setup: function setup(__props, _ref) {\n    var expose = _ref.expose;\n    var props = __props;\n    var Close = TypeComponents.Close;\n    var _useGlobalComponentSe = useGlobalComponentSettings(\"message\"),\n      ns = _useGlobalComponentSe.ns,\n      zIndex = _useGlobalComponentSe.zIndex;\n    var currentZIndex = zIndex.currentZIndex,\n      nextZIndex = zIndex.nextZIndex;\n    var messageRef = ref();\n    var visible = ref(false);\n    var height = ref(0);\n    var stopTimer = void 0;\n    var badgeType = computed(function () {\n      return props.type ? props.type === \"error\" ? \"danger\" : props.type : \"info\";\n    });\n    var typeClass = computed(function () {\n      var type = props.type;\n      return _defineProperty({}, ns.bm(\"icon\", type), type && TypeComponentsMap[type]);\n    });\n    var iconComponent = computed(function () {\n      return props.icon || TypeComponentsMap[props.type] || \"\";\n    });\n    var lastOffset = computed(function () {\n      return getLastOffset(props.id);\n    });\n    var offset = computed(function () {\n      return getOffsetOrSpace(props.id, props.offset) + lastOffset.value;\n    });\n    var bottom = computed(function () {\n      return height.value + offset.value;\n    });\n    var customStyle = computed(function () {\n      return {\n        top: \"\".concat(offset.value, \"px\"),\n        zIndex: currentZIndex.value\n      };\n    });\n    function startTimer() {\n      if (props.duration === 0) return;\n      var _useTimeoutFn = useTimeoutFn(function () {\n        close();\n      }, props.duration);\n      stopTimer = _useTimeoutFn.stop;\n    }\n    function clearTimer() {\n      stopTimer == null ? void 0 : stopTimer();\n    }\n    function close() {\n      visible.value = false;\n    }\n    function keydown(_ref3) {\n      var code = _ref3.code;\n      if (code === EVENT_CODE.esc) {\n        close();\n      }\n    }\n    onMounted(function () {\n      startTimer();\n      nextZIndex();\n      visible.value = true;\n    });\n    watch(function () {\n      return props.repeatNum;\n    }, function () {\n      clearTimer();\n      startTimer();\n    });\n    useEventListener(document, \"keydown\", keydown);\n    useResizeObserver(messageRef, function () {\n      height.value = messageRef.value.getBoundingClientRect().height;\n    });\n    expose({\n      visible: visible,\n      bottom: bottom,\n      close: close\n    });\n    return function (_ctx, _cache) {\n      return openBlock(), createBlock(Transition, {\n        name: unref(ns).b(\"fade\"),\n        onBeforeLeave: _ctx.onClose,\n        onAfterLeave: function onAfterLeave($event) {\n          return _ctx.$emit(\"destroy\");\n        },\n        persisted: \"\"\n      }, {\n        \"default\": withCtx(function () {\n          return [withDirectives(createElementVNode(\"div\", {\n            id: _ctx.id,\n            ref_key: \"messageRef\",\n            ref: messageRef,\n            \"class\": normalizeClass([unref(ns).b(), _defineProperty({}, unref(ns).m(_ctx.type), _ctx.type), unref(ns).is(\"center\", _ctx.center), unref(ns).is(\"closable\", _ctx.showClose), unref(ns).is(\"plain\", _ctx.plain), _ctx.customClass]),\n            style: normalizeStyle(unref(customStyle)),\n            role: \"alert\",\n            onMouseenter: clearTimer,\n            onMouseleave: startTimer\n          }, [_ctx.repeatNum > 1 ? (openBlock(), createBlock(unref(ElBadge), {\n            key: 0,\n            value: _ctx.repeatNum,\n            type: unref(badgeType),\n            \"class\": normalizeClass(unref(ns).e(\"badge\"))\n          }, null, 8, [\"value\", \"type\", \"class\"])) : createCommentVNode(\"v-if\", true), unref(iconComponent) ? (openBlock(), createBlock(unref(ElIcon), {\n            key: 1,\n            \"class\": normalizeClass([unref(ns).e(\"icon\"), unref(typeClass)])\n          }, {\n            \"default\": withCtx(function () {\n              return [(openBlock(), createBlock(resolveDynamicComponent(unref(iconComponent))))];\n            }),\n            _: 1\n          }, 8, [\"class\"])) : createCommentVNode(\"v-if\", true), renderSlot(_ctx.$slots, \"default\", {}, function () {\n            return [!_ctx.dangerouslyUseHTMLString ? (openBlock(), createElementBlock(\"p\", {\n              key: 0,\n              \"class\": normalizeClass(unref(ns).e(\"content\"))\n            }, toDisplayString(_ctx.message), 3)) : (openBlock(), createElementBlock(Fragment, {\n              key: 1\n            }, [createCommentVNode(\" Caution here, message could've been compromised, never use user's input as message \"), createElementVNode(\"p\", {\n              \"class\": normalizeClass(unref(ns).e(\"content\")),\n              innerHTML: _ctx.message\n            }, null, 10, [\"innerHTML\"])], 2112))];\n          }), _ctx.showClose ? (openBlock(), createBlock(unref(ElIcon), {\n            key: 2,\n            \"class\": normalizeClass(unref(ns).e(\"closeBtn\")),\n            onClick: withModifiers(close, [\"stop\"])\n          }, {\n            \"default\": withCtx(function () {\n              return [createVNode(unref(Close))];\n            }),\n            _: 1\n          }, 8, [\"class\", \"onClick\"])) : createCommentVNode(\"v-if\", true)], 46, [\"id\"]), [[vShow, visible.value]])];\n        }),\n        _: 3\n      }, 8, [\"name\", \"onBeforeLeave\", \"onAfterLeave\"]);\n    };\n  }\n}));\nvar MessageConstructor = /* @__PURE__ */_export_sfc(_sfc_main, [[\"__file\", \"message.vue\"]]);\nexport { MessageConstructor as default };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}