{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport { getCurrentInstance, onBeforeMount, onMounted, onUpdated, onUnmounted, computed } from 'vue';\nfunction useLayoutObserver(root) {\n  var instance = getCurrentInstance();\n  onBeforeMount(function () {\n    tableLayout.value.addObserver(instance);\n  });\n  onMounted(function () {\n    onColumnsChange(tableLayout.value);\n    onScrollableChange(tableLayout.value);\n  });\n  onUpdated(function () {\n    onColumnsChange(tableLayout.value);\n    onScrollableChange(tableLayout.value);\n  });\n  onUnmounted(function () {\n    tableLayout.value.removeObserver(instance);\n  });\n  var tableLayout = computed(function () {\n    var layout = root.layout;\n    if (!layout) {\n      throw new Error(\"Can not find table layout.\");\n    }\n    return layout;\n  });\n  var onColumnsChange = function onColumnsChange(layout) {\n    var _a;\n    var cols = ((_a = root.vnode.el) == null ? void 0 : _a.querySelectorAll(\"colgroup > col\")) || [];\n    if (!cols.length) return;\n    var flattenColumns = layout.getFlattenColumns();\n    var columnsMap = {};\n    flattenColumns.forEach(function (column) {\n      columnsMap[column.id] = column;\n    });\n    for (var i = 0, j = cols.length; i < j; i++) {\n      var col = cols[i];\n      var name = col.getAttribute(\"name\");\n      var column = columnsMap[name];\n      if (column) {\n        col.setAttribute(\"width\", column.realWidth || column.width);\n      }\n    }\n  };\n  var onScrollableChange = function onScrollableChange(layout) {\n    var _a, _b;\n    var cols = ((_a = root.vnode.el) == null ? void 0 : _a.querySelectorAll(\"colgroup > col[name=gutter]\")) || [];\n    for (var i = 0, j = cols.length; i < j; i++) {\n      var col = cols[i];\n      col.setAttribute(\"width\", layout.scrollY.value ? layout.gutterWidth : \"0\");\n    }\n    var ths = ((_b = root.vnode.el) == null ? void 0 : _b.querySelectorAll(\"th.gutter\")) || [];\n    for (var _i = 0, _j = ths.length; _i < _j; _i++) {\n      var th = ths[_i];\n      th.style.width = layout.scrollY.value ? \"\".concat(layout.gutterWidth, \"px\") : \"0\";\n      th.style.display = layout.scrollY.value ? \"\" : \"none\";\n    }\n  };\n  return {\n    tableLayout: tableLayout.value,\n    onColumnsChange: onColumnsChange,\n    onScrollableChange: onScrollableChange\n  };\n}\nexport { useLayoutObserver as default };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}