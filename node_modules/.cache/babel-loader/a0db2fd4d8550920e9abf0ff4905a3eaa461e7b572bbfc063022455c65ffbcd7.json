{"ast":null,"code":"import { computed, getCurrentInstance } from 'vue';\nimport { memoize } from 'lodash-unified';\nimport memoOne from 'memoize-one';\nvar useCache = function useCache() {\n  var vm = getCurrentInstance();\n  var props = vm.proxy.$props;\n  return computed(function () {\n    var _getItemStyleCache = function _getItemStyleCache(_, __, ___) {\n      return {};\n    };\n    return props.perfMode ? memoize(_getItemStyleCache) : memoOne(_getItemStyleCache);\n  });\n};\nexport { useCache };","map":{"version":3,"names":["useCache","vm","getCurrentInstance","props","proxy","$props","computed","_getItemStyleCache","_","__","___","perfMode","memoize","memoOne"],"sources":["../../../../../../../packages/components/virtual-list/src/hooks/use-cache.ts"],"sourcesContent":["import { computed, getCurrentInstance } from 'vue'\nimport { memoize } from 'lodash-unified'\nimport memoOne from 'memoize-one'\n\nimport type { VirtualizedProps } from '../props'\n\nexport const useCache = <T>() => {\n  const vm = getCurrentInstance()!\n\n  const props = vm.proxy!.$props as VirtualizedProps\n\n  return computed(() => {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const _getItemStyleCache = (_: any, __: any, ___: any) =>\n      ({} as Record<string, T>)\n    return props.perfMode\n      ? memoize(_getItemStyleCache)\n      : memoOne(_getItemStyleCache)\n  })\n}\n"],"mappings":";;;AAGY,IAACA,QAAQ,GAAG,SAAXA,QAAQA,CAAA,EAAS;EAC5B,IAAMC,EAAE,GAAGC,kBAAkB,EAAE;EAC/B,IAAMC,KAAK,GAAGF,EAAE,CAACG,KAAK,CAACC,MAAM;EAC7B,OAAOC,QAAQ,CAAC,YAAM;IACpB,IAAMC,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAIC,CAAC,EAAEC,EAAE,EAAEC,GAAG;MAAA,OAAM,EAAE;IAAA,CAAC;IAC/C,OAAOP,KAAK,CAACQ,QAAQ,GAAGC,OAAO,CAACL,kBAAkB,CAAC,GAAGM,OAAO,CAACN,kBAAkB,CAAC;EACrF,CAAG,CAAC;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}