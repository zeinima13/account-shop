{"ast":null,"code":"import _defineProperty from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport { defineComponent, ref, inject, computed, useSlots, toRef, watch, openBlock, createElementBlock, normalizeClass, unref, createElementVNode, renderSlot, Fragment, renderList, toDisplayString, createCommentVNode, createVNode, withCtx } from 'vue';\nimport dayjs from 'dayjs';\nimport { DArrowLeft, DArrowRight } from '@element-plus/icons-vue';\nimport { ElIcon } from '../../../icon/index.mjs';\nimport { panelYearRangeProps, panelYearRangeEmits } from '../props/panel-year-range.mjs';\nimport { useShortcut } from '../composables/use-shortcut.mjs';\nimport { useYearRangeHeader } from '../composables/use-year-range-header.mjs';\nimport { isValidRange } from '../utils.mjs';\nimport { ROOT_PICKER_INJECTION_KEY } from '../constants.mjs';\nimport YearTable from './basic-year-table.mjs';\nimport _export_sfc from '../../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useLocale } from '../../../../hooks/use-locale/index.mjs';\nimport { useNamespace } from '../../../../hooks/use-namespace/index.mjs';\nimport { isArray } from '@vue/shared';\nvar unit = \"year\";\nvar __default__ = defineComponent({\n  name: \"DatePickerYearRange\"\n});\nvar _sfc_main = /* @__PURE__ */defineComponent(_objectSpread(_objectSpread({}, __default__), {}, {\n  props: panelYearRangeProps,\n  emits: panelYearRangeEmits,\n  setup: function setup(__props, _ref) {\n    var emit = _ref.emit;\n    var props = __props;\n    var _useLocale = useLocale(),\n      lang = _useLocale.lang;\n    var leftDate = ref(dayjs().locale(lang.value));\n    var rightDate = ref(leftDate.value.add(10, \"year\"));\n    var _inject = inject(ROOT_PICKER_INJECTION_KEY),\n      ppNs = _inject.pickerNs;\n    var drpNs = useNamespace(\"date-range-picker\");\n    var hasShortcuts = computed(function () {\n      return !!shortcuts.length;\n    });\n    var panelKls = computed(function () {\n      return [ppNs.b(), drpNs.b(), {\n        \"has-sidebar\": Boolean(useSlots().sidebar) || hasShortcuts.value\n      }];\n    });\n    var leftPanelKls = computed(function () {\n      return {\n        content: [ppNs.e(\"content\"), drpNs.e(\"content\"), \"is-left\"],\n        arrowLeftBtn: [ppNs.e(\"icon-btn\"), \"d-arrow-left\"],\n        arrowRightBtn: [ppNs.e(\"icon-btn\"), _defineProperty({}, ppNs.is(\"disabled\"), !enableYearArrow.value), \"d-arrow-right\"]\n      };\n    });\n    var rightPanelKls = computed(function () {\n      return {\n        content: [ppNs.e(\"content\"), drpNs.e(\"content\"), \"is-right\"],\n        arrowLeftBtn: [ppNs.e(\"icon-btn\"), {\n          \"is-disabled\": !enableYearArrow.value\n        }, \"d-arrow-left\"],\n        arrowRightBtn: [ppNs.e(\"icon-btn\"), \"d-arrow-right\"]\n      };\n    });\n    var handleShortcutClick = useShortcut(lang);\n    var _useYearRangeHeader = useYearRangeHeader({\n        unlinkPanels: toRef(props, \"unlinkPanels\"),\n        leftDate: leftDate,\n        rightDate: rightDate\n      }),\n      leftPrevYear = _useYearRangeHeader.leftPrevYear,\n      rightNextYear = _useYearRangeHeader.rightNextYear,\n      leftNextYear = _useYearRangeHeader.leftNextYear,\n      rightPrevYear = _useYearRangeHeader.rightPrevYear,\n      leftLabel = _useYearRangeHeader.leftLabel,\n      rightLabel = _useYearRangeHeader.rightLabel,\n      leftYear = _useYearRangeHeader.leftYear,\n      rightYear = _useYearRangeHeader.rightYear;\n    var enableYearArrow = computed(function () {\n      return props.unlinkPanels && rightYear.value > leftYear.value + 1;\n    });\n    var minDate = ref();\n    var maxDate = ref();\n    var rangeState = ref({\n      endDate: null,\n      selecting: false\n    });\n    var handleChangeRange = function handleChangeRange(val) {\n      rangeState.value = val;\n    };\n    var handleRangePick = function handleRangePick(val) {\n      var close = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var minDate_ = val.minDate;\n      var maxDate_ = val.maxDate;\n      if (maxDate.value === maxDate_ && minDate.value === minDate_) {\n        return;\n      }\n      emit(\"calendar-change\", [minDate_.toDate(), maxDate_ && maxDate_.toDate()]);\n      maxDate.value = maxDate_;\n      minDate.value = minDate_;\n      if (!close) return;\n      handleConfirm();\n    };\n    var handleConfirm = function handleConfirm() {\n      var visible = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      if (isValidRange([minDate.value, maxDate.value])) {\n        emit(\"pick\", [minDate.value, maxDate.value], visible);\n      }\n    };\n    var onSelect = function onSelect(selecting) {\n      rangeState.value.selecting = selecting;\n      if (!selecting) {\n        rangeState.value.endDate = null;\n      }\n    };\n    var pickerBase = inject(\"EP_PICKER_BASE\");\n    var _pickerBase$props = pickerBase.props,\n      shortcuts = _pickerBase$props.shortcuts,\n      disabledDate = _pickerBase$props.disabledDate;\n    var format = toRef(pickerBase.props, \"format\");\n    var defaultValue = toRef(pickerBase.props, \"defaultValue\");\n    var getDefaultValue = function getDefaultValue() {\n      var start;\n      if (isArray(defaultValue.value)) {\n        var left = dayjs(defaultValue.value[0]);\n        var right = dayjs(defaultValue.value[1]);\n        if (!props.unlinkPanels) {\n          right = left.add(10, unit);\n        }\n        return [left, right];\n      } else if (defaultValue.value) {\n        start = dayjs(defaultValue.value);\n      } else {\n        start = dayjs();\n      }\n      start = start.locale(lang.value);\n      return [start, start.add(10, unit)];\n    };\n    watch(function () {\n      return defaultValue.value;\n    }, function (val) {\n      if (val) {\n        var defaultArr = getDefaultValue();\n        leftDate.value = defaultArr[0];\n        rightDate.value = defaultArr[1];\n      }\n    }, {\n      immediate: true\n    });\n    watch(function () {\n      return props.parsedValue;\n    }, function (newVal) {\n      if (newVal && newVal.length === 2) {\n        minDate.value = newVal[0];\n        maxDate.value = newVal[1];\n        leftDate.value = minDate.value;\n        if (props.unlinkPanels && maxDate.value) {\n          var minDateYear = minDate.value.year();\n          var maxDateYear = maxDate.value.year();\n          rightDate.value = minDateYear === maxDateYear ? maxDate.value.add(10, \"year\") : maxDate.value;\n        } else {\n          rightDate.value = leftDate.value.add(10, \"year\");\n        }\n      } else {\n        var defaultArr = getDefaultValue();\n        minDate.value = void 0;\n        maxDate.value = void 0;\n        leftDate.value = defaultArr[0];\n        rightDate.value = defaultArr[1];\n      }\n    }, {\n      immediate: true\n    });\n    var parseUserInput = function parseUserInput(value) {\n      return isArray(value) ? value.map(function (_) {\n        return dayjs(_, format.value).locale(lang.value);\n      }) : dayjs(value, format.value).locale(lang.value);\n    };\n    var formatToString = function formatToString(value) {\n      return isArray(value) ? value.map(function (day) {\n        return day.format(format.value);\n      }) : value.format(format.value);\n    };\n    var isValidValue = function isValidValue(date) {\n      return isValidRange(date) && (disabledDate ? !disabledDate(date[0].toDate()) && !disabledDate(date[1].toDate()) : true);\n    };\n    var handleClear = function handleClear() {\n      var defaultArr = getDefaultValue();\n      leftDate.value = defaultArr[0];\n      rightDate.value = defaultArr[1];\n      maxDate.value = void 0;\n      minDate.value = void 0;\n      emit(\"pick\", null);\n    };\n    emit(\"set-picker-option\", [\"isValidValue\", isValidValue]);\n    emit(\"set-picker-option\", [\"parseUserInput\", parseUserInput]);\n    emit(\"set-picker-option\", [\"formatToString\", formatToString]);\n    emit(\"set-picker-option\", [\"handleClear\", handleClear]);\n    return function (_ctx, _cache) {\n      return openBlock(), createElementBlock(\"div\", {\n        \"class\": normalizeClass(unref(panelKls))\n      }, [createElementVNode(\"div\", {\n        \"class\": normalizeClass(unref(ppNs).e(\"body-wrapper\"))\n      }, [renderSlot(_ctx.$slots, \"sidebar\", {\n        \"class\": normalizeClass(unref(ppNs).e(\"sidebar\"))\n      }), unref(hasShortcuts) ? (openBlock(), createElementBlock(\"div\", {\n        key: 0,\n        \"class\": normalizeClass(unref(ppNs).e(\"sidebar\"))\n      }, [(openBlock(true), createElementBlock(Fragment, null, renderList(unref(shortcuts), function (shortcut, key) {\n        return openBlock(), createElementBlock(\"button\", {\n          key: key,\n          type: \"button\",\n          \"class\": normalizeClass(unref(ppNs).e(\"shortcut\")),\n          onClick: function onClick($event) {\n            return unref(handleShortcutClick)(shortcut);\n          }\n        }, toDisplayString(shortcut.text), 11, [\"onClick\"]);\n      }), 128))], 2)) : createCommentVNode(\"v-if\", true), createElementVNode(\"div\", {\n        \"class\": normalizeClass(unref(ppNs).e(\"body\"))\n      }, [createElementVNode(\"div\", {\n        \"class\": normalizeClass(unref(leftPanelKls).content)\n      }, [createElementVNode(\"div\", {\n        \"class\": normalizeClass(unref(drpNs).e(\"header\"))\n      }, [createElementVNode(\"button\", {\n        type: \"button\",\n        \"class\": normalizeClass(unref(leftPanelKls).arrowLeftBtn),\n        onClick: unref(leftPrevYear)\n      }, [renderSlot(_ctx.$slots, \"prev-year\", {}, function () {\n        return [createVNode(unref(ElIcon), null, {\n          \"default\": withCtx(function () {\n            return [createVNode(unref(DArrowLeft))];\n          }),\n          _: 1\n        })];\n      })], 10, [\"onClick\"]), _ctx.unlinkPanels ? (openBlock(), createElementBlock(\"button\", {\n        key: 0,\n        type: \"button\",\n        disabled: !unref(enableYearArrow),\n        \"class\": normalizeClass(unref(leftPanelKls).arrowRightBtn),\n        onClick: unref(leftNextYear)\n      }, [renderSlot(_ctx.$slots, \"next-year\", {}, function () {\n        return [createVNode(unref(ElIcon), null, {\n          \"default\": withCtx(function () {\n            return [createVNode(unref(DArrowRight))];\n          }),\n          _: 1\n        })];\n      })], 10, [\"disabled\", \"onClick\"])) : createCommentVNode(\"v-if\", true), createElementVNode(\"div\", null, toDisplayString(unref(leftLabel)), 1)], 2), createVNode(YearTable, {\n        \"selection-mode\": \"range\",\n        date: leftDate.value,\n        \"min-date\": minDate.value,\n        \"max-date\": maxDate.value,\n        \"range-state\": rangeState.value,\n        \"disabled-date\": unref(disabledDate),\n        onChangerange: handleChangeRange,\n        onPick: handleRangePick,\n        onSelect: onSelect\n      }, null, 8, [\"date\", \"min-date\", \"max-date\", \"range-state\", \"disabled-date\"])], 2), createElementVNode(\"div\", {\n        \"class\": normalizeClass(unref(rightPanelKls).content)\n      }, [createElementVNode(\"div\", {\n        \"class\": normalizeClass(unref(drpNs).e(\"header\"))\n      }, [_ctx.unlinkPanels ? (openBlock(), createElementBlock(\"button\", {\n        key: 0,\n        type: \"button\",\n        disabled: !unref(enableYearArrow),\n        \"class\": normalizeClass(unref(rightPanelKls).arrowLeftBtn),\n        onClick: unref(rightPrevYear)\n      }, [renderSlot(_ctx.$slots, \"prev-year\", {}, function () {\n        return [createVNode(unref(ElIcon), null, {\n          \"default\": withCtx(function () {\n            return [createVNode(unref(DArrowLeft))];\n          }),\n          _: 1\n        })];\n      })], 10, [\"disabled\", \"onClick\"])) : createCommentVNode(\"v-if\", true), createElementVNode(\"button\", {\n        type: \"button\",\n        \"class\": normalizeClass(unref(rightPanelKls).arrowRightBtn),\n        onClick: unref(rightNextYear)\n      }, [renderSlot(_ctx.$slots, \"next-year\", {}, function () {\n        return [createVNode(unref(ElIcon), null, {\n          \"default\": withCtx(function () {\n            return [createVNode(unref(DArrowRight))];\n          }),\n          _: 1\n        })];\n      })], 10, [\"onClick\"]), createElementVNode(\"div\", null, toDisplayString(unref(rightLabel)), 1)], 2), createVNode(YearTable, {\n        \"selection-mode\": \"range\",\n        date: rightDate.value,\n        \"min-date\": minDate.value,\n        \"max-date\": maxDate.value,\n        \"range-state\": rangeState.value,\n        \"disabled-date\": unref(disabledDate),\n        onChangerange: handleChangeRange,\n        onPick: handleRangePick,\n        onSelect: onSelect\n      }, null, 8, [\"date\", \"min-date\", \"max-date\", \"range-state\", \"disabled-date\"])], 2)], 2)], 2)], 2);\n    };\n  }\n}));\nvar YearRangePickPanel = /* @__PURE__ */_export_sfc(_sfc_main, [[\"__file\", \"panel-year-range.vue\"]]);\nexport { YearRangePickPanel as default };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}