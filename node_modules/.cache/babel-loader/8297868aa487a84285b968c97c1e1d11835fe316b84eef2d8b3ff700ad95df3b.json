{"ast":null,"code":"import { ref, nextTick } from 'vue';\nimport { isKorean } from '../../utils/i18n.mjs';\nfunction useComposition(_ref) {\n  var afterComposition = _ref.afterComposition,\n    emit = _ref.emit;\n  var isComposing = ref(false);\n  var handleCompositionStart = function handleCompositionStart(event) {\n    emit == null ? void 0 : emit(\"compositionstart\", event);\n    isComposing.value = true;\n  };\n  var handleCompositionUpdate = function handleCompositionUpdate(event) {\n    var _a;\n    emit == null ? void 0 : emit(\"compositionupdate\", event);\n    var text = (_a = event.target) == null ? void 0 : _a.value;\n    var lastCharacter = text[text.length - 1] || \"\";\n    isComposing.value = !isKorean(lastCharacter);\n  };\n  var handleCompositionEnd = function handleCompositionEnd(event) {\n    emit == null ? void 0 : emit(\"compositionend\", event);\n    if (isComposing.value) {\n      isComposing.value = false;\n      nextTick(function () {\n        return afterComposition(event);\n      });\n    }\n  };\n  var handleComposition = function handleComposition(event) {\n    event.type === \"compositionend\" ? handleCompositionEnd(event) : handleCompositionUpdate(event);\n  };\n  return {\n    isComposing: isComposing,\n    handleComposition: handleComposition,\n    handleCompositionStart: handleCompositionStart,\n    handleCompositionUpdate: handleCompositionUpdate,\n    handleCompositionEnd: handleCompositionEnd\n  };\n}\nexport { useComposition };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}