{"ast":null,"code":"import _objectSpread from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.array.some.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.some.js\";\nimport { defineComponent, ref, onMounted, computed, provide, reactive, toRefs, watch, openBlock, createElementBlock, unref, normalizeClass, renderSlot, nextTick } from 'vue';\nimport { radioGroupProps, radioGroupEmits } from './radio-group.mjs';\nimport { radioGroupKey } from './constants.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { useId } from '../../../hooks/use-id/index.mjs';\nimport { useFormItem, useFormItemInputId } from '../../form/src/hooks/use-form-item.mjs';\nimport { debugWarn } from '../../../utils/error.mjs';\nimport { UPDATE_MODEL_EVENT } from '../../../constants/event.mjs';\nvar __default__ = defineComponent({\n  name: \"ElRadioGroup\"\n});\nvar _sfc_main = /* @__PURE__ */defineComponent(_objectSpread(_objectSpread({}, __default__), {}, {\n  props: radioGroupProps,\n  emits: radioGroupEmits,\n  setup: function setup(__props, _ref) {\n    var emit = _ref.emit;\n    var props = __props;\n    var ns = useNamespace(\"radio\");\n    var radioId = useId();\n    var radioGroupRef = ref();\n    var _useFormItem = useFormItem(),\n      formItem = _useFormItem.formItem;\n    var _useFormItemInputId = useFormItemInputId(props, {\n        formItemContext: formItem\n      }),\n      groupId = _useFormItemInputId.inputId,\n      isLabeledByFormItem = _useFormItemInputId.isLabeledByFormItem;\n    var changeEvent = function changeEvent(value) {\n      emit(UPDATE_MODEL_EVENT, value);\n      nextTick(function () {\n        return emit(\"change\", value);\n      });\n    };\n    onMounted(function () {\n      var radios = radioGroupRef.value.querySelectorAll(\"[type=radio]\");\n      var firstLabel = radios[0];\n      if (!Array.from(radios).some(function (radio) {\n        return radio.checked;\n      }) && firstLabel) {\n        firstLabel.tabIndex = 0;\n      }\n    });\n    var name = computed(function () {\n      return props.name || radioId.value;\n    });\n    provide(radioGroupKey, reactive(_objectSpread(_objectSpread({}, toRefs(props)), {}, {\n      changeEvent: changeEvent,\n      name: name\n    })));\n    watch(function () {\n      return props.modelValue;\n    }, function () {\n      if (props.validateEvent) {\n        formItem == null ? void 0 : formItem.validate(\"change\")[\"catch\"](function (err) {\n          return debugWarn(err);\n        });\n      }\n    });\n    return function (_ctx, _cache) {\n      return openBlock(), createElementBlock(\"div\", {\n        id: unref(groupId),\n        ref_key: \"radioGroupRef\",\n        ref: radioGroupRef,\n        \"class\": normalizeClass(unref(ns).b(\"group\")),\n        role: \"radiogroup\",\n        \"aria-label\": !unref(isLabeledByFormItem) ? _ctx.ariaLabel || \"radio-group\" : void 0,\n        \"aria-labelledby\": unref(isLabeledByFormItem) ? unref(formItem).labelId : void 0\n      }, [renderSlot(_ctx.$slots, \"default\")], 10, [\"id\", \"aria-label\", \"aria-labelledby\"]);\n    };\n  }\n}));\nvar RadioGroup = /* @__PURE__ */_export_sfc(_sfc_main, [[\"__file\", \"radio-group.vue\"]]);\nexport { RadioGroup as default };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}