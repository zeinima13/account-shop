{"ast":null,"code":"import _objectSpread from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _regeneratorRuntime from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport { unref, ref, onMounted, watchEffect, isRef } from 'vue';\nimport { isClient, unrefElement } from '@vueuse/core';\nimport { isNil } from 'lodash-unified';\nimport { arrow, computePosition } from '@floating-ui/dom';\nimport { keysOf } from '../../utils/objects.mjs';\nimport { buildProps } from '../../utils/vue/props/runtime.mjs';\nvar useFloatingProps = buildProps({});\nvar unrefReference = function unrefReference(elRef) {\n  if (!isClient) return;\n  if (!elRef) return elRef;\n  var unrefEl = unrefElement(elRef);\n  if (unrefEl) return unrefEl;\n  return isRef(elRef) ? unrefEl : elRef;\n};\nvar getPositionDataWithUnit = function getPositionDataWithUnit(record, key) {\n  var value = record == null ? void 0 : record[key];\n  return isNil(value) ? \"\" : \"\".concat(value, \"px\");\n};\nvar useFloating = function useFloating(_ref) {\n  var middleware = _ref.middleware,\n    placement = _ref.placement,\n    strategy = _ref.strategy;\n  var referenceRef = ref();\n  var contentRef = ref();\n  var x = ref();\n  var y = ref();\n  var middlewareData = ref({});\n  var states = {\n    x: x,\n    y: y,\n    placement: placement,\n    strategy: strategy,\n    middlewareData: middlewareData\n  };\n  var update = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var referenceEl, contentEl, data;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            if (isClient) {\n              _context.next = 2;\n              break;\n            }\n            return _context.abrupt(\"return\");\n          case 2:\n            referenceEl = unrefReference(referenceRef);\n            contentEl = unrefElement(contentRef);\n            if (!(!referenceEl || !contentEl)) {\n              _context.next = 6;\n              break;\n            }\n            return _context.abrupt(\"return\");\n          case 6:\n            _context.next = 8;\n            return computePosition(referenceEl, contentEl, {\n              placement: unref(placement),\n              strategy: unref(strategy),\n              middleware: unref(middleware)\n            });\n          case 8:\n            data = _context.sent;\n            keysOf(states).forEach(function (key) {\n              states[key].value = data[key];\n            });\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n    return function update() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  onMounted(function () {\n    watchEffect(function () {\n      update();\n    });\n  });\n  return _objectSpread(_objectSpread({}, states), {}, {\n    update: update,\n    referenceRef: referenceRef,\n    contentRef: contentRef\n  });\n};\nvar arrowMiddleware = function arrowMiddleware(_ref3) {\n  var arrowRef = _ref3.arrowRef,\n    padding = _ref3.padding;\n  return {\n    name: \"arrow\",\n    options: {\n      element: arrowRef,\n      padding: padding\n    },\n    fn: function fn(args) {\n      var arrowEl = unref(arrowRef);\n      if (!arrowEl) return {};\n      return arrow({\n        element: arrowEl,\n        padding: padding\n      }).fn(args);\n    }\n  };\n};\nexport { arrowMiddleware, getPositionDataWithUnit, useFloating, useFloatingProps };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}