{"ast":null,"code":"import _objectSpread from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { defineComponent, inject, watch, onBeforeUnmount, openBlock, createElementBlock, normalizeClass, unref, normalizeStyle } from 'vue';\nimport { POPPER_CONTENT_INJECTION_KEY } from './constants.mjs';\nimport { popperArrowProps } from './arrow.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nvar __default__ = defineComponent({\n  name: \"ElPopperArrow\",\n  inheritAttrs: false\n});\nvar _sfc_main = /* @__PURE__ */defineComponent(_objectSpread(_objectSpread({}, __default__), {}, {\n  props: popperArrowProps,\n  setup: function setup(__props, _ref) {\n    var expose = _ref.expose;\n    var props = __props;\n    var ns = useNamespace(\"popper\");\n    var _inject = inject(POPPER_CONTENT_INJECTION_KEY, void 0),\n      arrowOffset = _inject.arrowOffset,\n      arrowRef = _inject.arrowRef,\n      arrowStyle = _inject.arrowStyle;\n    watch(function () {\n      return props.arrowOffset;\n    }, function (val) {\n      arrowOffset.value = val;\n    });\n    onBeforeUnmount(function () {\n      arrowRef.value = void 0;\n    });\n    expose({\n      arrowRef: arrowRef\n    });\n    return function (_ctx, _cache) {\n      return openBlock(), createElementBlock(\"span\", {\n        ref_key: \"arrowRef\",\n        ref: arrowRef,\n        \"class\": normalizeClass(unref(ns).e(\"arrow\")),\n        style: normalizeStyle(unref(arrowStyle)),\n        \"data-popper-arrow\": \"\"\n      }, null, 6);\n    };\n  }\n}));\nvar ElPopperArrow = /* @__PURE__ */_export_sfc(_sfc_main, [[\"__file\", \"arrow.vue\"]]);\nexport { ElPopperArrow as default };","map":{"version":3,"names":["name","inheritAttrs","ns","useNamespace","_inject","inject","POPPER_CONTENT_INJECTION_KEY","arrowOffset","arrowRef","arrowStyle","watch","props","val","value","onBeforeUnmount","expose","_ctx","_cache","openBlock","createElementBlock","ref_key","ref","normalizeClass","unref","e","style","normalizeStyle"],"sources":["../../../../../../packages/components/popper/src/arrow.vue"],"sourcesContent":["<template>\n  <span\n    ref=\"arrowRef\"\n    :class=\"ns.e('arrow')\"\n    :style=\"arrowStyle\"\n    data-popper-arrow\n  />\n</template>\n\n<script lang=\"ts\" setup>\nimport { inject, onBeforeUnmount, watch } from 'vue'\nimport { useNamespace } from '@element-plus/hooks'\nimport { POPPER_CONTENT_INJECTION_KEY } from './constants'\nimport { popperArrowProps } from './arrow'\n\ndefineOptions({\n  name: 'ElPopperArrow',\n  inheritAttrs: false,\n})\n\nconst props = defineProps(popperArrowProps)\n\nconst ns = useNamespace('popper')\nconst { arrowOffset, arrowRef, arrowStyle } = inject(\n  POPPER_CONTENT_INJECTION_KEY,\n  undefined\n)!\n\nwatch(\n  () => props.arrowOffset,\n  (val) => {\n    arrowOffset.value = val\n  }\n)\nonBeforeUnmount(() => {\n  arrowRef.value = undefined\n})\n\ndefineExpose({\n  /**\n   * @description Arrow element\n   */\n  arrowRef,\n})\n</script>\n"],"mappings":";;;;;;iCAec;EACZA,IAAM;EACNC,YAAc;AAChB;;;;;;IAIM,IAAAC,EAAA,GAAKC,YAAA,CAAa,QAAQ;IAChC,IAAAC,OAAA,GAA8CC,MAAA,CAAAC,4BAAA;MAAtCC,WAAA,GAAAH,OAAA,CAAAG,WAAA;MAAaC,QAAU,GAAAJ,OAAA,CAAVI,QAAU;MAAAC,UAAA,GAAAL,OAAA,CAAAK,UAAA;IAC7BC,KAAA;MAAA,OAAAC,KAAA,CAAAJ,WAAA;IAAA,aAAAK,GAAA;MACAL,WAAA,CAAAM,KAAA,GAAAD,GAAA;IAAA,CACF;IAEAE,eAAA;MACEN,QAAY,CAAAK,KAAA;IAAA,EACZ;IACEE,MAAA;MACFP,QAAA,EAAAA;IAAA,CACF;IACA,iBAAAQ,IAAA,EAAAC,MAAsB;MACpB,OAAAC,SAAiB,IAAAC,kBAAA;QAClBC,OAAA;QAEYC,GAAA,EAAAb,QAAA;QAAA,SAAAc,cAAA,CAAAC,KAAA,CAAArB,EAAA,EAAAsB,CAAA;QAAAC,KAAA,EAAAC,cAAA,CAAAH,KAAA,CAAAd,UAAA;QAAA;MAAA,CAIX;IAAA,CACD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}