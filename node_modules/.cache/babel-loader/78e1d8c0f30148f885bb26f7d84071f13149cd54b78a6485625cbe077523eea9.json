{"ast":null,"code":"import _defineProperty from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.string.link.js\";\nimport { defineComponent, computed, openBlock, createBlock, resolveDynamicComponent, mergeProps, unref, withCtx, createElementBlock, Fragment, renderSlot, normalizeClass, createCommentVNode } from 'vue';\nimport { ElIcon } from '../../icon/index.mjs';\nimport { useButton } from './use-button.mjs';\nimport { buttonProps, buttonEmits } from './button.mjs';\nimport { useButtonCustomStyle } from './button-custom.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nvar __default__ = defineComponent({\n  name: \"ElButton\"\n});\nvar _sfc_main = /* @__PURE__ */defineComponent(_objectSpread(_objectSpread({}, __default__), {}, {\n  props: buttonProps,\n  emits: buttonEmits,\n  setup: function setup(__props, _ref2) {\n    var expose = _ref2.expose,\n      emit = _ref2.emit;\n    var props = __props;\n    var buttonStyle = useButtonCustomStyle(props);\n    var ns = useNamespace(\"button\");\n    var _useButton = useButton(props, emit),\n      _ref = _useButton._ref,\n      _size = _useButton._size,\n      _type = _useButton._type,\n      _disabled = _useButton._disabled,\n      _props = _useButton._props,\n      shouldAddSpace = _useButton.shouldAddSpace,\n      handleClick = _useButton.handleClick;\n    var buttonKls = computed(function () {\n      return [ns.b(), ns.m(_type.value), ns.m(_size.value), ns.is(\"disabled\", _disabled.value), ns.is(\"loading\", props.loading), ns.is(\"plain\", props.plain), ns.is(\"round\", props.round), ns.is(\"circle\", props.circle), ns.is(\"text\", props.text), ns.is(\"link\", props.link), ns.is(\"has-bg\", props.bg)];\n    });\n    expose({\n      ref: _ref,\n      size: _size,\n      type: _type,\n      disabled: _disabled,\n      shouldAddSpace: shouldAddSpace\n    });\n    return function (_ctx, _cache) {\n      return openBlock(), createBlock(resolveDynamicComponent(_ctx.tag), mergeProps({\n        ref_key: \"_ref\",\n        ref: _ref\n      }, unref(_props), {\n        \"class\": unref(buttonKls),\n        style: unref(buttonStyle),\n        onClick: unref(handleClick)\n      }), {\n        \"default\": withCtx(function () {\n          return [_ctx.loading ? (openBlock(), createElementBlock(Fragment, {\n            key: 0\n          }, [_ctx.$slots.loading ? renderSlot(_ctx.$slots, \"loading\", {\n            key: 0\n          }) : (openBlock(), createBlock(unref(ElIcon), {\n            key: 1,\n            \"class\": normalizeClass(unref(ns).is(\"loading\"))\n          }, {\n            \"default\": withCtx(function () {\n              return [(openBlock(), createBlock(resolveDynamicComponent(_ctx.loadingIcon)))];\n            }),\n            _: 1\n          }, 8, [\"class\"]))], 64)) : _ctx.icon || _ctx.$slots.icon ? (openBlock(), createBlock(unref(ElIcon), {\n            key: 1\n          }, {\n            \"default\": withCtx(function () {\n              return [_ctx.icon ? (openBlock(), createBlock(resolveDynamicComponent(_ctx.icon), {\n                key: 0\n              })) : renderSlot(_ctx.$slots, \"icon\", {\n                key: 1\n              })];\n            }),\n            _: 3\n          })) : createCommentVNode(\"v-if\", true), _ctx.$slots[\"default\"] ? (openBlock(), createElementBlock(\"span\", {\n            key: 2,\n            \"class\": normalizeClass(_defineProperty({}, unref(ns).em(\"text\", \"expand\"), unref(shouldAddSpace)))\n          }, [renderSlot(_ctx.$slots, \"default\")], 2)) : createCommentVNode(\"v-if\", true)];\n        }),\n        _: 3\n      }, 16, [\"class\", \"style\", \"onClick\"]);\n    };\n  }\n}));\nvar Button = /* @__PURE__ */_export_sfc(_sfc_main, [[\"__file\", \"button.vue\"]]);\nexport { Button as default };","map":{"version":3,"names":["name","buttonStyle","useButtonCustomStyle","props","ns","useNamespace","_useButton","useButton","emit","_ref","_size","_type","_disabled","_props","shouldAddSpace","handleClick","buttonKls","computed","b","m","value","is","loading","plain","round","circle","text","link","bg","expose","ref","size","type","disabled","_ctx","_cache","openBlock","createBlock","resolveDynamicComponent","tag","mergeProps","ref_key","unref"],"sources":["../../../../../../packages/components/button/src/button.vue"],"sourcesContent":["<template>\n  <component\n    :is=\"tag\"\n    ref=\"_ref\"\n    v-bind=\"_props\"\n    :class=\"buttonKls\"\n    :style=\"buttonStyle\"\n    @click=\"handleClick\"\n  >\n    <template v-if=\"loading\">\n      <slot v-if=\"$slots.loading\" name=\"loading\" />\n      <el-icon v-else :class=\"ns.is('loading')\">\n        <component :is=\"loadingIcon\" />\n      </el-icon>\n    </template>\n    <el-icon v-else-if=\"icon || $slots.icon\">\n      <component :is=\"icon\" v-if=\"icon\" />\n      <slot v-else name=\"icon\" />\n    </el-icon>\n    <span\n      v-if=\"$slots.default\"\n      :class=\"{ [ns.em('text', 'expand')]: shouldAddSpace }\"\n    >\n      <slot />\n    </span>\n  </component>\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed } from 'vue'\nimport { ElIcon } from '@element-plus/components/icon'\nimport { useNamespace } from '@element-plus/hooks'\nimport { useButton } from './use-button'\nimport { buttonEmits, buttonProps } from './button'\nimport { useButtonCustomStyle } from './button-custom'\n\ndefineOptions({\n  name: 'ElButton',\n})\n\nconst props = defineProps(buttonProps)\nconst emit = defineEmits(buttonEmits)\n\nconst buttonStyle = useButtonCustomStyle(props)\nconst ns = useNamespace('button')\nconst { _ref, _size, _type, _disabled, _props, shouldAddSpace, handleClick } =\n  useButton(props, emit)\nconst buttonKls = computed(() => [\n  ns.b(),\n  ns.m(_type.value),\n  ns.m(_size.value),\n  ns.is('disabled', _disabled.value),\n  ns.is('loading', props.loading),\n  ns.is('plain', props.plain),\n  ns.is('round', props.round),\n  ns.is('circle', props.circle),\n  ns.is('text', props.text),\n  ns.is('link', props.link),\n  ns.is('has-bg', props.bg),\n])\n\ndefineExpose({\n  /** @description button html element */\n  ref: _ref,\n  /** @description button size */\n  size: _size,\n  /** @description button type */\n  type: _type,\n  /** @description button disabled */\n  disabled: _disabled,\n  /** @description whether adding space */\n  shouldAddSpace,\n})\n</script>\n"],"mappings":";;;;;;;;;;iCAoCc;EACZA,IAAM;AACR;;;;;;;;IAKM,IAAAC,WAAA,GAAcC,oBAAA,CAAqBC,KAAK;IACxC,IAAAC,EAAA,GAAKC,YAAA,CAAa,QAAQ;IAC1B,IAAAC,UAAA,GACJC,SAAU,CAAAJ,KAAA,EAAOK,IAAI;MADfC,IAAM,GAAAH,UAAA,CAANG,IAAM;MAAAC,KAAA,GAAAJ,UAAA,CAAAI,KAAA;MAAOC,KAAO,GAAAL,UAAA,CAAPK,KAAO;MAAAC,SAAA,GAAAN,UAAA,CAAAM,SAAA;MAAWC,MAAQ,GAAAP,UAAA,CAARO,MAAQ;MAAAC,cAAA,GAAAR,UAAA,CAAAQ,cAAA;MAAgBC,WAAY,GAAAT,UAAA,CAAZS,WAAY;IAErE,IAAAC,SAAA,GAAYC,QAAA,CAAS;MAAA,OAAM,CAC/Bb,EAAA,CAAGc,CAAE,IACLd,EAAA,CAAGe,CAAE,CAAAR,KAAA,CAAMS,KAAK,GAChBhB,EAAA,CAAGe,CAAE,CAAAT,KAAA,CAAMU,KAAK,GAChBhB,EAAG,CAAAiB,EAAA,CAAG,UAAY,EAAAT,SAAA,CAAUQ,KAAK,GACjChB,EAAG,CAAAiB,EAAA,CAAG,SAAW,EAAAlB,KAAA,CAAMmB,OAAO,GAC9BlB,EAAG,CAAAiB,EAAA,CAAG,OAAS,EAAAlB,KAAA,CAAMoB,KAAK,GAC1BnB,EAAG,CAAAiB,EAAA,CAAG,OAAS,EAAAlB,KAAA,CAAMqB,KAAK,GAC1BpB,EAAG,CAAAiB,EAAA,CAAG,QAAU,EAAAlB,KAAA,CAAMsB,MAAM,GAC5BrB,EAAG,CAAAiB,EAAA,CAAG,MAAQ,EAAAlB,KAAA,CAAMuB,IAAI,GACxBtB,EAAG,CAAAiB,EAAA,CAAG,MAAQ,EAAAlB,KAAA,CAAMwB,IAAI,GACxBvB,EAAG,CAAAiB,EAAA,CAAG,QAAU,EAAAlB,KAAA,CAAMyB,EAAE,EACzB;IAAA;IAEYC,MAAA;MAAAC,GAAA,EAAArB,IAAA;MAEXsB,IAAK,EAAArB,KAAA;MAAAsB,IAAA,EAAArB,KAAA;MAELsB,QAAM,EAAArB,SAAA;MAAAE,cAAA,EAAAA;IAAA,EAEN;IAAM,iBAAAoB,IAAA,EAAAC,MAAA;MAEN,OAAUC,SAAA,IAAAC,WAAA,CAAAC,uBAAA,CAAAJ,IAAA,CAAAK,GAAA,GAAAC,UAAA;QAAAC,OAAA;QAEVX,GAAA,EAAArB;MAAA,CACD,EAAAiC,KAAA,CAAA7B,MAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}