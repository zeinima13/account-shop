{"ast":null,"code":"import _toConsumableArray from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _objectSpread from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.some.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport \"core-js/modules/esnext.iterator.some.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport { defineComponent, ref, getCurrentInstance, provide, reactive, toRefs, computed, onMounted, withDirectives, openBlock, createElementBlock, normalizeClass, createElementVNode, toDisplayString, renderSlot, vShow } from 'vue';\nimport { useMutationObserver } from '@vueuse/core';\nimport { selectGroupKey } from './token.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { castArray } from 'lodash-unified';\nvar _sfc_main = defineComponent({\n  name: \"ElOptionGroup\",\n  componentName: \"ElOptionGroup\",\n  props: {\n    label: String,\n    disabled: Boolean\n  },\n  setup: function setup(props) {\n    var ns = useNamespace(\"select\");\n    var groupRef = ref(null);\n    var instance = getCurrentInstance();\n    var children = ref([]);\n    provide(selectGroupKey, reactive(_objectSpread({}, toRefs(props))));\n    var visible = computed(function () {\n      return children.value.some(function (option) {\n        return option.visible === true;\n      });\n    });\n    var isOption = function isOption(node) {\n      var _a, _b;\n      return ((_a = node.type) == null ? void 0 : _a.name) === \"ElOption\" && !!((_b = node.component) == null ? void 0 : _b.proxy);\n    };\n    var _flattedChildren = function flattedChildren(node) {\n      var Nodes = castArray(node);\n      var children2 = [];\n      Nodes.forEach(function (child) {\n        var _a, _b;\n        if (isOption(child)) {\n          children2.push(child.component.proxy);\n        } else if ((_a = child.children) == null ? void 0 : _a.length) {\n          children2.push.apply(children2, _toConsumableArray(_flattedChildren(child.children)));\n        } else if ((_b = child.component) == null ? void 0 : _b.subTree) {\n          children2.push.apply(children2, _toConsumableArray(_flattedChildren(child.component.subTree)));\n        }\n      });\n      return children2;\n    };\n    var updateChildren = function updateChildren() {\n      children.value = _flattedChildren(instance.subTree);\n    };\n    onMounted(function () {\n      updateChildren();\n    });\n    useMutationObserver(groupRef, updateChildren, {\n      attributes: true,\n      subtree: true,\n      childList: true\n    });\n    return {\n      groupRef: groupRef,\n      visible: visible,\n      ns: ns\n    };\n  }\n});\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  return withDirectives((openBlock(), createElementBlock(\"ul\", {\n    ref: \"groupRef\",\n    \"class\": normalizeClass(_ctx.ns.be(\"group\", \"wrap\"))\n  }, [createElementVNode(\"li\", {\n    \"class\": normalizeClass(_ctx.ns.be(\"group\", \"title\"))\n  }, toDisplayString(_ctx.label), 3), createElementVNode(\"li\", null, [createElementVNode(\"ul\", {\n    \"class\": normalizeClass(_ctx.ns.b(\"group\"))\n  }, [renderSlot(_ctx.$slots, \"default\")], 2)])], 2)), [[vShow, _ctx.visible]]);\n}\nvar OptionGroup = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render], [\"__file\", \"option-group.vue\"]]);\nexport { OptionGroup as default };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}