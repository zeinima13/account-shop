{"ast":null,"code":"import _defineProperty from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _regeneratorRuntime from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.map.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/es.string.fixed.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/web.timers.js\";\nimport { defineComponent, getCurrentInstance, inject, ref, reactive, watch, onMounted, nextTick, h } from 'vue';\nimport { ElCheckbox } from '../../../checkbox/index.mjs';\nimport FilterPanel from '../filter-panel.mjs';\nimport useLayoutObserver from '../layout-observer.mjs';\nimport { TABLE_INJECTION_KEY } from '../tokens.mjs';\nimport useEvent from './event-helper.mjs';\nimport useStyle from './style.helper.mjs';\nimport useUtils from './utils-helper.mjs';\nimport { useNamespace } from '../../../../hooks/use-namespace/index.mjs';\nvar TableHeader = defineComponent({\n  name: \"ElTableHeader\",\n  components: {\n    ElCheckbox: ElCheckbox\n  },\n  props: {\n    fixed: {\n      type: String,\n      \"default\": \"\"\n    },\n    store: {\n      required: true,\n      type: Object\n    },\n    border: Boolean,\n    defaultSort: {\n      type: Object,\n      \"default\": function _default() {\n        return {\n          prop: \"\",\n          order: \"\"\n        };\n      }\n    },\n    appendFilterPanelTo: {\n      type: String\n    },\n    allowDragLastColumn: {\n      type: Boolean\n    }\n  },\n  setup: function setup(props, _ref) {\n    var emit = _ref.emit;\n    var instance = getCurrentInstance();\n    var parent = inject(TABLE_INJECTION_KEY);\n    var ns = useNamespace(\"table\");\n    var filterPanels = ref({});\n    var _useLayoutObserver = useLayoutObserver(parent),\n      onColumnsChange = _useLayoutObserver.onColumnsChange,\n      onScrollableChange = _useLayoutObserver.onScrollableChange;\n    var isTableLayoutAuto = (parent == null ? void 0 : parent.props.tableLayout) === \"auto\";\n    var saveIndexSelection = reactive(/* @__PURE__ */new Map());\n    var theadRef = ref();\n    var updateFixedColumnStyle = function updateFixedColumnStyle() {\n      setTimeout(function () {\n        if (saveIndexSelection.size > 0) {\n          saveIndexSelection.forEach(function (column, key) {\n            var el = theadRef.value.querySelector(\".\".concat(key.replace(/\\s/g, \".\")));\n            if (el) {\n              var width = el.getBoundingClientRect().width;\n              column.width = width;\n            }\n          });\n          saveIndexSelection.clear();\n        }\n      });\n    };\n    watch(saveIndexSelection, updateFixedColumnStyle);\n    onMounted(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var _props$defaultSort, prop, order;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return nextTick();\n          case 2:\n            _context.next = 4;\n            return nextTick();\n          case 4:\n            _props$defaultSort = props.defaultSort, prop = _props$defaultSort.prop, order = _props$defaultSort.order;\n            parent == null ? void 0 : parent.store.commit(\"sort\", {\n              prop: prop,\n              order: order,\n              init: true\n            });\n            updateFixedColumnStyle();\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    })));\n    var _useEvent = useEvent(props, emit),\n      handleHeaderClick = _useEvent.handleHeaderClick,\n      handleHeaderContextMenu = _useEvent.handleHeaderContextMenu,\n      handleMouseDown = _useEvent.handleMouseDown,\n      handleMouseMove = _useEvent.handleMouseMove,\n      handleMouseOut = _useEvent.handleMouseOut,\n      handleSortClick = _useEvent.handleSortClick,\n      handleFilterClick = _useEvent.handleFilterClick;\n    var _useStyle = useStyle(props),\n      getHeaderRowStyle = _useStyle.getHeaderRowStyle,\n      getHeaderRowClass = _useStyle.getHeaderRowClass,\n      getHeaderCellStyle = _useStyle.getHeaderCellStyle,\n      getHeaderCellClass = _useStyle.getHeaderCellClass;\n    var _useUtils = useUtils(props),\n      isGroup = _useUtils.isGroup,\n      toggleAllSelection = _useUtils.toggleAllSelection,\n      columnRows = _useUtils.columnRows;\n    instance.state = {\n      onColumnsChange: onColumnsChange,\n      onScrollableChange: onScrollableChange\n    };\n    instance.filterPanels = filterPanels;\n    return {\n      ns: ns,\n      filterPanels: filterPanels,\n      onColumnsChange: onColumnsChange,\n      onScrollableChange: onScrollableChange,\n      columnRows: columnRows,\n      getHeaderRowClass: getHeaderRowClass,\n      getHeaderRowStyle: getHeaderRowStyle,\n      getHeaderCellClass: getHeaderCellClass,\n      getHeaderCellStyle: getHeaderCellStyle,\n      handleHeaderClick: handleHeaderClick,\n      handleHeaderContextMenu: handleHeaderContextMenu,\n      handleMouseDown: handleMouseDown,\n      handleMouseMove: handleMouseMove,\n      handleMouseOut: handleMouseOut,\n      handleSortClick: handleSortClick,\n      handleFilterClick: handleFilterClick,\n      isGroup: isGroup,\n      toggleAllSelection: toggleAllSelection,\n      saveIndexSelection: saveIndexSelection,\n      isTableLayoutAuto: isTableLayoutAuto,\n      theadRef: theadRef,\n      updateFixedColumnStyle: updateFixedColumnStyle\n    };\n  },\n  render: function render() {\n    var ns = this.ns,\n      isGroup = this.isGroup,\n      columnRows = this.columnRows,\n      getHeaderCellStyle = this.getHeaderCellStyle,\n      getHeaderCellClass = this.getHeaderCellClass,\n      getHeaderRowClass = this.getHeaderRowClass,\n      getHeaderRowStyle = this.getHeaderRowStyle,\n      handleHeaderClick = this.handleHeaderClick,\n      handleHeaderContextMenu = this.handleHeaderContextMenu,\n      handleMouseDown = this.handleMouseDown,\n      handleMouseMove = this.handleMouseMove,\n      handleSortClick = this.handleSortClick,\n      handleMouseOut = this.handleMouseOut,\n      store = this.store,\n      $parent = this.$parent,\n      saveIndexSelection = this.saveIndexSelection,\n      isTableLayoutAuto = this.isTableLayoutAuto;\n    var rowSpan = 1;\n    return h(\"thead\", {\n      ref: \"theadRef\",\n      \"class\": _defineProperty({}, ns.is(\"group\"), isGroup)\n    }, columnRows.map(function (subColumns, rowIndex) {\n      return h(\"tr\", {\n        \"class\": getHeaderRowClass(rowIndex),\n        key: rowIndex,\n        style: getHeaderRowStyle(rowIndex)\n      }, subColumns.map(function (column, cellIndex) {\n        if (column.rowSpan > rowSpan) {\n          rowSpan = column.rowSpan;\n        }\n        var _class = getHeaderCellClass(rowIndex, cellIndex, subColumns, column);\n        if (isTableLayoutAuto && column.fixed) {\n          saveIndexSelection.set(_class, column);\n        }\n        return h(\"th\", {\n          \"class\": _class,\n          colspan: column.colSpan,\n          key: \"\".concat(column.id, \"-thead\"),\n          rowspan: column.rowSpan,\n          style: getHeaderCellStyle(rowIndex, cellIndex, subColumns, column),\n          onClick: function onClick($event) {\n            if ($event.currentTarget.classList.contains(\"noclick\")) {\n              return;\n            }\n            handleHeaderClick($event, column);\n          },\n          onContextmenu: function onContextmenu($event) {\n            return handleHeaderContextMenu($event, column);\n          },\n          onMousedown: function onMousedown($event) {\n            return handleMouseDown($event, column);\n          },\n          onMousemove: function onMousemove($event) {\n            return handleMouseMove($event, column);\n          },\n          onMouseout: handleMouseOut\n        }, [h(\"div\", {\n          \"class\": [\"cell\", column.filteredValue && column.filteredValue.length > 0 ? \"highlight\" : \"\"]\n        }, [column.renderHeader ? column.renderHeader({\n          column: column,\n          $index: cellIndex,\n          store: store,\n          _self: $parent\n        }) : column.label, column.sortable && h(\"span\", {\n          onClick: function onClick($event) {\n            return handleSortClick($event, column);\n          },\n          \"class\": \"caret-wrapper\"\n        }, [h(\"i\", {\n          onClick: function onClick($event) {\n            return handleSortClick($event, column, \"ascending\");\n          },\n          \"class\": \"sort-caret ascending\"\n        }), h(\"i\", {\n          onClick: function onClick($event) {\n            return handleSortClick($event, column, \"descending\");\n          },\n          \"class\": \"sort-caret descending\"\n        })]), column.filterable && h(FilterPanel, {\n          store: store,\n          placement: column.filterPlacement || \"bottom-start\",\n          appendTo: $parent.appendFilterPanelTo,\n          column: column,\n          upDataColumn: function upDataColumn(key, value) {\n            column[key] = value;\n          }\n        }, {\n          \"filter-icon\": function filterIcon() {\n            return column.renderFilterIcon ? column.renderFilterIcon({\n              filterOpened: column.filterOpened\n            }) : null;\n          }\n        })])]);\n      }));\n    }));\n  }\n});\nexport { TableHeader as default };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}