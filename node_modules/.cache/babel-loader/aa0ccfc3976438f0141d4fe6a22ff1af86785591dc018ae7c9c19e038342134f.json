{"ast":null,"code":"import { cAF, rAF } from '../../../../utils/raf.mjs';\nvar useGridWheel = function useGridWheel(_ref, onWheelDelta) {\n  var atXEndEdge = _ref.atXEndEdge,\n    atXStartEdge = _ref.atXStartEdge,\n    atYEndEdge = _ref.atYEndEdge,\n    atYStartEdge = _ref.atYStartEdge;\n  var frameHandle = null;\n  var xOffset = 0;\n  var yOffset = 0;\n  var hasReachedEdge = function hasReachedEdge(x, y) {\n    var xEdgeReached = x <= 0 && atXStartEdge.value || x >= 0 && atXEndEdge.value;\n    var yEdgeReached = y <= 0 && atYStartEdge.value || y >= 0 && atYEndEdge.value;\n    return xEdgeReached && yEdgeReached;\n  };\n  var onWheel = function onWheel(e) {\n    cAF(frameHandle);\n    var x = e.deltaX;\n    var y = e.deltaY;\n    if (Math.abs(x) > Math.abs(y)) {\n      y = 0;\n    } else {\n      x = 0;\n    }\n    if (e.shiftKey && y !== 0) {\n      x = y;\n      y = 0;\n    }\n    if (hasReachedEdge(xOffset, yOffset) && hasReachedEdge(xOffset + x, yOffset + y)) return;\n    xOffset += x;\n    yOffset += y;\n    e.preventDefault();\n    frameHandle = rAF(function () {\n      onWheelDelta(xOffset, yOffset);\n      xOffset = 0;\n      yOffset = 0;\n    });\n  };\n  return {\n    hasReachedEdge: hasReachedEdge,\n    onWheel: onWheel\n  };\n};\nexport { useGridWheel };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}