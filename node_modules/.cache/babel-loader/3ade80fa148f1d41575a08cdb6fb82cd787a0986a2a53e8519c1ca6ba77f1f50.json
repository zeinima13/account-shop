{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.date.now.js\";\nimport { ref, onMounted } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\nexport default {\n  name: 'Payment',\n  setup: function setup() {\n    var route = useRoute();\n    var router = useRouter();\n    var orderId = ref('');\n    var totalAmount = ref(0);\n    var selectedMethod = ref('');\n    var paymentMethods = [{\n      name: 'imToken',\n      label: 'imToken - TRC20/ERC20/BEP20'\n    }, {\n      name: 'TokenPocket',\n      label: 'TokenPocket - TRC20/ERC20/BEP20'\n    }, {\n      name: 'MetaMask',\n      label: 'MetaMask - ERC20'\n    }];\n    onMounted(function () {\n      // 生成订单号\n      orderId.value = 'BL' + Date.now();\n      // 计算总金额\n      var _route$query = route.query,\n        productId = _route$query.productId,\n        quantity = _route$query.quantity;\n      // 这里应该从API获取商品价格\n      totalAmount.value = 99 * quantity;\n    });\n    var getInstructions = function getInstructions(method) {\n      return \"\\u8BF7\\u4F7F\\u7528\".concat(method, \"\\u94B1\\u5305\\u626B\\u63CF\\u4E8C\\u7EF4\\u7801\\u5B8C\\u6210\\u652F\\u4ED8\\uFF0C\\u6216\\u76F4\\u63A5\\u8F6C\\u8D26\\u81F3\\u4EE5\\u4E0B\\u5730\\u5740\\uFF1A\\nTRC20\\u5730\\u5740\\uFF1ATR7NHqjeKQxGTCi8q8ZY4pL8otSzgjLj6t\");\n    };\n    var confirmPayment = function confirmPayment() {\n      // 这里应该调用API验证支付状态\n      ElMessage.success('支付成功！');\n      router.push('/orders');\n    };\n    var cancelOrder = function cancelOrder() {\n      router.push('/');\n    };\n    return {\n      orderId: orderId,\n      totalAmount: totalAmount,\n      selectedMethod: selectedMethod,\n      paymentMethods: paymentMethods,\n      getInstructions: getInstructions,\n      confirmPayment: confirmPayment,\n      cancelOrder: cancelOrder\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","useRoute","useRouter","name","setup","route","router","orderId","totalAmount","selectedMethod","paymentMethods","label","value","Date","now","_route$query","query","productId","quantity","getInstructions","method","concat","confirmPayment","ElMessage","success","push","cancelOrder"],"sources":["C:\\Users\\ASUS\\CascadeProjects\\account-shop\\src\\views\\Payment.vue"],"sourcesContent":["<template>\n  <div class=\"payment-container\">\n    <el-card class=\"payment-card\">\n      <template #header>\n        <div class=\"card-header\">\n          <span>订单信息</span>\n        </div>\n      </template>\n      \n      <el-descriptions :column=\"1\" border>\n        <el-descriptions-item label=\"订单号\">{{ orderId }}</el-descriptions-item>\n        <el-descriptions-item label=\"支付金额\">{{ totalAmount }} USDT</el-descriptions-item>\n      </el-descriptions>\n\n      <div class=\"payment-methods\">\n        <h3>USDT - 请选择您的支付方式</h3>\n        <el-radio-group v-model=\"selectedMethod\">\n          <el-radio-button v-for=\"method in paymentMethods\" \n            :key=\"method.name\" \n            :label=\"method.name\">\n            {{ method.label }}\n          </el-radio-button>\n        </el-radio-group>\n      </div>\n\n      <div class=\"payment-instructions\" v-if=\"selectedMethod\">\n        <el-alert\n          title=\"请在支付完成后点击下方已完成支付按钮\"\n          type=\"warning\"\n          :closable=\"false\"\n        />\n        <div class=\"instruction-content\">\n          {{ getInstructions(selectedMethod) }}\n        </div>\n      </div>\n\n      <div class=\"action-buttons\">\n        <el-button type=\"primary\" @click=\"confirmPayment\">已完成支付</el-button>\n        <el-button @click=\"cancelOrder\">取消订单</el-button>\n      </div>\n    </el-card>\n  </div>\n</template>\n\n<script>\nimport { ref, onMounted } from 'vue'\nimport { useRoute, useRouter } from 'vue-router'\n\nexport default {\n  name: 'Payment',\n  setup() {\n    const route = useRoute()\n    const router = useRouter()\n    const orderId = ref('')\n    const totalAmount = ref(0)\n    const selectedMethod = ref('')\n\n    const paymentMethods = [\n      { name: 'imToken', label: 'imToken - TRC20/ERC20/BEP20' },\n      { name: 'TokenPocket', label: 'TokenPocket - TRC20/ERC20/BEP20' },\n      { name: 'MetaMask', label: 'MetaMask - ERC20' }\n    ]\n\n    onMounted(() => {\n      // 生成订单号\n      orderId.value = 'BL' + Date.now()\n      // 计算总金额\n      const { productId, quantity } = route.query\n      // 这里应该从API获取商品价格\n      totalAmount.value = 99 * quantity\n    })\n\n    const getInstructions = (method) => {\n      return `请使用${method}钱包扫描二维码完成支付，或直接转账至以下地址：\\nTRC20地址：TR7NHqjeKQxGTCi8q8ZY4pL8otSzgjLj6t`\n    }\n\n    const confirmPayment = () => {\n      // 这里应该调用API验证支付状态\n      ElMessage.success('支付成功！')\n      router.push('/orders')\n    }\n\n    const cancelOrder = () => {\n      router.push('/')\n    }\n\n    return {\n      orderId,\n      totalAmount,\n      selectedMethod,\n      paymentMethods,\n      getInstructions,\n      confirmPayment,\n      cancelOrder\n    }\n  }\n}\n</script>\n\n<style scoped>\n.payment-container {\n  max-width: 800px;\n  margin: 20px auto;\n  padding: 0 20px;\n}\n\n.payment-card {\n  margin-bottom: 20px;\n}\n\n.card-header {\n  font-size: 18px;\n  font-weight: bold;\n}\n\n.payment-methods {\n  margin: 20px 0;\n}\n\n.payment-instructions {\n  margin: 20px 0;\n}\n\n.instruction-content {\n  margin: 20px 0;\n  padding: 20px;\n  background: #f5f7fa;\n  border-radius: 4px;\n  white-space: pre-line;\n}\n\n.action-buttons {\n  margin-top: 20px;\n  text-align: center;\n}\n</style>\n"],"mappings":";;AA6CA,SAASA,GAAG,EAAEC,SAAQ,QAAS,KAAI;AACnC,SAASC,QAAQ,EAAEC,SAAQ,QAAS,YAAW;AAE/C,eAAe;EACbC,IAAI,EAAE,SAAS;EACfC,KAAK,WAALA,KAAKA,CAAA,EAAG;IACN,IAAMC,KAAI,GAAIJ,QAAQ,CAAC;IACvB,IAAMK,MAAK,GAAIJ,SAAS,CAAC;IACzB,IAAMK,OAAM,GAAIR,GAAG,CAAC,EAAE;IACtB,IAAMS,WAAU,GAAIT,GAAG,CAAC,CAAC;IACzB,IAAMU,cAAa,GAAIV,GAAG,CAAC,EAAE;IAE7B,IAAMW,cAAa,GAAI,CACrB;MAAEP,IAAI,EAAE,SAAS;MAAEQ,KAAK,EAAE;IAA8B,CAAC,EACzD;MAAER,IAAI,EAAE,aAAa;MAAEQ,KAAK,EAAE;IAAkC,CAAC,EACjE;MAAER,IAAI,EAAE,UAAU;MAAEQ,KAAK,EAAE;IAAmB,EAChD;IAEAX,SAAS,CAAC,YAAM;MACd;MACAO,OAAO,CAACK,KAAI,GAAI,IAAG,GAAIC,IAAI,CAACC,GAAG,CAAC;MAChC;MACA,IAAAC,YAAA,GAAgCV,KAAK,CAACW,KAAI;QAAlCC,SAAS,GAAAF,YAAA,CAATE,SAAS;QAAEC,QAAO,GAAAH,YAAA,CAAPG,QAAO;MAC1B;MACAV,WAAW,CAACI,KAAI,GAAI,EAAC,GAAIM,QAAO;IAClC,CAAC;IAED,IAAMC,eAAc,GAAI,SAAlBA,eAAcA,CAAKC,MAAM,EAAK;MAClC,4BAAAC,MAAA,CAAaD,MAAM;IACrB;IAEA,IAAME,cAAa,GAAI,SAAjBA,cAAaA,CAAA,EAAU;MAC3B;MACAC,SAAS,CAACC,OAAO,CAAC,OAAO;MACzBlB,MAAM,CAACmB,IAAI,CAAC,SAAS;IACvB;IAEA,IAAMC,WAAU,GAAI,SAAdA,WAAUA,CAAA,EAAU;MACxBpB,MAAM,CAACmB,IAAI,CAAC,GAAG;IACjB;IAEA,OAAO;MACLlB,OAAO,EAAPA,OAAO;MACPC,WAAW,EAAXA,WAAW;MACXC,cAAc,EAAdA,cAAc;MACdC,cAAc,EAAdA,cAAc;MACdS,eAAe,EAAfA,eAAe;MACfG,cAAc,EAAdA,cAAc;MACdI,WAAU,EAAVA;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}