{"ast":null,"code":"import _objectSpread from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { defineComponent, ref, inject, computed, onBeforeUnmount, unref, watch, openBlock, createBlock, withCtx, createVNode, Transition, withDirectives, mergeProps, renderSlot, vShow, createCommentVNode } from 'vue';\nimport { onClickOutside } from '@vueuse/core';\nimport '../../popper/index.mjs';\nimport { ElTeleport } from '../../teleport/index.mjs';\nimport { TOOLTIP_INJECTION_KEY } from './constants.mjs';\nimport { useTooltipContentProps } from './content.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { usePopperContainerId } from '../../../hooks/use-popper-container/index.mjs';\nimport ElPopperContent from '../../popper/src/content2.mjs';\nimport { tryFocus } from '../../focus-trap/src/utils.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { composeEventHandlers } from '../../../utils/dom/event.mjs';\nvar __default__ = defineComponent({\n  name: \"ElTooltipContent\",\n  inheritAttrs: false\n});\nvar _sfc_main = /* @__PURE__ */defineComponent(_objectSpread(_objectSpread({}, __default__), {}, {\n  props: useTooltipContentProps,\n  setup: function setup(__props, _ref) {\n    var expose = _ref.expose;\n    var props = __props;\n    var _usePopperContainerId = usePopperContainerId(),\n      selector = _usePopperContainerId.selector;\n    var ns = useNamespace(\"tooltip\");\n    var contentRef = ref();\n    var stopHandle;\n    var _inject = inject(TOOLTIP_INJECTION_KEY, void 0),\n      controlled = _inject.controlled,\n      id = _inject.id,\n      open = _inject.open,\n      trigger = _inject.trigger,\n      onClose = _inject.onClose,\n      onOpen = _inject.onOpen,\n      onShow = _inject.onShow,\n      onHide = _inject.onHide,\n      onBeforeShow = _inject.onBeforeShow,\n      onBeforeHide = _inject.onBeforeHide;\n    var transitionClass = computed(function () {\n      return props.transition || \"\".concat(ns.namespace.value, \"-fade-in-linear\");\n    });\n    var persistentRef = computed(function () {\n      if (process.env.NODE_ENV === \"test\") {\n        return true;\n      }\n      return props.persistent;\n    });\n    onBeforeUnmount(function () {\n      stopHandle == null ? void 0 : stopHandle();\n    });\n    var shouldRender = computed(function () {\n      return unref(persistentRef) ? true : unref(open);\n    });\n    var shouldShow = computed(function () {\n      return props.disabled ? false : unref(open);\n    });\n    var appendTo = computed(function () {\n      return props.appendTo || selector.value;\n    });\n    var contentStyle = computed(function () {\n      var _a;\n      return (_a = props.style) != null ? _a : {};\n    });\n    var ariaHidden = ref(true);\n    var onTransitionLeave = function onTransitionLeave() {\n      onHide();\n      isFocusInsideContent() && tryFocus(document.body);\n      ariaHidden.value = true;\n    };\n    var stopWhenControlled = function stopWhenControlled() {\n      if (unref(controlled)) return true;\n    };\n    var onContentEnter = composeEventHandlers(stopWhenControlled, function () {\n      if (props.enterable && unref(trigger) === \"hover\") {\n        onOpen();\n      }\n    });\n    var onContentLeave = composeEventHandlers(stopWhenControlled, function () {\n      if (unref(trigger) === \"hover\") {\n        onClose();\n      }\n    });\n    var onBeforeEnter = function onBeforeEnter() {\n      var _a, _b;\n      (_b = (_a = contentRef.value) == null ? void 0 : _a.updatePopper) == null ? void 0 : _b.call(_a);\n      onBeforeShow == null ? void 0 : onBeforeShow();\n    };\n    var onBeforeLeave = function onBeforeLeave() {\n      onBeforeHide == null ? void 0 : onBeforeHide();\n    };\n    var onAfterShow = function onAfterShow() {\n      onShow();\n      stopHandle = onClickOutside(computed(function () {\n        var _a;\n        return (_a = contentRef.value) == null ? void 0 : _a.popperContentRef;\n      }), function () {\n        if (unref(controlled)) return;\n        var $trigger = unref(trigger);\n        if ($trigger !== \"hover\") {\n          onClose();\n        }\n      });\n    };\n    var onBlur = function onBlur() {\n      if (!props.virtualTriggering) {\n        onClose();\n      }\n    };\n    var isFocusInsideContent = function isFocusInsideContent(event) {\n      var _a;\n      var popperContent = (_a = contentRef.value) == null ? void 0 : _a.popperContentRef;\n      var activeElement = (event == null ? void 0 : event.relatedTarget) || document.activeElement;\n      return popperContent == null ? void 0 : popperContent.contains(activeElement);\n    };\n    watch(function () {\n      return unref(open);\n    }, function (val) {\n      if (!val) {\n        stopHandle == null ? void 0 : stopHandle();\n      } else {\n        ariaHidden.value = false;\n      }\n    }, {\n      flush: \"post\"\n    });\n    watch(function () {\n      return props.content;\n    }, function () {\n      var _a, _b;\n      (_b = (_a = contentRef.value) == null ? void 0 : _a.updatePopper) == null ? void 0 : _b.call(_a);\n    });\n    expose({\n      contentRef: contentRef,\n      isFocusInsideContent: isFocusInsideContent\n    });\n    return function (_ctx, _cache) {\n      return openBlock(), createBlock(unref(ElTeleport), {\n        disabled: !_ctx.teleported,\n        to: unref(appendTo)\n      }, {\n        \"default\": withCtx(function () {\n          return [createVNode(Transition, {\n            name: unref(transitionClass),\n            onAfterLeave: onTransitionLeave,\n            onBeforeEnter: onBeforeEnter,\n            onAfterEnter: onAfterShow,\n            onBeforeLeave: onBeforeLeave\n          }, {\n            \"default\": withCtx(function () {\n              return [unref(shouldRender) ? withDirectives((openBlock(), createBlock(unref(ElPopperContent), mergeProps({\n                key: 0,\n                id: unref(id),\n                ref_key: \"contentRef\",\n                ref: contentRef\n              }, _ctx.$attrs, {\n                \"aria-label\": _ctx.ariaLabel,\n                \"aria-hidden\": ariaHidden.value,\n                \"boundaries-padding\": _ctx.boundariesPadding,\n                \"fallback-placements\": _ctx.fallbackPlacements,\n                \"gpu-acceleration\": _ctx.gpuAcceleration,\n                offset: _ctx.offset,\n                placement: _ctx.placement,\n                \"popper-options\": _ctx.popperOptions,\n                strategy: _ctx.strategy,\n                effect: _ctx.effect,\n                enterable: _ctx.enterable,\n                pure: _ctx.pure,\n                \"popper-class\": _ctx.popperClass,\n                \"popper-style\": [_ctx.popperStyle, unref(contentStyle)],\n                \"reference-el\": _ctx.referenceEl,\n                \"trigger-target-el\": _ctx.triggerTargetEl,\n                visible: unref(shouldShow),\n                \"z-index\": _ctx.zIndex,\n                onMouseenter: unref(onContentEnter),\n                onMouseleave: unref(onContentLeave),\n                onBlur: onBlur,\n                onClose: unref(onClose)\n              }), {\n                \"default\": withCtx(function () {\n                  return [renderSlot(_ctx.$slots, \"default\")];\n                }),\n                _: 3\n              }, 16, [\"id\", \"aria-label\", \"aria-hidden\", \"boundaries-padding\", \"fallback-placements\", \"gpu-acceleration\", \"offset\", \"placement\", \"popper-options\", \"strategy\", \"effect\", \"enterable\", \"pure\", \"popper-class\", \"popper-style\", \"reference-el\", \"trigger-target-el\", \"visible\", \"z-index\", \"onMouseenter\", \"onMouseleave\", \"onClose\"])), [[vShow, unref(shouldShow)]]) : createCommentVNode(\"v-if\", true)];\n            }),\n            _: 3\n          }, 8, [\"name\"])];\n        }),\n        _: 3\n      }, 8, [\"disabled\", \"to\"]);\n    };\n  }\n}));\nvar ElTooltipContent = /* @__PURE__ */_export_sfc(_sfc_main, [[\"__file\", \"content.vue\"]]);\nexport { ElTooltipContent as default };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}