{"ast":null,"code":"import \"core-js/modules/es.function.name.js\";\nimport { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"payment-container\"\n};\nvar _hoisted_2 = {\n  \"class\": \"payment-box\"\n};\nvar _hoisted_3 = {\n  \"class\": \"order-info\"\n};\nvar _hoisted_4 = {\n  \"class\": \"info-item\"\n};\nvar _hoisted_5 = {\n  \"class\": \"value\"\n};\nvar _hoisted_6 = {\n  \"class\": \"info-item\"\n};\nvar _hoisted_7 = {\n  \"class\": \"value\"\n};\nvar _hoisted_8 = {\n  \"class\": \"info-item\"\n};\nvar _hoisted_9 = {\n  \"class\": \"value\"\n};\nvar _hoisted_10 = {\n  \"class\": \"info-item\"\n};\nvar _hoisted_11 = {\n  \"class\": \"value price\"\n};\nvar _hoisted_12 = {\n  \"class\": \"payment-method\"\n};\nvar _hoisted_13 = {\n  \"class\": \"wallet-options\"\n};\nvar _hoisted_14 = [\"onClick\"];\nvar _hoisted_15 = [\"src\", \"alt\"];\nvar _hoisted_16 = {\n  key: 0,\n  \"class\": \"payment-qr\"\n};\nvar _hoisted_17 = {\n  \"class\": \"wallet-address\"\n};\nvar _hoisted_18 = {\n  \"class\": \"address-box\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_el_button = _resolveComponent(\"el-button\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_cache[4] || (_cache[4] = _createElementVNode(\"h2\", null, \"订单信息\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_4, [_cache[0] || (_cache[0] = _createElementVNode(\"span\", {\n    \"class\": \"label\"\n  }, \"订单编号:\", -1 /* HOISTED */)), _createElementVNode(\"span\", _hoisted_5, _toDisplayString($setup.orderId), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_6, [_cache[1] || (_cache[1] = _createElementVNode(\"span\", {\n    \"class\": \"label\"\n  }, \"商品名称:\", -1 /* HOISTED */)), _createElementVNode(\"span\", _hoisted_7, _toDisplayString($setup.order.productName), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_8, [_cache[2] || (_cache[2] = _createElementVNode(\"span\", {\n    \"class\": \"label\"\n  }, \"购买数量:\", -1 /* HOISTED */)), _createElementVNode(\"span\", _hoisted_9, _toDisplayString($setup.order.quantity), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_10, [_cache[3] || (_cache[3] = _createElementVNode(\"span\", {\n    \"class\": \"label\"\n  }, \"支付金额:\", -1 /* HOISTED */)), _createElementVNode(\"span\", _hoisted_11, \"¥\" + _toDisplayString($setup.order.total), 1 /* TEXT */)])]), _createElementVNode(\"div\", _hoisted_12, [_cache[5] || (_cache[5] = _createElementVNode(\"h3\", null, \"选择支付方式\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_13, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.wallets, function (wallet) {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: wallet.id,\n      \"class\": _normalizeClass([\"wallet-item\", {\n        active: $setup.selectedWallet === wallet.id\n      }]),\n      onClick: function onClick($event) {\n        return $setup.selectWallet(wallet.id);\n      }\n    }, [_createElementVNode(\"img\", {\n      src: wallet.icon,\n      alt: wallet.name\n    }, null, 8 /* PROPS */, _hoisted_15), _createElementVNode(\"span\", null, _toDisplayString(wallet.name), 1 /* TEXT */)], 10 /* CLASS, PROPS */, _hoisted_14);\n  }), 128 /* KEYED_FRAGMENT */))])]), $setup.selectedWallet ? (_openBlock(), _createElementBlock(\"div\", _hoisted_16, [_cache[8] || (_cache[8] = _createElementVNode(\"div\", {\n    \"class\": \"qr-code\"\n  }, [_createCommentVNode(\" 这里放二维码图片 \"), _createElementVNode(\"img\", {\n    src: \"/qr-code.png\",\n    alt: \"支付二维码\"\n  })], -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_17, [_cache[7] || (_cache[7] = _createElementVNode(\"p\", null, \"钱包地址：\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_18, [_createElementVNode(\"span\", null, _toDisplayString($setup.walletAddress), 1 /* TEXT */), _createVNode(_component_el_button, {\n    type: \"primary\",\n    size: \"small\",\n    onClick: $setup.copyAddress\n  }, {\n    \"default\": _withCtx(function () {\n      return _cache[6] || (_cache[6] = [_createTextVNode(\" 复制 \")]);\n    }),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onClick\"])])])])) : _createCommentVNode(\"v-if\", true), _cache[9] || (_cache[9] = _createElementVNode(\"div\", {\n    \"class\": \"payment-tips\"\n  }, [_createElementVNode(\"p\", null, \"支付完成后请等待系统自动确认\"), _createElementVNode(\"p\", null, \"如有问题请联系客服\")], -1 /* HOISTED */))])]);\n}","map":{"version":3,"names":["key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_toDisplayString","$setup","orderId","_hoisted_6","_hoisted_7","order","productName","_hoisted_8","_hoisted_9","quantity","_hoisted_10","_hoisted_11","total","_hoisted_12","_hoisted_13","_Fragment","_renderList","wallets","wallet","id","_normalizeClass","active","selectedWallet","onClick","$event","selectWallet","src","icon","alt","name","_hoisted_15","_hoisted_14","_hoisted_16","_createCommentVNode","_hoisted_17","_hoisted_18","walletAddress","_createVNode","_component_el_button","type","size","copyAddress","_withCtx","_cache","_createTextVNode","_"],"sources":["C:\\Users\\ASUS\\CascadeProjects\\account-shop\\src\\views\\Payment.vue"],"sourcesContent":["<template>\n  <div class=\"payment-container\">\n    <div class=\"payment-box\">\n      <div class=\"order-info\">\n        <h2>订单信息</h2>\n        <div class=\"info-item\">\n          <span class=\"label\">订单编号:</span>\n          <span class=\"value\">{{ orderId }}</span>\n        </div>\n        <div class=\"info-item\">\n          <span class=\"label\">商品名称:</span>\n          <span class=\"value\">{{ order.productName }}</span>\n        </div>\n        <div class=\"info-item\">\n          <span class=\"label\">购买数量:</span>\n          <span class=\"value\">{{ order.quantity }}</span>\n        </div>\n        <div class=\"info-item\">\n          <span class=\"label\">支付金额:</span>\n          <span class=\"value price\">¥{{ order.total }}</span>\n        </div>\n      </div>\n\n      <div class=\"payment-method\">\n        <h3>选择支付方式</h3>\n        <div class=\"wallet-options\">\n          <div \n            v-for=\"wallet in wallets\" \n            :key=\"wallet.id\"\n            class=\"wallet-item\"\n            :class=\"{ active: selectedWallet === wallet.id }\"\n            @click=\"selectWallet(wallet.id)\"\n          >\n            <img :src=\"wallet.icon\" :alt=\"wallet.name\">\n            <span>{{ wallet.name }}</span>\n          </div>\n        </div>\n      </div>\n\n      <div v-if=\"selectedWallet\" class=\"payment-qr\">\n        <div class=\"qr-code\">\n          <!-- 这里放二维码图片 -->\n          <img src=\"/qr-code.png\" alt=\"支付二维码\">\n        </div>\n        <div class=\"wallet-address\">\n          <p>钱包地址：</p>\n          <div class=\"address-box\">\n            <span>{{ walletAddress }}</span>\n            <el-button \n              type=\"primary\" \n              size=\"small\"\n              @click=\"copyAddress\"\n            >\n              复制\n            </el-button>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"payment-tips\">\n        <p>支付完成后请等待系统自动确认</p>\n        <p>如有问题请联系客服</p>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, onMounted } from 'vue'\nimport { useRoute } from 'vue-router'\nimport { ElMessage } from 'element-plus'\n\nexport default {\n  name: 'PaymentPage',\n  setup() {\n    const route = useRoute()\n    const order = ref({})\n    const orderId = ref('')\n    const selectedWallet = ref('')\n    const walletAddress = ref('TRx1234567890abcdef1234567890abcdef12')\n\n    const wallets = [\n      { id: 'imtoken', name: 'imToken', icon: '/wallet-icons/imtoken.svg' },\n      { id: 'tokenpocket', name: 'TokenPocket', icon: '/wallet-icons/tokenpocket.svg' },\n      { id: 'okx', name: 'OKX', icon: '/wallet-icons/okx.svg' }\n    ]\n\n    onMounted(() => {\n      // 生成随机订单号\n      orderId.value = 'ORD' + Date.now().toString().slice(-8)\n      \n      // 获取订单信息\n      try {\n        const orderData = JSON.parse(route.params.order || '{}')\n        order.value = orderData\n      } catch (error) {\n        console.error('Failed to parse order data:', error)\n        ElMessage.error('订单数据错误')\n      }\n    })\n\n    const selectWallet = (walletId) => {\n      selectedWallet.value = walletId\n    }\n\n    const copyAddress = () => {\n      navigator.clipboard.writeText(walletAddress.value)\n        .then(() => {\n          ElMessage.success('地址已复制')\n        })\n        .catch(() => {\n          ElMessage.error('复制失败')\n        })\n    }\n\n    return {\n      order,\n      orderId,\n      wallets,\n      selectedWallet,\n      walletAddress,\n      selectWallet,\n      copyAddress\n    }\n  }\n}\n</script>\n\n<style scoped>\n.payment-container {\n  min-height: 100vh;\n  background: #f5f7fa;\n  display: flex;\n  justify-content: center;\n  padding: 20px;\n}\n\n.payment-box {\n  width: 100%;\n  max-width: 500px;\n  background: white;\n  padding: 30px;\n  border-radius: 8px;\n  box-shadow: 0 2px 12px 0 rgba(0,0,0,0.1);\n}\n\n.order-info {\n  margin-bottom: 30px;\n}\n\n.order-info h2 {\n  margin: 0 0 20px;\n  color: #303133;\n  font-size: 20px;\n}\n\n.info-item {\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 15px;\n  font-size: 14px;\n}\n\n.info-item .label {\n  color: #909399;\n}\n\n.info-item .value {\n  color: #303133;\n}\n\n.info-item .price {\n  color: #f56c6c;\n  font-size: 16px;\n  font-weight: bold;\n}\n\n.payment-method {\n  margin-bottom: 30px;\n}\n\n.payment-method h3 {\n  margin: 0 0 15px;\n  color: #303133;\n}\n\n.wallet-options {\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  gap: 15px;\n}\n\n.wallet-item {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 15px;\n  border: 1px solid #dcdfe6;\n  border-radius: 4px;\n  cursor: pointer;\n  transition: all 0.3s;\n}\n\n.wallet-item:hover {\n  border-color: #409eff;\n}\n\n.wallet-item.active {\n  border-color: #409eff;\n  background: #ecf5ff;\n}\n\n.wallet-item img {\n  width: 40px;\n  height: 40px;\n  margin-bottom: 8px;\n}\n\n.wallet-item span {\n  font-size: 12px;\n  color: #606266;\n}\n\n.payment-qr {\n  margin: 30px 0;\n  text-align: center;\n}\n\n.qr-code {\n  margin-bottom: 20px;\n}\n\n.qr-code img {\n  width: 200px;\n  height: 200px;\n}\n\n.wallet-address {\n  margin-top: 20px;\n}\n\n.wallet-address p {\n  margin: 0 0 10px;\n  color: #909399;\n}\n\n.address-box {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 10px;\n  background: #f5f7fa;\n  padding: 10px;\n  border-radius: 4px;\n}\n\n.address-box span {\n  font-family: monospace;\n  color: #606266;\n}\n\n.payment-tips {\n  margin-top: 30px;\n  text-align: center;\n  color: #909399;\n  font-size: 14px;\n}\n\n.payment-tips p {\n  margin: 5px 0;\n}\n\n/* 移动端优化 */\n@media screen and (max-width: 768px) {\n  .payment-container {\n    padding: 10px;\n  }\n\n  .payment-box {\n    padding: 20px;\n  }\n\n  .wallet-options {\n    grid-template-columns: repeat(2, 1fr);\n  }\n\n  .address-box {\n    flex-direction: column;\n    gap: 10px;\n  }\n\n  .address-box span {\n    word-break: break-all;\n  }\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}