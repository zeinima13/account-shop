{"ast":null,"code":"import _objectSpread from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport { defineComponent, useSlots, reactive, ref, computed, watch, h, Comment, openBlock, createElementBlock, normalizeClass, unref, createVNode, withCtx, renderSlot, createElementVNode, toDisplayString, createCommentVNode } from 'vue';\nimport { ElButton } from '../../button/index.mjs';\nimport { ElIcon } from '../../icon/index.mjs';\nimport { ArrowLeft, ArrowRight } from '@element-plus/icons-vue';\nimport { transferProps, transferEmits } from './transfer.mjs';\nimport TransferPanel from './transfer-panel2.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useComputedData } from './composables/use-computed-data.mjs';\nimport { useMove } from './composables/use-move.mjs';\nimport { useCheckedChange } from './composables/use-checked-change.mjs';\nimport { useLocale } from '../../../hooks/use-locale/index.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { useFormItem } from '../../form/src/hooks/use-form-item.mjs';\nimport { usePropsAlias } from './composables/use-props-alias.mjs';\nimport { debugWarn } from '../../../utils/error.mjs';\nimport { isEmpty, isUndefined } from '../../../utils/types.mjs';\nvar __default__ = defineComponent({\n  name: \"ElTransfer\"\n});\nvar _sfc_main = /* @__PURE__ */defineComponent(_objectSpread(_objectSpread({}, __default__), {}, {\n  props: transferProps,\n  emits: transferEmits,\n  setup: function setup(__props, _ref) {\n    var expose = _ref.expose,\n      emit = _ref.emit;\n    var props = __props;\n    var slots = useSlots();\n    var _useLocale = useLocale(),\n      t = _useLocale.t;\n    var ns = useNamespace(\"transfer\");\n    var _useFormItem = useFormItem(),\n      formItem = _useFormItem.formItem;\n    var checkedState = reactive({\n      leftChecked: [],\n      rightChecked: []\n    });\n    var propsAlias = usePropsAlias(props);\n    var _useComputedData = useComputedData(props),\n      sourceData = _useComputedData.sourceData,\n      targetData = _useComputedData.targetData;\n    var _useCheckedChange = useCheckedChange(checkedState, emit),\n      onSourceCheckedChange = _useCheckedChange.onSourceCheckedChange,\n      onTargetCheckedChange = _useCheckedChange.onTargetCheckedChange;\n    var _useMove = useMove(props, checkedState, emit),\n      addToLeft = _useMove.addToLeft,\n      addToRight = _useMove.addToRight;\n    var leftPanel = ref();\n    var rightPanel = ref();\n    var clearQuery = function clearQuery(which) {\n      switch (which) {\n        case \"left\":\n          leftPanel.value.query = \"\";\n          break;\n        case \"right\":\n          rightPanel.value.query = \"\";\n          break;\n      }\n    };\n    var hasButtonTexts = computed(function () {\n      return props.buttonTexts.length === 2;\n    });\n    var leftPanelTitle = computed(function () {\n      return props.titles[0] || t(\"el.transfer.titles.0\");\n    });\n    var rightPanelTitle = computed(function () {\n      return props.titles[1] || t(\"el.transfer.titles.1\");\n    });\n    var panelFilterPlaceholder = computed(function () {\n      return props.filterPlaceholder || t(\"el.transfer.filterPlaceholder\");\n    });\n    watch(function () {\n      return props.modelValue;\n    }, function () {\n      var _a;\n      if (props.validateEvent) {\n        (_a = formItem == null ? void 0 : formItem.validate) == null ? void 0 : _a.call(formItem, \"change\")[\"catch\"](function (err) {\n          return debugWarn(err);\n        });\n      }\n    });\n    var optionRender = computed(function () {\n      return function (option) {\n        var _a;\n        if (props.renderContent) return props.renderContent(h, option);\n        var defaultSlotVNodes = (((_a = slots[\"default\"]) == null ? void 0 : _a.call(slots, {\n          option: option\n        })) || []).filter(function (node) {\n          return node.type !== Comment;\n        });\n        if (defaultSlotVNodes.length) {\n          return defaultSlotVNodes;\n        }\n        return h(\"span\", option[propsAlias.value.label] || option[propsAlias.value.key]);\n      };\n    });\n    expose({\n      clearQuery: clearQuery,\n      leftPanel: leftPanel,\n      rightPanel: rightPanel\n    });\n    return function (_ctx, _cache) {\n      return openBlock(), createElementBlock(\"div\", {\n        \"class\": normalizeClass(unref(ns).b())\n      }, [createVNode(TransferPanel, {\n        ref_key: \"leftPanel\",\n        ref: leftPanel,\n        data: unref(sourceData),\n        \"option-render\": unref(optionRender),\n        placeholder: unref(panelFilterPlaceholder),\n        title: unref(leftPanelTitle),\n        filterable: _ctx.filterable,\n        format: _ctx.format,\n        \"filter-method\": _ctx.filterMethod,\n        \"default-checked\": _ctx.leftDefaultChecked,\n        props: props.props,\n        onCheckedChange: unref(onSourceCheckedChange)\n      }, {\n        empty: withCtx(function () {\n          return [renderSlot(_ctx.$slots, \"left-empty\")];\n        }),\n        \"default\": withCtx(function () {\n          return [renderSlot(_ctx.$slots, \"left-footer\")];\n        }),\n        _: 3\n      }, 8, [\"data\", \"option-render\", \"placeholder\", \"title\", \"filterable\", \"format\", \"filter-method\", \"default-checked\", \"props\", \"onCheckedChange\"]), createElementVNode(\"div\", {\n        \"class\": normalizeClass(unref(ns).e(\"buttons\"))\n      }, [createVNode(unref(ElButton), {\n        type: \"primary\",\n        \"class\": normalizeClass([unref(ns).e(\"button\"), unref(ns).is(\"with-texts\", unref(hasButtonTexts))]),\n        disabled: unref(isEmpty)(checkedState.rightChecked),\n        onClick: unref(addToLeft)\n      }, {\n        \"default\": withCtx(function () {\n          return [createVNode(unref(ElIcon), null, {\n            \"default\": withCtx(function () {\n              return [createVNode(unref(ArrowLeft))];\n            }),\n            _: 1\n          }), !unref(isUndefined)(_ctx.buttonTexts[0]) ? (openBlock(), createElementBlock(\"span\", {\n            key: 0\n          }, toDisplayString(_ctx.buttonTexts[0]), 1)) : createCommentVNode(\"v-if\", true)];\n        }),\n        _: 1\n      }, 8, [\"class\", \"disabled\", \"onClick\"]), createVNode(unref(ElButton), {\n        type: \"primary\",\n        \"class\": normalizeClass([unref(ns).e(\"button\"), unref(ns).is(\"with-texts\", unref(hasButtonTexts))]),\n        disabled: unref(isEmpty)(checkedState.leftChecked),\n        onClick: unref(addToRight)\n      }, {\n        \"default\": withCtx(function () {\n          return [!unref(isUndefined)(_ctx.buttonTexts[1]) ? (openBlock(), createElementBlock(\"span\", {\n            key: 0\n          }, toDisplayString(_ctx.buttonTexts[1]), 1)) : createCommentVNode(\"v-if\", true), createVNode(unref(ElIcon), null, {\n            \"default\": withCtx(function () {\n              return [createVNode(unref(ArrowRight))];\n            }),\n            _: 1\n          })];\n        }),\n        _: 1\n      }, 8, [\"class\", \"disabled\", \"onClick\"])], 2), createVNode(TransferPanel, {\n        ref_key: \"rightPanel\",\n        ref: rightPanel,\n        data: unref(targetData),\n        \"option-render\": unref(optionRender),\n        placeholder: unref(panelFilterPlaceholder),\n        filterable: _ctx.filterable,\n        format: _ctx.format,\n        \"filter-method\": _ctx.filterMethod,\n        title: unref(rightPanelTitle),\n        \"default-checked\": _ctx.rightDefaultChecked,\n        props: props.props,\n        onCheckedChange: unref(onTargetCheckedChange)\n      }, {\n        empty: withCtx(function () {\n          return [renderSlot(_ctx.$slots, \"right-empty\")];\n        }),\n        \"default\": withCtx(function () {\n          return [renderSlot(_ctx.$slots, \"right-footer\")];\n        }),\n        _: 3\n      }, 8, [\"data\", \"option-render\", \"placeholder\", \"filterable\", \"format\", \"filter-method\", \"title\", \"default-checked\", \"props\", \"onCheckedChange\"])], 2);\n    };\n  }\n}));\nvar Transfer = /* @__PURE__ */_export_sfc(_sfc_main, [[\"__file\", \"transfer.vue\"]]);\nexport { Transfer as default };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}