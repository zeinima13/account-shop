{"ast":null,"code":"import \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport { computed, unref, isRef, ref, inject } from 'vue';\nimport { get } from 'lodash-unified';\nimport English from '../../locale/lang/en.mjs';\nvar buildTranslator = function buildTranslator(locale) {\n  return function (path, option) {\n    return translate(path, option, unref(locale));\n  };\n};\nvar translate = function translate(path, option, locale) {\n  return get(locale, path, path).replace(/\\{(\\w+)\\}/g, function (_, key) {\n    var _a;\n    return \"\".concat((_a = option == null ? void 0 : option[key]) != null ? _a : \"{\".concat(key, \"}\"));\n  });\n};\nvar buildLocaleContext = function buildLocaleContext(locale) {\n  var lang = computed(function () {\n    return unref(locale).name;\n  });\n  var localeRef = isRef(locale) ? locale : ref(locale);\n  return {\n    lang: lang,\n    locale: localeRef,\n    t: buildTranslator(locale)\n  };\n};\nvar localeContextKey = Symbol(\"localeContextKey\");\nvar useLocale = function useLocale(localeOverrides) {\n  var locale = localeOverrides || inject(localeContextKey, ref());\n  return buildLocaleContext(computed(function () {\n    return locale.value || English;\n  }));\n};\nexport { buildLocaleContext, buildTranslator, localeContextKey, translate, useLocale };","map":{"version":3,"names":["buildTranslator","locale","path","option","translate","unref","get","replace","_","key","_a","concat","buildLocaleContext","lang","computed","name","localeRef","isRef","ref","t","localeContextKey","Symbol","useLocale","localeOverrides","inject","value","English"],"sources":["../../../../../packages/hooks/use-locale/index.ts"],"sourcesContent":["import { computed, inject, isRef, ref, unref } from 'vue'\nimport { get } from 'lodash-unified'\nimport English from '@element-plus/locale/lang/en'\n\nimport type { MaybeRef } from '@vueuse/core'\nimport type { InjectionKey, Ref } from 'vue'\nimport type { Language } from '@element-plus/locale'\n\nexport type TranslatorOption = Record<string, string | number>\nexport type Translator = (path: string, option?: TranslatorOption) => string\nexport type LocaleContext = {\n  locale: Ref<Language>\n  lang: Ref<string>\n  t: Translator\n}\n\nexport const buildTranslator =\n  (locale: MaybeRef<Language>): Translator =>\n  (path, option) =>\n    translate(path, option, unref(locale))\n\nexport const translate = (\n  path: string,\n  option: undefined | TranslatorOption,\n  locale: Language\n): string =>\n  (get(locale, path, path) as string).replace(\n    /\\{(\\w+)\\}/g,\n    (_, key) => `${option?.[key] ?? `{${key}}`}`\n  )\n\nexport const buildLocaleContext = (\n  locale: MaybeRef<Language>\n): LocaleContext => {\n  const lang = computed(() => unref(locale).name)\n  const localeRef = isRef(locale) ? locale : ref(locale)\n  return {\n    lang,\n    locale: localeRef,\n    t: buildTranslator(locale),\n  }\n}\n\nexport const localeContextKey: InjectionKey<Ref<Language | undefined>> =\n  Symbol('localeContextKey')\n\nexport const useLocale = (localeOverrides?: Ref<Language | undefined>) => {\n  const locale = localeOverrides || inject(localeContextKey, ref())!\n  return buildLocaleContext(computed(() => locale.value || English))\n}\n"],"mappings":";;;;;;;;;AAGY,IAACA,eAAe,GAAG,SAAlBA,eAAeA,CAAIC,MAAM;EAAA,OAAK,UAACC,IAAI,EAAEC,MAAM;IAAA,OAAKC,SAAS,CAACF,IAAI,EAAEC,MAAM,EAAEE,KAAK,CAACJ,MAAM,CAAC;EAAA;AAAA;AACtF,IAACG,SAAS,GAAG,SAAZA,SAASA,CAAIF,IAAI,EAAEC,MAAM,EAAEF,MAAM;EAAA,OAAKK,GAAG,CAACL,MAAM,EAAEC,IAAI,EAAEA,IAAI,CAAC,CAACK,OAAO,CAAC,YAAY,EAAE,UAACC,CAAC,EAAEC,GAAG,EAAK;IAC3G,IAAIC,EAAE;IACN,UAAAC,MAAA,CAAU,CAACD,EAAE,GAAGP,MAAM,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,MAAM,CAACM,GAAG,CAAC,KAAK,IAAI,GAAGC,EAAE,OAAAC,MAAA,CAAOF,GAAG,MAAG;EAClF,CAAC;AAAA;AACW,IAACG,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAIX,MAAM,EAAK;EAC5C,IAAMY,IAAI,GAAGC,QAAQ,CAAC;IAAA,OAAMT,KAAK,CAACJ,MAAM,CAAC,CAACc,IAAI;EAAA,EAAC;EAC/C,IAAMC,SAAS,GAAGC,KAAK,CAAChB,MAAM,CAAC,GAAGA,MAAM,GAAGiB,GAAG,CAACjB,MAAM,CAAC;EACtD,OAAO;IACLY,IAAI,EAAJA,IAAI;IACJZ,MAAM,EAAEe,SAAS;IACjBG,CAAC,EAAEnB,eAAe,CAACC,MAAM;EAC7B,CAAG;AACH;AACY,IAACmB,gBAAgB,GAAGC,MAAM,CAAC,kBAAkB;AAC7C,IAACC,SAAS,GAAG,SAAZA,SAASA,CAAIC,eAAe,EAAK;EAC5C,IAAMtB,MAAM,GAAGsB,eAAe,IAAIC,MAAM,CAACJ,gBAAgB,EAAEF,GAAG,EAAE,CAAC;EACjE,OAAON,kBAAkB,CAACE,QAAQ,CAAC;IAAA,OAAMb,MAAM,CAACwB,KAAK,IAAIC,OAAO;EAAA,EAAC,CAAC;AACpE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}