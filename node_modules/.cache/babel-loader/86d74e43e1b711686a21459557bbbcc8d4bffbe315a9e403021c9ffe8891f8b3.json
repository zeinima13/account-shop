{"ast":null,"code":"import _objectSpread from \"C:/Users/ASUS/CascadeProjects/account-shop/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport { defineComponent, inject, watch, computed, openBlock, createElementBlock, Fragment, unref, normalizeClass, createVNode, withCtx, createBlock, resolveDynamicComponent, createCommentVNode, createElementVNode, renderSlot, toDisplayString, renderList, mergeProps, createTextVNode } from 'vue';\nimport { omit } from 'lodash-unified';\nimport { ElButton } from '../../button/index.mjs';\nimport { ElIcon } from '../../icon/index.mjs';\nimport { tourStepProps, tourStepEmits } from './step.mjs';\nimport { tourKey } from './helper.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useLocale } from '../../../hooks/use-locale/index.mjs';\nimport { CloseComponents } from '../../../utils/vue/icon.mjs';\nvar __default__ = defineComponent({\n  name: \"ElTourStep\"\n});\nvar _sfc_main = /* @__PURE__ */defineComponent(_objectSpread(_objectSpread({}, __default__), {}, {\n  props: tourStepProps,\n  emits: tourStepEmits,\n  setup: function setup(__props, _ref) {\n    var emit = _ref.emit;\n    var props = __props;\n    var Close = CloseComponents.Close;\n    var _useLocale = useLocale(),\n      t = _useLocale.t;\n    var _inject = inject(tourKey),\n      currentStep = _inject.currentStep,\n      current = _inject.current,\n      total = _inject.total,\n      showClose = _inject.showClose,\n      closeIcon = _inject.closeIcon,\n      mergedType = _inject.mergedType,\n      ns = _inject.ns,\n      tourSlots = _inject.slots,\n      updateModelValue = _inject.updateModelValue,\n      tourOnClose = _inject.onClose,\n      tourOnFinish = _inject.onFinish,\n      onChange = _inject.onChange;\n    watch(props, function (val) {\n      currentStep.value = val;\n    }, {\n      immediate: true\n    });\n    var mergedShowClose = computed(function () {\n      var _a;\n      return (_a = props.showClose) != null ? _a : showClose.value;\n    });\n    var mergedCloseIcon = computed(function () {\n      var _a, _b;\n      return (_b = (_a = props.closeIcon) != null ? _a : closeIcon.value) != null ? _b : Close;\n    });\n    var filterButtonProps = function filterButtonProps(btnProps) {\n      if (!btnProps) return;\n      return omit(btnProps, [\"children\", \"onClick\"]);\n    };\n    var onPrev = function onPrev() {\n      var _a, _b;\n      current.value -= 1;\n      if ((_a = props.prevButtonProps) == null ? void 0 : _a.onClick) {\n        (_b = props.prevButtonProps) == null ? void 0 : _b.onClick();\n      }\n      onChange();\n    };\n    var onNext = function onNext() {\n      var _a;\n      if (current.value >= total.value - 1) {\n        onFinish();\n      } else {\n        current.value += 1;\n      }\n      if ((_a = props.nextButtonProps) == null ? void 0 : _a.onClick) {\n        props.nextButtonProps.onClick();\n      }\n      onChange();\n    };\n    var onFinish = function onFinish() {\n      onClose();\n      tourOnFinish();\n    };\n    var onClose = function onClose() {\n      updateModelValue(false);\n      tourOnClose();\n      emit(\"close\");\n    };\n    return function (_ctx, _cache) {\n      return openBlock(), createElementBlock(Fragment, null, [unref(mergedShowClose) ? (openBlock(), createElementBlock(\"button\", {\n        key: 0,\n        \"aria-label\": \"Close\",\n        \"class\": normalizeClass(unref(ns).e(\"closebtn\")),\n        type: \"button\",\n        onClick: onClose\n      }, [createVNode(unref(ElIcon), {\n        \"class\": normalizeClass(unref(ns).e(\"close\"))\n      }, {\n        \"default\": withCtx(function () {\n          return [(openBlock(), createBlock(resolveDynamicComponent(unref(mergedCloseIcon))))];\n        }),\n        _: 1\n      }, 8, [\"class\"])], 2)) : createCommentVNode(\"v-if\", true), createElementVNode(\"header\", {\n        \"class\": normalizeClass([unref(ns).e(\"header\"), {\n          \"show-close\": unref(showClose)\n        }])\n      }, [renderSlot(_ctx.$slots, \"header\", {}, function () {\n        return [createElementVNode(\"span\", {\n          role: \"heading\",\n          \"class\": normalizeClass(unref(ns).e(\"title\"))\n        }, toDisplayString(_ctx.title), 3)];\n      })], 2), createElementVNode(\"div\", {\n        \"class\": normalizeClass(unref(ns).e(\"body\"))\n      }, [renderSlot(_ctx.$slots, \"default\", {}, function () {\n        return [createElementVNode(\"span\", null, toDisplayString(_ctx.description), 1)];\n      })], 2), createElementVNode(\"footer\", {\n        \"class\": normalizeClass(unref(ns).e(\"footer\"))\n      }, [createElementVNode(\"div\", {\n        \"class\": normalizeClass(unref(ns).b(\"indicators\"))\n      }, [unref(tourSlots).indicators ? (openBlock(), createBlock(resolveDynamicComponent(unref(tourSlots).indicators), {\n        key: 0,\n        current: unref(current),\n        total: unref(total)\n      }, null, 8, [\"current\", \"total\"])) : (openBlock(true), createElementBlock(Fragment, {\n        key: 1\n      }, renderList(unref(total), function (item, index) {\n        return openBlock(), createElementBlock(\"span\", {\n          key: item,\n          \"class\": normalizeClass([unref(ns).b(\"indicator\"), index === unref(current) ? \"is-active\" : \"\"])\n        }, null, 2);\n      }), 128))], 2), createElementVNode(\"div\", {\n        \"class\": normalizeClass(unref(ns).b(\"buttons\"))\n      }, [unref(current) > 0 ? (openBlock(), createBlock(unref(ElButton), mergeProps({\n        key: 0,\n        size: \"small\",\n        type: unref(mergedType)\n      }, filterButtonProps(_ctx.prevButtonProps), {\n        onClick: onPrev\n      }), {\n        \"default\": withCtx(function () {\n          var _a, _b;\n          return [createTextVNode(toDisplayString((_b = (_a = _ctx.prevButtonProps) == null ? void 0 : _a.children) != null ? _b : unref(t)(\"el.tour.previous\")), 1)];\n        }),\n        _: 1\n      }, 16, [\"type\"])) : createCommentVNode(\"v-if\", true), unref(current) <= unref(total) - 1 ? (openBlock(), createBlock(unref(ElButton), mergeProps({\n        key: 1,\n        size: \"small\",\n        type: unref(mergedType) === \"primary\" ? \"default\" : \"primary\"\n      }, filterButtonProps(_ctx.nextButtonProps), {\n        onClick: onNext\n      }), {\n        \"default\": withCtx(function () {\n          var _a, _b;\n          return [createTextVNode(toDisplayString((_b = (_a = _ctx.nextButtonProps) == null ? void 0 : _a.children) != null ? _b : unref(current) === unref(total) - 1 ? unref(t)(\"el.tour.finish\") : unref(t)(\"el.tour.next\")), 1)];\n        }),\n        _: 1\n      }, 16, [\"type\"])) : createCommentVNode(\"v-if\", true)], 2)], 2)], 64);\n    };\n  }\n}));\nvar TourStep = /* @__PURE__ */_export_sfc(_sfc_main, [[\"__file\", \"step.vue\"]]);\nexport { TourStep as default };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}